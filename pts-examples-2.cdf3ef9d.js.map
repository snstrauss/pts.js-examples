{"version":3,"sources":["lib/pts.js","examples/1_basic.js","examples/2_squeare.js","examples/index.js","index.js"],"names":["root","factory","exports","module","define","amd","window","modules","installedModules","__webpack_require__","moduleId","i","l","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","Space_1","Form_1","Pt_1","Util_1","Typography_1","Op_1","CanvasSpace","elem","callback","_pixelScale","_autoResize","_bgcolor","_offscreen","_initialResize","_selector","id","Element","document","querySelector","substr","nodeName","toLowerCase","_container","_canvas","_createElement","appendChild","parentElement","body","setTimeout","_ready","_ctx","getContext","MultiTouchSpace","createElement","setAttribute","Error","k","_isReady","_resizeHandler","clear","dispatchEvent","Event","players","start","bound","clone","_pointer","center","opt","bgcolor","autoResize","undefined","resize","retina","r1","devicePixelRatio","r2","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","Math","max","offscreen","_offCanvas","_offCtx","b","evt","width","size","x","height","y","style","floor","scale","translate","render","isPlaying","playOnce","getBoundingClientRect","box","Bound","fromBoundingRect","add","pageXOffset","pageYOffset","CanvasForm","bg","lastColor","fillStyle","fillRect","clearRect","time","save","restore","auto","addEventListener","removeEventListener","space","_style","strokeStyle","lineWidth","lineJoin","lineCap","globalAlpha","_space","ctx","font","_font","VisualForm","off","clearOffscreen","hasOffscreen","offscreenCtx","offset","drawImage","offscreenCanvas","a","filled","linejoin","linecap","stroked","stops","vals","length","push","len","v","area1","area2","map","abs","grad","createRadialGradient","createLinearGradient","addColorStop","globalCompositeOperation","clip","segments","setLineDash","lineDashOffset","sizeOrFont","weight","lineHeight","family","face","_estimateTextWidth","fontWidthEstimate","estimate","Typography","textWidthEstimator","measureText","str","tail","truncate","getTextWidth","vertical","Rectangle","px","textAlign","py","Pt","Font","_filled","fill","_stroked","stroke","radius","shape","_paint","pts","circle","pt","rotation","startAngle","endAngle","Const","two_pi","cc","ellipse","arc","halfsize","square","line","polygon","rect","img","target","original","image","txt","maxWidth","text","verticalAlign","textBaseline","_textTruncate","_textAlign","crop","lstep","lines","nextLine","sub","buffer","newln","indexOf","dt","lastIndexOf","lsize","lbox","lpad","Group","$add","$subtract","alignment","baseline","w","beginPath","closePath","x1","y1","x2","y2","moveTo","lineTo","orig","fillText","Num_1","Color","args","_mode","_isNorm","toMode","convert","fname","toUpperCase","to","toNorm","ranges","Num","mapToRange","normalize","format","_hex","toString","alpha","Util","getArgs","hex","fn","substring","hexVal","parseInt","from","zipSlice","$take","rgb","normalizedInput","normalizedOutput","$normalize","g","min","h","hsl","q","sc","hsb","f","XYZtoLAB","RGBtoXYZ","lab","XYZtoRGB","LABtoXYZ","LABtoLCH","RGBtoLAB","lch","LABtoRGB","LCHtoLAB","XYZtoLUV","luv","LUVtoXYZ","pow","xyz","z","round","divide","D65","cy","nnn","u","refU","refV","L","cubeY","Geom","toDegree","boundRadian","atan2","sqrt","rad","toRadian","cos","sin","LinearAlgebra_1","Create","count","dimensions","random","depth","ln","Line","subpoints","unshift","columns","rows","orientation","unit","$divide","$multiply","topLeft","angleOffset","half_pi","toAngle","dx","dy","seed","np","Noise","initNoise","Delaunay","__noise_grad3","__noise_permTable","perm","_n","concat","j","n00","Vec","dot","n01","n10","n11","_fade","tx","lerp","arguments","_mesh","triangleOnly","indices","sort","slice","st","_superTriangle","opened","_circum","closed","tris","edges","circum","triangle","splice","epsilon","_dedupe","_cache","vs","neighborPts","cs","sortEdges","minPt","maxPt","$min","$max","mid","dmax","tri","_triangle","Triangle","circumcircle","DOMSpace","_css","refresh","styles","background","innerHTML","val","update","backgroundColor","appendTo","data","HTMLSpace","HTMLForm","player","querySelectorAll","scopeID","forEach","el","parentNode","removeChild","parent","autoClass","group","groupID","groupCount","currentID","currentClass","element","assign","styleTo","group_id","nextID","item","animateID","updateScope","point","warn","domID","setAttr","join","htmlElement","getID","class","rectStyle","_checkSize","textContent","textStyle","Form","required","groups","rest","_multiple","magnitude","make","ceil","Number","MIN_VALUE","index","MAX_VALUE","Mat","isNum","transposed","elementwise","ai","alen","transpose","bi","blen","defaultValue","useLongest","ps","reduce","zip","cosA","sinA","tanX","tanY","sx","sy","at","scale2DMatrix","rotate2DMatrix","shear2DMatrix","p1","p2","intercept","yi","ang2","atan","slope","threshold","sum","method","Shaping","sineInOut","currA","currB","targetA","targetB","normalizeValue","angle","boundValue","radian","deg_to_rad","rad_to_deg","average","ptOrIndex","axis","xy","pa","pb","boundPt1","boundPt2","within","bounds","boundingBox","da","db","det","$cross2D","anchor","Array","isArray","scs","lenP","rotateAt2DMatrix","transform2D","shearAt2DMatrix","tanx","tan","tany","mat","reflectAt2DMatrix","Float64Array","PI","table","boundAngle","t2","t4","bounceOut","bounceIn","exp","A","B","om2a","curve","Curve","bezierStep","controlPoints","steps","tt","Range","_dims","_source","fromPtArray","calc","dims","mag","_max","_min","_mag","exclude","_errorLength","obj","param","xi","p3","$cross","equals","magnitudeSq","asProjection","proj","$project","perpendicularFromPt","la","lb","intersectRay2D","withinBound","ray","lineOrRay","poly","sourceIsRay","intersectLineWithRay2D","intersectLine2D","next","lines1","lines2","isRay","lenk","_ip","gridPt","subtract","intersectGridWithRay2D","gg","hasIntersectRect2D","intersectLines2D","sides","num","interpolate","cropAsCircle","ls","multiply","fromCenter","sideIdx","graphic","atTail","perpendicular","widthOrSize","fromTopLeft","half","Circle","fromRect","enclose","maxValue","minValue","p0","corners","rects","merged","flatten","_center","ratio","asRows","rect1","rect2","incircle","disc","discSqrt","t1","dv","dr2","dr","ar","br","ar2","br2","ang","inc","top","left","toTriangle","fromCircle","Polygon","midpoints","opp","oppositeSide","altitude","bisector","incenter","area","perimeter","total","md","medial","circumcenter","centroid","idx","sp","split","_errorOutofBound","gs","right","adjacentSides","sorted","dq","bot","hull","originIndex","_near","_item","unitAxis","poly1","poly2","projectAxis","lineAt","info","which","dist","normal","edge","vertex","minDist","MAX_SAFE_INTEGER","_axisOverlap","plen","b1","b2","c1","c2","smallest","lp","ins","intersectPolygon2D","polys","boxes","ts","copyStart","_index","ctrls","params","getSteps","catmullRomStep","cp","step","_calcPt","tension","cardinalStep","h2","h3","bsplineTensionStep","bsplineStep","World","friction","gravity","_lastTime","_gravity","_friction","_damping","_particles","_bodies","_pnames","_bnames","_bound","fromGroup","ms","_updateParticles","_updateBodies","_drawParticles","_drawBodies","Body","bodyIndex","particleIndex","prevDt","addForce","verlet","integrate","boundConstraint","collide","bds","klen","bk","processBody","mlen","processParticle","processEdges","stiff","precise","m1","mass","m2","mm","delta","distSq","damping","changed","previous","Particle","_mass","_radius","_force","_prev","_lock","lastDt","_lockPt","lt","damp","dp","np1","np2","f1","f2","dm1","dm2","_body","_cs","_stiff","_locks","list","index1","index2","link","nd","n2","edgeConstraint","hit","hasIntersectPolygon","cv","eg","lambda","m0","mr0","mr1","hasIntersectCircle","autoLink","autoMass","init","linkAll","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","e","rejected","result","done","then","apply","Tempo","bpm","_listeners","_listenerInc","listener","beats","self","_createID","period","duration","continuous","progress","li","_t","_ms","isStart","clamp","ftime","track","type","_bpm","Sound","_playing","_type","AudioContext","webkitAudioContext","buf","_node","createBufferSource","_buffer","onended","createOscillator","osc","setPeriodicWave","frequency","node","connect","minDb","maxDb","smooth","createAnalyser","fftSize","minDecibels","maxDecibels","smoothingTimeConstant","analyzer","frequencyBinCount","Uint8Array","getByteTimeDomainData","getByteFrequencyData","position","trim","timeDomain","freqDomain","_domain","_domainTo","stop","disconnect","timeAt","state","resume","_timestamp","currentTime","play","_gen","destination","pause","_stream","getAudioTracks","dur","curr","readyState","sampleRate","stream","source","crossOrigin","Audio","autoplay","createMediaElementSource","url","request","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","createBuffer","err","send","constraint","navigator","audio","video","mediaDevices","getUserMedia","createMediaStreamSource","console","error","Float32Array","anchorFromPt","change","fns","_ops","op","toArray","cross2D","cross","rotate2D","shear2D","reflect2D","_id","randomize","chunkSize","stride","loopBack","pts_per_segment","chunk","tc","moveBy","dim","desc","ptFn","forEachPt","_size","_topLeft","_bottomRight","_inited","_updateSize","_updateCenter","_updatePosFromTop","_updatePosFromCenter","bottom","UI_1","Space","_time","prev","diff","end","playerCount","_animID","_pause","_refresh","animate","pid","inited","requestAnimationFrame","playItems","cancelAnimationFrame","toggle","context","_renderFunc","_pressed","_dragged","_hasMouse","_hasTouch","bindCanvas","_mouseDown","_mouseUp","_mouseOver","_mouseOut","_mouseMove","_contextMenu","unbindCanvas","_touchStart","_touchMove","pageX","pageY","MouseEvent","outerBound","action","changedTouches","touch","_mouseAction","UIPointerActions","down","drop","up","move","drag","over","out","contextmenu","preventDefault","Dom_1","SVGSpace","svgElement","SVGForm","createElementNS","cx","largeArc","pi","sweep","_poly","points","fromArray","samples","distribution","avg","nh","direction","defaultSize","UIShape","rectangle","polyline","uidrag","uidrop","enter","leave","all","UI","states","_holds","Map","_group","_shape","_counter","_states","_actions","_addHandler","_removeHandler","_within","values","_trigger","newKey","keys","set","delete","hasIntersectPoint","ui","uis","listen","temp","UIButton","_hoverID","hover","clicks","UA","on","_capID","hold","unhold","ids","enterID","leaveID","UIDragger","_draggingID","_moveHoldID","_dropHoldID","_upHoldID","dragging","moved","endDrag","yz","xz","horizontal","identical","bottom_right","bottom_left","top_left","top_right","quarter_pi","one_degree","newton","gaussian","lv","_warnLevel","pos","ArrayBuffer","isView","message","defaultReturn","warnLevel","range","matchSize","chunks","part","flattenAsGroup","arr","lenB","arrays","status","responseText","onerror","__export","_Canvas","namespace","scope","lib","quickStart","setup","form","getForm","bindMouse","bindTouch","timeFactor","basic","shearing","cycle","triangles","pointer","circles","fillOnly","strokeOnly","polygons","PTS_COUNT","colors","boundSpace","distributeRandom","animation","distanceFromCenter","rangeAroundPointer","sortedPts","in","ptColor","normalizedDist","examples","title","FIRST_EXAMPLE","nav","colorCorrectNavButton","selected","button","classList","example","innerText","playExample","exampleIdx","removeAll"],"mappings":"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","file":"pts-examples-2.cdf3ef9d.js","sourceRoot":"..","sourcesContent":["/*!\n * pts.js 0.9.2 - Copyright © 2017-2020 William Ngan and contributors.\n * Licensed under Apache 2.0 License.\n * See https://github.com/williamngan/pts for details.\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pts\"] = factory();\n\telse\n\t\troot[\"Pts\"] = factory();\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./src/_lib.ts\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./src/Canvas.ts\":\n/*!***********************!*\\\n  !*** ./src/Canvas.ts ***!\n  \\***********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Space_1 = __webpack_require__(/*! ./Space */ \"./src/Space.ts\");\nconst Form_1 = __webpack_require__(/*! ./Form */ \"./src/Form.ts\");\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nconst Typography_1 = __webpack_require__(/*! ./Typography */ \"./src/Typography.ts\");\nconst Op_1 = __webpack_require__(/*! ./Op */ \"./src/Op.ts\");\nclass CanvasSpace extends Space_1.MultiTouchSpace {\n    constructor(elem, callback) {\n        super();\n        this._pixelScale = 1;\n        this._autoResize = true;\n        this._bgcolor = \"#e1e9f0\";\n        this._offscreen = false;\n        this._initialResize = false;\n        var _selector = null;\n        var _existed = false;\n        this.id = \"pt\";\n        if (elem instanceof Element) {\n            _selector = elem;\n            this.id = \"pts_existing_space\";\n        }\n        else {\n            let id = elem;\n            id = (elem[0] === \"#\" || elem[0] === \".\") ? elem : \"#\" + elem;\n            _selector = document.querySelector(id);\n            _existed = true;\n            this.id = id.substr(1);\n        }\n        if (!_selector) {\n            this._container = this._createElement(\"div\", this.id + \"_container\");\n            this._canvas = this._createElement(\"canvas\", this.id);\n            this._container.appendChild(this._canvas);\n            document.body.appendChild(this._container);\n            _existed = false;\n        }\n        else if (_selector.nodeName.toLowerCase() != \"canvas\") {\n            this._container = _selector;\n            this._canvas = this._createElement(\"canvas\", this.id + \"_canvas\");\n            this._container.appendChild(this._canvas);\n            this._initialResize = true;\n        }\n        else {\n            this._canvas = _selector;\n            this._container = _selector.parentElement;\n            this._autoResize = false;\n        }\n        setTimeout(this._ready.bind(this, callback), 100);\n        this._ctx = this._canvas.getContext('2d');\n    }\n    _createElement(elem = \"div\", id) {\n        let d = document.createElement(elem);\n        d.setAttribute(\"id\", id);\n        return d;\n    }\n    _ready(callback) {\n        if (!this._container)\n            throw new Error(`Cannot initiate #${this.id} element`);\n        this._isReady = true;\n        this._resizeHandler(null);\n        this.clear(this._bgcolor);\n        this._canvas.dispatchEvent(new Event(\"ready\"));\n        for (let k in this.players) {\n            if (this.players.hasOwnProperty(k)) {\n                if (this.players[k].start)\n                    this.players[k].start(this.bound.clone(), this);\n            }\n        }\n        this._pointer = this.center;\n        this._initialResize = false;\n        if (callback)\n            callback(this.bound, this._canvas);\n    }\n    setup(opt) {\n        if (opt.bgcolor)\n            this._bgcolor = opt.bgcolor;\n        this.autoResize = (opt.resize != undefined) ? opt.resize : false;\n        if (opt.retina !== false) {\n            let r1 = window.devicePixelRatio || 1;\n            let r2 = this._ctx.webkitBackingStorePixelRatio || this._ctx.mozBackingStorePixelRatio || this._ctx.msBackingStorePixelRatio || this._ctx.oBackingStorePixelRatio || this._ctx.backingStorePixelRatio || 1;\n            this._pixelScale = Math.max(1, r1 / r2);\n        }\n        if (opt.offscreen) {\n            this._offscreen = true;\n            this._offCanvas = this._createElement(\"canvas\", this.id + \"_offscreen\");\n            this._offCtx = this._offCanvas.getContext('2d');\n        }\n        else {\n            this._offscreen = false;\n        }\n        return this;\n    }\n    set autoResize(auto) {\n        this._autoResize = auto;\n        if (auto) {\n            window.addEventListener('resize', this._resizeHandler.bind(this));\n        }\n        else {\n            window.removeEventListener('resize', this._resizeHandler.bind(this));\n        }\n    }\n    get autoResize() { return this._autoResize; }\n    resize(b, evt) {\n        this.bound = b;\n        this._canvas.width = this.bound.size.x * this._pixelScale;\n        this._canvas.height = this.bound.size.y * this._pixelScale;\n        this._canvas.style.width = Math.floor(this.bound.size.x) + \"px\";\n        this._canvas.style.height = Math.floor(this.bound.size.y) + \"px\";\n        if (this._offscreen) {\n            this._offCanvas.width = this.bound.size.x * this._pixelScale;\n            this._offCanvas.height = this.bound.size.y * this._pixelScale;\n        }\n        if (this._pixelScale != 1) {\n            this._ctx.scale(this._pixelScale, this._pixelScale);\n            this._ctx.translate(0.5, 0.5);\n            if (this._offscreen) {\n                this._offCtx.scale(this._pixelScale, this._pixelScale);\n                this._offCtx.translate(0.5, 0.5);\n            }\n        }\n        for (let k in this.players) {\n            if (this.players.hasOwnProperty(k)) {\n                let p = this.players[k];\n                if (p.resize)\n                    p.resize(this.bound, evt);\n            }\n        }\n        this.render(this._ctx);\n        if (evt && !this.isPlaying)\n            this.playOnce(0);\n        return this;\n    }\n    _resizeHandler(evt) {\n        let b = (this._autoResize || this._initialResize) ? this._container.getBoundingClientRect() : this._canvas.getBoundingClientRect();\n        if (b) {\n            let box = Pt_1.Bound.fromBoundingRect(b);\n            box.center = box.center.add(window.pageXOffset, window.pageYOffset);\n            this.resize(box, evt);\n        }\n    }\n    set background(bg) { this._bgcolor = bg; }\n    get background() { return this._bgcolor; }\n    get pixelScale() {\n        return this._pixelScale;\n    }\n    get hasOffscreen() {\n        return this._offscreen;\n    }\n    get offscreenCtx() { return this._offCtx; }\n    get offscreenCanvas() { return this._offCanvas; }\n    getForm() { return new CanvasForm(this); }\n    get element() {\n        return this._canvas;\n    }\n    get parent() {\n        return this._container;\n    }\n    get ready() {\n        return this._isReady;\n    }\n    get ctx() { return this._ctx; }\n    clear(bg) {\n        if (bg)\n            this._bgcolor = bg;\n        let lastColor = this._ctx.fillStyle;\n        if (this._bgcolor && this._bgcolor != \"transparent\") {\n            this._ctx.fillStyle = this._bgcolor;\n            this._ctx.fillRect(-1, -1, this._canvas.width + 1, this._canvas.height + 1);\n        }\n        else {\n            this._ctx.clearRect(-1, -1, this._canvas.width + 1, this._canvas.height + 1);\n        }\n        this._ctx.fillStyle = lastColor;\n        return this;\n    }\n    clearOffscreen(bg) {\n        if (this._offscreen) {\n            if (bg) {\n                this._offCtx.fillStyle = bg;\n                this._offCtx.fillRect(-1, -1, this._canvas.width + 1, this._canvas.height + 1);\n            }\n            else {\n                this._offCtx.clearRect(-1, -1, this._offCanvas.width + 1, this._offCanvas.height + 1);\n            }\n        }\n        return this;\n    }\n    playItems(time) {\n        if (this._isReady) {\n            this._ctx.save();\n            if (this._offscreen)\n                this._offCtx.save();\n            super.playItems(time);\n            this._ctx.restore();\n            if (this._offscreen)\n                this._offCtx.restore();\n            this.render(this._ctx);\n        }\n    }\n}\nexports.CanvasSpace = CanvasSpace;\nclass CanvasForm extends Form_1.VisualForm {\n    constructor(space) {\n        super();\n        this._style = {\n            fillStyle: \"#f03\", strokeStyle: \"#fff\",\n            lineWidth: 1, lineJoin: \"bevel\", lineCap: \"butt\",\n            globalAlpha: 1\n        };\n        this._space = space;\n        this._space.add({ start: () => {\n                this._ctx = this._space.ctx;\n                this._ctx.fillStyle = this._style.fillStyle;\n                this._ctx.strokeStyle = this._style.strokeStyle;\n                this._ctx.lineJoin = \"bevel\";\n                this._ctx.font = this._font.value;\n                this._ready = true;\n            } });\n    }\n    get space() { return this._space; }\n    get ctx() { return this._space.ctx; }\n    useOffscreen(off = true, clear = false) {\n        if (clear)\n            this._space.clearOffscreen((typeof clear == \"string\") ? clear : null);\n        this._ctx = (this._space.hasOffscreen && off) ? this._space.offscreenCtx : this._space.ctx;\n        return this;\n    }\n    renderOffscreen(offset = [0, 0]) {\n        if (this._space.hasOffscreen) {\n            this._space.ctx.drawImage(this._space.offscreenCanvas, offset[0], offset[1], this._space.width, this._space.height);\n        }\n    }\n    alpha(a) {\n        this._ctx.globalAlpha = a;\n        this._style.globalAlpha = a;\n        return this;\n    }\n    fill(c) {\n        if (typeof c == \"boolean\") {\n            this.filled = c;\n        }\n        else {\n            this.filled = true;\n            this._style.fillStyle = c;\n            this._ctx.fillStyle = c;\n        }\n        return this;\n    }\n    stroke(c, width, linejoin, linecap) {\n        if (typeof c == \"boolean\") {\n            this.stroked = c;\n        }\n        else {\n            this.stroked = true;\n            this._style.strokeStyle = c;\n            this._ctx.strokeStyle = c;\n            if (width) {\n                this._ctx.lineWidth = width;\n                this._style.lineWidth = width;\n            }\n            if (linejoin) {\n                this._ctx.lineJoin = linejoin;\n                this._style.lineJoin = linejoin;\n            }\n            if (linecap) {\n                this._ctx.lineCap = linecap;\n                this._style.lineCap = linecap;\n            }\n        }\n        return this;\n    }\n    gradient(stops) {\n        let vals = [];\n        if (stops.length < 2)\n            stops.push([0.99, \"#000\"], [1, \"#000\"]);\n        for (let i = 0, len = stops.length; i < len; i++) {\n            let t = typeof stops[i] === 'string' ? i * (1 / (stops.length - 1)) : stops[i][0];\n            let v = typeof stops[i] === 'string' ? stops[i] : stops[i][1];\n            vals.push([t, v]);\n        }\n        return (area1, area2) => {\n            area1 = area1.map(a => a.abs());\n            if (area2)\n                area2.map(a => a.abs());\n            let grad = area2\n                ? this.ctx.createRadialGradient(area1[0][0], area1[0][1], area1[1][0], area2[0][0], area2[0][1], area2[1][0])\n                : this.ctx.createLinearGradient(area1[0][0], area1[0][1], area1[1][0], area1[1][1]);\n            for (let i = 0, len = vals.length; i < len; i++) {\n                grad.addColorStop(vals[i][0], vals[i][1]);\n            }\n            return grad;\n        };\n    }\n    composite(mode = 'source-over') {\n        this.ctx.globalCompositeOperation = mode;\n        return this;\n    }\n    clip() {\n        this.ctx.clip();\n        return this;\n    }\n    dash(segments = true, offset = 0) {\n        if (!segments) {\n            this._ctx.setLineDash([]);\n            this._ctx.lineDashOffset = 0;\n        }\n        else {\n            if (segments === true) {\n                segments = [5, 5];\n            }\n            this._ctx.setLineDash([segments[0], segments[1]]);\n            this._ctx.lineDashOffset = offset;\n        }\n        return this;\n    }\n    font(sizeOrFont, weight, style, lineHeight, family) {\n        if (typeof sizeOrFont == \"number\") {\n            this._font.size = sizeOrFont;\n            if (family)\n                this._font.face = family;\n            if (weight)\n                this._font.weight = weight;\n            if (style)\n                this._font.style = style;\n            if (lineHeight)\n                this._font.lineHeight = lineHeight;\n        }\n        else {\n            this._font = sizeOrFont;\n        }\n        this._ctx.font = this._font.value;\n        if (this._estimateTextWidth)\n            this.fontWidthEstimate(true);\n        return this;\n    }\n    fontWidthEstimate(estimate = true) {\n        this._estimateTextWidth = (estimate) ? Typography_1.Typography.textWidthEstimator(((c) => this._ctx.measureText(c).width)) : undefined;\n        return this;\n    }\n    getTextWidth(c) {\n        return (!this._estimateTextWidth) ? this._ctx.measureText(c + \" .\").width : this._estimateTextWidth(c);\n    }\n    _textTruncate(str, width, tail = \"\") {\n        return Typography_1.Typography.truncate(this.getTextWidth.bind(this), str, width, tail);\n    }\n    _textAlign(box, vertical, offset, center) {\n        if (!center)\n            center = Op_1.Rectangle.center(box);\n        var px = box[0][0];\n        if (this._ctx.textAlign == \"end\" || this._ctx.textAlign == \"right\") {\n            px = box[1][0];\n        }\n        else if (this._ctx.textAlign == \"center\" || this._ctx.textAlign == \"middle\") {\n            px = center[0];\n        }\n        var py = center[1];\n        if (vertical == \"top\" || vertical == \"start\") {\n            py = box[0][1];\n        }\n        else if (vertical == \"end\" || vertical == \"bottom\") {\n            py = box[1][1];\n        }\n        return (offset) ? new Pt_1.Pt(px + offset[0], py + offset[1]) : new Pt_1.Pt(px, py);\n    }\n    reset() {\n        for (let k in this._style) {\n            if (this._style.hasOwnProperty(k)) {\n                this._ctx[k] = this._style[k];\n            }\n        }\n        this._font = new Form_1.Font();\n        this._ctx.font = this._font.value;\n        return this;\n    }\n    _paint() {\n        if (this._filled)\n            this._ctx.fill();\n        if (this._stroked)\n            this._ctx.stroke();\n    }\n    point(p, radius = 5, shape = \"square\") {\n        if (!p)\n            return;\n        if (!CanvasForm[shape])\n            throw new Error(`${shape} is not a static function of CanvasForm`);\n        CanvasForm[shape](this._ctx, p, radius);\n        this._paint();\n        return this;\n    }\n    static circle(ctx, pt, radius = 10) {\n        if (!pt)\n            return;\n        ctx.beginPath();\n        ctx.arc(pt[0], pt[1], radius, 0, Util_1.Const.two_pi, false);\n        ctx.closePath();\n    }\n    circle(pts) {\n        CanvasForm.circle(this._ctx, pts[0], pts[1][0]);\n        this._paint();\n        return this;\n    }\n    static ellipse(ctx, pt, radius, rotation = 0, startAngle = 0, endAngle = Util_1.Const.two_pi, cc = false) {\n        if (!pt || !radius)\n            return;\n        ctx.beginPath();\n        ctx.ellipse(pt[0], pt[1], radius[0], radius[1], rotation, startAngle, endAngle, cc);\n    }\n    ellipse(pt, radius, rotation = 0, startAngle = 0, endAngle = Util_1.Const.two_pi, cc = false) {\n        CanvasForm.ellipse(this._ctx, pt, radius, rotation, startAngle, endAngle, cc);\n        this._paint();\n        return this;\n    }\n    static arc(ctx, pt, radius, startAngle, endAngle, cc) {\n        if (!pt)\n            return;\n        ctx.beginPath();\n        ctx.arc(pt[0], pt[1], radius, startAngle, endAngle, cc);\n    }\n    arc(pt, radius, startAngle, endAngle, cc) {\n        CanvasForm.arc(this._ctx, pt, radius, startAngle, endAngle, cc);\n        this._paint();\n        return this;\n    }\n    static square(ctx, pt, halfsize) {\n        if (!pt)\n            return;\n        let x1 = pt[0] - halfsize;\n        let y1 = pt[1] - halfsize;\n        let x2 = pt[0] + halfsize;\n        let y2 = pt[1] + halfsize;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x1, y2);\n        ctx.lineTo(x2, y2);\n        ctx.lineTo(x2, y1);\n        ctx.closePath();\n    }\n    square(pt, halfsize) {\n        CanvasForm.square(this._ctx, pt, halfsize);\n        this._paint();\n        return this;\n    }\n    static line(ctx, pts) {\n        if (pts.length < 2)\n            return;\n        ctx.beginPath();\n        ctx.moveTo(pts[0][0], pts[0][1]);\n        for (let i = 1, len = pts.length; i < len; i++) {\n            if (pts[i])\n                ctx.lineTo(pts[i][0], pts[i][1]);\n        }\n    }\n    line(pts) {\n        CanvasForm.line(this._ctx, pts);\n        this._paint();\n        return this;\n    }\n    static polygon(ctx, pts) {\n        if (pts.length < 2)\n            return;\n        ctx.beginPath();\n        ctx.moveTo(pts[0][0], pts[0][1]);\n        for (let i = 1, len = pts.length; i < len; i++) {\n            if (pts[i])\n                ctx.lineTo(pts[i][0], pts[i][1]);\n        }\n        ctx.closePath();\n    }\n    polygon(pts) {\n        CanvasForm.polygon(this._ctx, pts);\n        this._paint();\n        return this;\n    }\n    static rect(ctx, pts) {\n        if (pts.length < 2)\n            return;\n        ctx.beginPath();\n        ctx.moveTo(pts[0][0], pts[0][1]);\n        ctx.lineTo(pts[0][0], pts[1][1]);\n        ctx.lineTo(pts[1][0], pts[1][1]);\n        ctx.lineTo(pts[1][0], pts[0][1]);\n        ctx.closePath();\n    }\n    rect(pts) {\n        CanvasForm.rect(this._ctx, pts);\n        this._paint();\n        return this;\n    }\n    static image(ctx, img, target = new Pt_1.Pt(), orig) {\n        if (typeof target[0] === \"number\") {\n            ctx.drawImage(img, target[0], target[1]);\n        }\n        else {\n            let t = target;\n            if (orig) {\n                ctx.drawImage(img, orig[0][0], orig[0][1], orig[1][0] - orig[0][0], orig[1][1] - orig[0][1], t[0][0], t[0][1], t[1][0] - t[0][0], t[1][1] - t[0][1]);\n            }\n            else {\n                ctx.drawImage(img, t[0][0], t[0][1], t[1][0] - t[0][0], t[1][1] - t[0][1]);\n            }\n        }\n    }\n    image(img, target, original) {\n        CanvasForm.image(this._ctx, img, target, original);\n        return this;\n    }\n    static text(ctx, pt, txt, maxWidth) {\n        if (!pt)\n            return;\n        ctx.fillText(txt, pt[0], pt[1], maxWidth);\n    }\n    text(pt, txt, maxWidth) {\n        CanvasForm.text(this._ctx, pt, txt, maxWidth);\n        return this;\n    }\n    textBox(box, txt, verticalAlign = \"middle\", tail = \"\", overrideBaseline = true) {\n        if (overrideBaseline)\n            this._ctx.textBaseline = verticalAlign;\n        let size = Op_1.Rectangle.size(box);\n        let t = this._textTruncate(txt, size[0], tail);\n        this.text(this._textAlign(box, verticalAlign), t[0]);\n        return this;\n    }\n    paragraphBox(box, txt, lineHeight = 1.2, verticalAlign = \"top\", crop = true) {\n        let size = Op_1.Rectangle.size(box);\n        this._ctx.textBaseline = \"top\";\n        let lstep = this._font.size * lineHeight;\n        let nextLine = (sub, buffer = [], cc = 0) => {\n            if (!sub)\n                return buffer;\n            if (crop && cc * lstep > size[1] - lstep * 2)\n                return buffer;\n            if (cc > 10000)\n                throw new Error(\"max recursion reached (10000)\");\n            let t = this._textTruncate(sub, size[0], \"\");\n            let newln = t[0].indexOf(\"\\n\");\n            if (newln >= 0) {\n                buffer.push(t[0].substr(0, newln));\n                return nextLine(sub.substr(newln + 1), buffer, cc + 1);\n            }\n            let dt = t[0].lastIndexOf(\" \") + 1;\n            if (dt <= 0 || t[1] === sub.length)\n                dt = undefined;\n            let line = t[0].substr(0, dt);\n            buffer.push(line);\n            return (t[1] <= 0 || t[1] === sub.length) ? buffer : nextLine(sub.substr((dt || t[1])), buffer, cc + 1);\n        };\n        let lines = nextLine(txt);\n        let lsize = lines.length * lstep;\n        let lbox = box;\n        if (verticalAlign == \"middle\" || verticalAlign == \"center\") {\n            let lpad = (size[1] - lsize) / 2;\n            if (crop)\n                lpad = Math.max(0, lpad);\n            lbox = new Pt_1.Group(box[0].$add(0, lpad), box[1].$subtract(0, lpad));\n        }\n        else if (verticalAlign == \"bottom\") {\n            lbox = new Pt_1.Group(box[0].$add(0, size[1] - lsize), box[1]);\n        }\n        else {\n            lbox = new Pt_1.Group(box[0], box[0].$add(size[0], lsize));\n        }\n        let center = Op_1.Rectangle.center(lbox);\n        for (let i = 0, len = lines.length; i < len; i++) {\n            this.text(this._textAlign(lbox, \"top\", [0, i * lstep], center), lines[i]);\n        }\n        return this;\n    }\n    alignText(alignment = \"left\", baseline = \"alphabetic\") {\n        if (baseline == \"center\")\n            baseline = \"middle\";\n        if (baseline == \"baseline\")\n            baseline = \"alphabetic\";\n        this._ctx.textAlign = alignment;\n        this._ctx.textBaseline = baseline;\n        return this;\n    }\n    log(txt) {\n        let w = this._ctx.measureText(txt).width + 20;\n        this.stroke(false).fill(\"rgba(0,0,0,.4)\").rect([[0, 0], [w, 20]]);\n        this.fill(\"#fff\").text([10, 14], txt);\n        return this;\n    }\n}\nexports.CanvasForm = CanvasForm;\n\n\n/***/ }),\n\n/***/ \"./src/Color.ts\":\n/*!**********************!*\\\n  !*** ./src/Color.ts ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nconst Num_1 = __webpack_require__(/*! ./Num */ \"./src/Num.ts\");\nclass Color extends Pt_1.Pt {\n    constructor(...args) {\n        super(...args);\n        this._mode = \"rgb\";\n        this._isNorm = false;\n    }\n    static from(...args) {\n        let p = [1, 1, 1, 1];\n        let c = Util_1.Util.getArgs(args);\n        for (let i = 0, len = p.length; i < len; i++) {\n            if (i < c.length)\n                p[i] = c[i];\n        }\n        return new Color(p);\n    }\n    static fromHex(hex) {\n        if (hex[0] == \"#\")\n            hex = hex.substr(1);\n        if (hex.length <= 3) {\n            let fn = (i) => hex[i] || \"F\";\n            hex = `${fn(0)}${fn(0)}${fn(1)}${fn(1)}${fn(2)}${fn(2)}`;\n        }\n        let alpha = 1;\n        if (hex.length === 8) {\n            alpha = hex.substr(6) && 0xFF / 255;\n            hex = hex.substring(0, 6);\n        }\n        let hexVal = parseInt(hex, 16);\n        return new Color(hexVal >> 16, hexVal >> 8 & 0xFF, hexVal & 0xFF, alpha);\n    }\n    static rgb(...args) { return Color.from(...args).toMode(\"rgb\"); }\n    static hsl(...args) { return Color.from(...args).toMode(\"hsl\"); }\n    static hsb(...args) { return Color.from(...args).toMode(\"hsb\"); }\n    static lab(...args) { return Color.from(...args).toMode(\"lab\"); }\n    static lch(...args) { return Color.from(...args).toMode(\"lch\"); }\n    static luv(...args) { return Color.from(...args).toMode(\"luv\"); }\n    static xyz(...args) { return Color.from(...args).toMode(\"xyz\"); }\n    static maxValues(mode) { return Color.ranges[mode].zipSlice(1).$take([0, 1, 2]); }\n    get hex() { return this.toString(\"hex\"); }\n    get rgb() { return this.toString(\"rgb\"); }\n    get rgba() { return this.toString(\"rgba\"); }\n    clone() {\n        let c = new Color(this);\n        c.toMode(this._mode);\n        return c;\n    }\n    toMode(mode, convert = false) {\n        if (convert) {\n            let fname = this._mode.toUpperCase() + \"to\" + mode.toUpperCase();\n            if (Color[fname]) {\n                this.to(Color[fname](this, this._isNorm, this._isNorm));\n            }\n            else {\n                throw new Error(\"Cannot convert color with \" + fname);\n            }\n        }\n        this._mode = mode;\n        return this;\n    }\n    get mode() { return this._mode; }\n    get r() { return this[0]; }\n    set r(n) { this[0] = n; }\n    get g() { return this[1]; }\n    set g(n) { this[1] = n; }\n    get b() { return this[2]; }\n    set b(n) { this[2] = n; }\n    get h() { return (this._mode == \"lch\") ? this[2] : this[0]; }\n    set h(n) {\n        let i = (this._mode == \"lch\") ? 2 : 0;\n        this[i] = n;\n    }\n    get s() { return this[1]; }\n    set s(n) { this[1] = n; }\n    get l() { return (this._mode == \"hsl\") ? this[2] : this[0]; }\n    set l(n) {\n        let i = (this._mode == \"hsl\") ? 2 : 0;\n        this[i] = n;\n    }\n    get a() { return this[1]; }\n    set a(n) { this[1] = n; }\n    get c() { return this[1]; }\n    set c(n) { this[1] = n; }\n    get u() { return this[1]; }\n    set u(n) { this[1] = n; }\n    get v() { return this[2]; }\n    set v(n) { this[2] = n; }\n    set alpha(n) { if (this.length > 3)\n        this[3] = n; }\n    get alpha() { return (this.length > 3) ? this[3] : 1; }\n    get normalized() { return this._isNorm; }\n    set normalized(b) { this._isNorm = b; }\n    normalize(toNorm = true) {\n        if (this._isNorm == toNorm)\n            return this;\n        let ranges = Color.ranges[this._mode];\n        for (let i = 0; i < 3; i++) {\n            this[i] = (!toNorm)\n                ? Num_1.Num.mapToRange(this[i], 0, 1, ranges[i][0], ranges[i][1])\n                : Num_1.Num.mapToRange(this[i], ranges[i][0], ranges[i][1], 0, 1);\n        }\n        this._isNorm = toNorm;\n        return this;\n    }\n    $normalize(toNorm = true) { return this.clone().normalize(toNorm); }\n    toString(format = \"mode\") {\n        if (format == \"hex\") {\n            let _hex = (n) => {\n                let s = Math.floor(n).toString(16);\n                return (s.length < 2) ? '0' + s : s;\n            };\n            return `#${_hex(this[0])}${_hex(this[1])}${_hex(this[2])}`;\n        }\n        else if (format == \"rgba\") {\n            return `rgba(${Math.floor(this[0])},${Math.floor(this[1])},${Math.floor(this[2])},${this.alpha}`;\n        }\n        else if (format == \"rgb\") {\n            return `rgb(${Math.floor(this[0])},${Math.floor(this[1])},${Math.floor(this[2])}`;\n        }\n        else {\n            return `${this._mode}(${this[0]},${this[1]},${this[2]},${this.alpha})`;\n        }\n    }\n    static RGBtoHSL(rgb, normalizedInput = false, normalizedOutput = false) {\n        let [r, g, b] = (!normalizedInput) ? rgb.$normalize() : rgb;\n        let max = Math.max(r, g, b);\n        let min = Math.min(r, g, b);\n        let h = (max + min) / 2;\n        let s = h;\n        let l = h;\n        if (max == min) {\n            h = 0;\n            s = 0;\n        }\n        else {\n            let d = max - min;\n            s = (l > 0.5) ? d / (2 - max - min) : d / (max + min);\n            h = 0;\n            if (max === r) {\n                h = (g - b) / d + ((g < b) ? 6 : 0);\n            }\n            else if (max === g) {\n                h = (b - r) / d + 2;\n            }\n            else if (max === b) {\n                h = (r - g) / d + 4;\n            }\n        }\n        return Color.hsl(((normalizedOutput) ? h / 60 : h * 60), s, l, rgb.alpha);\n    }\n    static HSLtoRGB(hsl, normalizedInput = false, normalizedOutput = false) {\n        let [h, s, l] = hsl;\n        if (!normalizedInput)\n            h = h / 360;\n        if (s == 0)\n            return Color.rgb(l * 255, l * 255, l * 255, hsl.alpha);\n        let q = (l <= 0.5) ? l * (1 + s) : l + s - (l * s);\n        let p = 2 * l - q;\n        let convert = (t) => {\n            t = (t < 0) ? t + 1 : (t > 1) ? t - 1 : t;\n            if (t * 6 < 1) {\n                return p + (q - p) * t * 6;\n            }\n            else if (t * 2 < 1) {\n                return q;\n            }\n            else if (t * 3 < 2) {\n                return p + (q - p) * ((2 / 3) - t) * 6;\n            }\n            else {\n                return p;\n            }\n        };\n        let sc = (normalizedOutput) ? 1 : 255;\n        return Color.rgb(sc * convert((h + 1 / 3)), sc * convert(h), sc * convert((h - 1 / 3)), hsl.alpha);\n    }\n    static RGBtoHSB(rgb, normalizedInput = false, normalizedOutput = false) {\n        let [r, g, b] = (!normalizedInput) ? rgb.$normalize() : rgb;\n        let max = Math.max(r, g, b);\n        let min = Math.min(r, g, b);\n        let d = max - min;\n        let h = 0;\n        let s = (max === 0) ? 0 : d / max;\n        let v = max;\n        if (max != min) {\n            if (max === r) {\n                h = (g - b) / d + ((g < b) ? 6 : 0);\n            }\n            else if (max === g) {\n                h = (b - r) / d + 2;\n            }\n            else if (max === b) {\n                h = (r - g) / d + 4;\n            }\n        }\n        return Color.hsb(((normalizedOutput) ? h / 60 : h * 60), s, v, rgb.alpha);\n    }\n    static HSBtoRGB(hsb, normalizedInput = false, normalizedOutput = false) {\n        let [h, s, v] = hsb;\n        if (!normalizedInput)\n            h = h / 360;\n        let i = Math.floor(h * 6);\n        let f = h * 6 - i;\n        let p = v * (1 - s);\n        let q = v * (1 - f * s);\n        let t = v * (1 - (1 - f) * s);\n        let pick = [\n            [v, t, p], [q, v, p], [p, v, t],\n            [p, q, v], [t, p, v], [v, p, q]\n        ];\n        let c = pick[i % 6];\n        let sc = (normalizedOutput) ? 1 : 255;\n        return Color.rgb(sc * c[0], sc * c[1], sc * c[2], hsb.alpha);\n    }\n    static RGBtoLAB(rgb, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? rgb.$normalize(false) : rgb;\n        return Color.XYZtoLAB(Color.RGBtoXYZ(c), false, normalizedOutput);\n    }\n    static LABtoRGB(lab, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? lab.$normalize(false) : lab;\n        return Color.XYZtoRGB(Color.LABtoXYZ(c), false, normalizedOutput);\n    }\n    static RGBtoLCH(rgb, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? rgb.$normalize(false) : rgb;\n        return Color.LABtoLCH(Color.RGBtoLAB(c), false, normalizedOutput);\n    }\n    static LCHtoRGB(lch, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? lch.$normalize(false) : lch;\n        return Color.LABtoRGB(Color.LCHtoLAB(c), false, normalizedOutput);\n    }\n    static RGBtoLUV(rgb, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? rgb.$normalize(false) : rgb;\n        return Color.XYZtoLUV(Color.RGBtoXYZ(c), false, normalizedOutput);\n    }\n    static LUVtoRGB(luv, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? luv.$normalize(false) : luv;\n        return Color.XYZtoRGB(Color.LUVtoXYZ(c), false, normalizedOutput);\n    }\n    static RGBtoXYZ(rgb, normalizedInput = false, normalizedOutput = false) {\n        let c = (!normalizedInput) ? rgb.$normalize() : rgb.clone();\n        for (let i = 0; i < 3; i++) {\n            c[i] = (c[i] > 0.04045) ? Math.pow((c[i] + 0.055) / 1.055, 2.4) : c[i] / 12.92;\n            if (!normalizedOutput)\n                c[i] = c[i] * 100;\n        }\n        let cc = Color.xyz(c[0] * 0.4124564 + c[1] * 0.3575761 + c[2] * 0.1804375, c[0] * 0.2126729 + c[1] * 0.7151522 + c[2] * 0.0721750, c[0] * 0.0193339 + c[1] * 0.1191920 + c[2] * 0.9503041, rgb.alpha);\n        return (normalizedOutput) ? cc.normalize() : cc;\n    }\n    static XYZtoRGB(xyz, normalizedInput = false, normalizedOutput = false) {\n        let [x, y, z] = (!normalizedInput) ? xyz.$normalize() : xyz;\n        let rgb = [\n            x * 3.2404542 + y * -1.5371385 + z * -0.4985314,\n            x * -0.9692660 + y * 1.8760108 + z * 0.0415560,\n            x * 0.0556434 + y * -0.2040259 + z * 1.0572252\n        ];\n        for (let i = 0; i < 3; i++) {\n            rgb[i] = (rgb[i] < 0) ? 0 : (rgb[i] > 0.0031308) ? (1.055 * Math.pow(rgb[i], 1 / 2.4) - 0.055) : (12.92 * rgb[i]);\n            rgb[i] = Math.max(0, Math.min(1, rgb[i]));\n            if (!normalizedOutput)\n                rgb[i] = Math.round(rgb[i] * 255);\n        }\n        let cc = Color.rgb(rgb[0], rgb[1], rgb[2], xyz.alpha);\n        return (normalizedOutput) ? cc.normalize() : cc;\n    }\n    static XYZtoLAB(xyz, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? xyz.$normalize(false) : xyz.clone();\n        c.divide(Color.D65);\n        let fn = (n) => (n > 0.008856) ? Math.pow(n, 1 / 3) : (7.787 * n) + 16 / 116;\n        let cy = fn(c[1]);\n        let cc = Color.lab((116 * cy) - 16, 500 * (fn(c[0]) - cy), 200 * (cy - fn(c[2])), xyz.alpha);\n        return (normalizedOutput) ? cc.normalize() : cc;\n    }\n    static LABtoXYZ(lab, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? lab.$normalize(false) : lab;\n        let y = (c[0] + 16) / 116;\n        let x = (c[1] / 500) + y;\n        let z = y - c[2] / 200;\n        let fn = (n) => {\n            let nnn = n * n * n;\n            return (nnn > 0.008856) ? nnn : (n - 16 / 116) / 7.787;\n        };\n        let d = Color.D65;\n        let cc = Color.xyz(Math.max(0, d[0] * fn(x)), Math.max(0, d[1] * fn(y)), Math.max(0, d[2] * fn(z)), lab.alpha);\n        return (normalizedOutput) ? cc.normalize() : cc;\n    }\n    static XYZtoLUV(xyz, normalizedInput = false, normalizedOutput = false) {\n        let [x, y, z] = (normalizedInput) ? xyz.$normalize(false) : xyz;\n        let u = (4 * x) / (x + (15 * y) + (3 * z));\n        let v = (9 * y) / (x + (15 * y) + (3 * z));\n        y = y / 100;\n        y = (y > 0.008856) ? Math.pow(y, 1 / 3) : (7.787 * y + 16 / 116);\n        let refU = (4 * Color.D65[0]) / (Color.D65[0] + (15 * Color.D65[1]) + (3 * Color.D65[2]));\n        let refV = (9 * Color.D65[1]) / (Color.D65[0] + (15 * Color.D65[1]) + (3 * Color.D65[2]));\n        let L = (116 * y) - 16;\n        return Color.luv(L, 13 * L * (u - refU), 13 * L * (v - refV), xyz.alpha);\n    }\n    static LUVtoXYZ(luv, normalizedInput = false, normalizedOutput = false) {\n        let [l, u, v] = (normalizedInput) ? luv.$normalize(false) : luv;\n        let y = (l + 16) / 116;\n        let cubeY = y * y * y;\n        y = (cubeY > 0.008856) ? cubeY : (y - 16 / 116) / 7.787;\n        let refU = (4 * Color.D65[0]) / (Color.D65[0] + (15 * Color.D65[1]) + (3 * Color.D65[2]));\n        let refV = (9 * Color.D65[1]) / (Color.D65[0] + (15 * Color.D65[1]) + (3 * Color.D65[2]));\n        u = u / (13 * l) + refU;\n        v = v / (13 * l) + refV;\n        y = y * 100;\n        let x = -1 * (9 * y * u) / ((u - 4) * v - u * v);\n        let z = (9 * y - (15 * v * y) - (v * x)) / (3 * v);\n        return Color.xyz(x, y, z, luv.alpha);\n    }\n    static LABtoLCH(lab, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? lab.$normalize(false) : lab;\n        let h = Num_1.Geom.toDegree(Num_1.Geom.boundRadian(Math.atan2(c[2], c[1])));\n        return Color.lch(c[0], Math.sqrt(c[1] * c[1] + c[2] * c[2]), h, lab.alpha);\n    }\n    static LCHtoLAB(lch, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? lch.$normalize(false) : lch;\n        let rad = Num_1.Geom.toRadian(c[2]);\n        return Color.lab(c[0], Math.cos(rad) * c[1], Math.sin(rad) * c[1], lch.alpha);\n    }\n}\nColor.D65 = new Pt_1.Pt(95.047, 100, 108.883, 1);\nColor.ranges = {\n    rgb: new Pt_1.Group(new Pt_1.Pt(0, 255), new Pt_1.Pt(0, 255), new Pt_1.Pt(0, 255)),\n    hsl: new Pt_1.Group(new Pt_1.Pt(0, 360), new Pt_1.Pt(0, 1), new Pt_1.Pt(0, 1)),\n    hsb: new Pt_1.Group(new Pt_1.Pt(0, 360), new Pt_1.Pt(0, 1), new Pt_1.Pt(0, 1)),\n    lab: new Pt_1.Group(new Pt_1.Pt(0, 100), new Pt_1.Pt(-128, 127), new Pt_1.Pt(-128, 127)),\n    lch: new Pt_1.Group(new Pt_1.Pt(0, 100), new Pt_1.Pt(0, 100), new Pt_1.Pt(0, 360)),\n    luv: new Pt_1.Group(new Pt_1.Pt(0, 100), new Pt_1.Pt(-134, 220), new Pt_1.Pt(-140, 122)),\n    xyz: new Pt_1.Group(new Pt_1.Pt(0, 100), new Pt_1.Pt(0, 100), new Pt_1.Pt(0, 100))\n};\nexports.Color = Color;\n\n\n/***/ }),\n\n/***/ \"./src/Create.ts\":\n/*!***********************!*\\\n  !*** ./src/Create.ts ***!\n  \\***********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst Op_1 = __webpack_require__(/*! ./Op */ \"./src/Op.ts\");\nconst Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nconst Num_1 = __webpack_require__(/*! ./Num */ \"./src/Num.ts\");\nconst LinearAlgebra_1 = __webpack_require__(/*! ./LinearAlgebra */ \"./src/LinearAlgebra.ts\");\nclass Create {\n    static distributeRandom(bound, count, dimensions = 2) {\n        let pts = new Pt_1.Group();\n        for (let i = 0; i < count; i++) {\n            let p = [bound.x + Math.random() * bound.width];\n            if (dimensions > 1)\n                p.push(bound.y + Math.random() * bound.height);\n            if (dimensions > 2)\n                p.push(bound.z + Math.random() * bound.depth);\n            pts.push(new Pt_1.Pt(p));\n        }\n        return pts;\n    }\n    static distributeLinear(line, count) {\n        let ln = Op_1.Line.subpoints(line, count - 2);\n        ln.unshift(line[0]);\n        ln.push(line[line.length - 1]);\n        return ln;\n    }\n    static gridPts(bound, columns, rows, orientation = [0.5, 0.5]) {\n        if (columns === 0 || rows === 0)\n            throw new Error(\"grid columns and rows cannot be 0\");\n        let unit = bound.size.$subtract(1).$divide(columns, rows);\n        let offset = unit.$multiply(orientation);\n        let g = new Pt_1.Group();\n        for (let r = 0; r < rows; r++) {\n            for (let c = 0; c < columns; c++) {\n                g.push(bound.topLeft.$add(unit.$multiply(c, r)).add(offset));\n            }\n        }\n        return g;\n    }\n    static gridCells(bound, columns, rows) {\n        if (columns === 0 || rows === 0)\n            throw new Error(\"grid columns and rows cannot be 0\");\n        let unit = bound.size.$subtract(1).divide(columns, rows);\n        let g = [];\n        for (let r = 0; r < rows; r++) {\n            for (let c = 0; c < columns; c++) {\n                g.push(new Pt_1.Group(bound.topLeft.$add(unit.$multiply(c, r)), bound.topLeft.$add(unit.$multiply(c, r).add(unit))));\n            }\n        }\n        return g;\n    }\n    static radialPts(center, radius, count, angleOffset = -Util_1.Const.half_pi) {\n        let g = new Pt_1.Group();\n        let a = Util_1.Const.two_pi / count;\n        for (let i = 0; i < count; i++) {\n            g.push(new Pt_1.Pt(center).toAngle(a * i + angleOffset, radius, true));\n        }\n        return g;\n    }\n    static noisePts(pts, dx = 0.01, dy = 0.01, rows = 0, columns = 0) {\n        let seed = Math.random();\n        let g = new Pt_1.Group();\n        for (let i = 0, len = pts.length; i < len; i++) {\n            let np = new Noise(pts[i]);\n            let r = (rows && rows > 0) ? Math.floor(i / rows) : i;\n            let c = (columns && columns > 0) ? i % columns : i;\n            np.initNoise(dx * c, dy * r);\n            np.seed(seed);\n            g.push(np);\n        }\n        return g;\n    }\n    static delaunay(pts) {\n        return Delaunay.from(pts);\n    }\n}\nexports.Create = Create;\nconst __noise_grad3 = [\n    [1, 1, 0], [-1, 1, 0], [1, -1, 0], [-1, -1, 0],\n    [1, 0, 1], [-1, 0, 1], [1, 0, -1], [-1, 0, -1],\n    [0, 1, 1], [0, -1, 1], [0, 1, -1], [0, -1, -1]\n];\nconst __noise_permTable = [151, 160, 137, 91, 90, 15,\n    131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23,\n    190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33,\n    88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166,\n    77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244,\n    102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196,\n    135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123,\n    5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42,\n    223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9,\n    129, 22, 39, 253, 9, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228,\n    251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107,\n    49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254,\n    138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180\n];\nclass Noise extends Pt_1.Pt {\n    constructor(...args) {\n        super(...args);\n        this.perm = [];\n        this._n = new Pt_1.Pt(0.01, 0.01);\n        this.perm = __noise_permTable.concat(__noise_permTable);\n    }\n    initNoise(...args) {\n        this._n = new Pt_1.Pt(...args);\n        return this;\n    }\n    step(x = 0, y = 0) {\n        this._n.add(x, y);\n        return this;\n    }\n    seed(s) {\n        if (s > 0 && s < 1)\n            s *= 65536;\n        s = Math.floor(s);\n        if (s < 256)\n            s |= s << 8;\n        for (let i = 0; i < 255; i++) {\n            let v = (i & 1) ? __noise_permTable[i] ^ (s & 255) : __noise_permTable[i] ^ ((s >> 8) & 255);\n            this.perm[i] = this.perm[i + 256] = v;\n        }\n        return this;\n    }\n    noise2D() {\n        let i = Math.max(0, Math.floor(this._n[0])) % 255;\n        let j = Math.max(0, Math.floor(this._n[1])) % 255;\n        let x = (this._n[0] % 255) - i;\n        let y = (this._n[1] % 255) - j;\n        let n00 = LinearAlgebra_1.Vec.dot(__noise_grad3[(i + this.perm[j]) % 12], [x, y, 0]);\n        let n01 = LinearAlgebra_1.Vec.dot(__noise_grad3[(i + this.perm[j + 1]) % 12], [x, y - 1, 0]);\n        let n10 = LinearAlgebra_1.Vec.dot(__noise_grad3[(i + 1 + this.perm[j]) % 12], [x - 1, y, 0]);\n        let n11 = LinearAlgebra_1.Vec.dot(__noise_grad3[(i + 1 + this.perm[j + 1]) % 12], [x - 1, y - 1, 0]);\n        let _fade = (f) => f * f * f * (f * (f * 6 - 15) + 10);\n        let tx = _fade(x);\n        return Num_1.Num.lerp(Num_1.Num.lerp(n00, n10, tx), Num_1.Num.lerp(n01, n11, tx), _fade(y));\n    }\n}\nexports.Noise = Noise;\nclass Delaunay extends Pt_1.Group {\n    constructor() {\n        super(...arguments);\n        this._mesh = [];\n    }\n    delaunay(triangleOnly = true) {\n        if (this.length < 3)\n            return [];\n        this._mesh = [];\n        let n = this.length;\n        let indices = [];\n        for (let i = 0; i < n; i++)\n            indices[i] = i;\n        indices.sort((i, j) => this[j][0] - this[i][0]);\n        let pts = this.slice();\n        let st = this._superTriangle();\n        pts = pts.concat(st);\n        let opened = [this._circum(n, n + 1, n + 2, st)];\n        let closed = [];\n        let tris = [];\n        for (let i = 0, len = indices.length; i < len; i++) {\n            let c = indices[i];\n            let edges = [];\n            let j = opened.length;\n            if (!this._mesh[c])\n                this._mesh[c] = {};\n            while (j--) {\n                let circum = opened[j];\n                let radius = circum.circle[1][0];\n                let d = pts[c].$subtract(circum.circle[0]);\n                if (d[0] > 0 && d[0] * d[0] > radius * radius) {\n                    closed.push(circum);\n                    tris.push(circum.triangle);\n                    opened.splice(j, 1);\n                    continue;\n                }\n                if (d[0] * d[0] + d[1] * d[1] - radius * radius > Util_1.Const.epsilon) {\n                    continue;\n                }\n                edges.push(circum.i, circum.j, circum.j, circum.k, circum.k, circum.i);\n                opened.splice(j, 1);\n            }\n            Delaunay._dedupe(edges);\n            j = edges.length;\n            while (j > 1) {\n                opened.push(this._circum(edges[--j], edges[--j], c, false, pts));\n            }\n        }\n        for (let i = 0, len = opened.length; i < len; i++) {\n            let o = opened[i];\n            if (o.i < n && o.j < n && o.k < n) {\n                closed.push(o);\n                tris.push(o.triangle);\n                this._cache(o);\n            }\n        }\n        return (triangleOnly) ? tris : closed;\n    }\n    voronoi() {\n        let vs = [];\n        let n = this._mesh;\n        for (let i = 0, len = n.length; i < len; i++) {\n            vs.push(this.neighborPts(i, true));\n        }\n        return vs;\n    }\n    mesh() {\n        return this._mesh;\n    }\n    neighborPts(i, sort = false) {\n        let cs = new Pt_1.Group();\n        let n = this._mesh;\n        for (let k in n[i]) {\n            if (n[i].hasOwnProperty(k))\n                cs.push(n[i][k].circle[0]);\n        }\n        return (sort) ? Num_1.Geom.sortEdges(cs) : cs;\n    }\n    neighbors(i) {\n        let cs = [];\n        let n = this._mesh;\n        for (let k in n[i]) {\n            if (n[i].hasOwnProperty(k))\n                cs.push(n[i][k]);\n        }\n        return cs;\n    }\n    _cache(o) {\n        this._mesh[o.i][`${Math.min(o.j, o.k)}-${Math.max(o.j, o.k)}`] = o;\n        this._mesh[o.j][`${Math.min(o.i, o.k)}-${Math.max(o.i, o.k)}`] = o;\n        this._mesh[o.k][`${Math.min(o.i, o.j)}-${Math.max(o.i, o.j)}`] = o;\n    }\n    _superTriangle() {\n        let minPt = this[0];\n        let maxPt = this[0];\n        for (let i = 1, len = this.length; i < len; i++) {\n            minPt = minPt.$min(this[i]);\n            maxPt = maxPt.$max(this[i]);\n        }\n        let d = maxPt.$subtract(minPt);\n        let mid = minPt.$add(maxPt).divide(2);\n        let dmax = Math.max(d[0], d[1]);\n        return new Pt_1.Group(mid.$subtract(20 * dmax, dmax), mid.$add(0, 20 * dmax), mid.$add(20 * dmax, -dmax));\n    }\n    _triangle(i, j, k, pts = this) {\n        return new Pt_1.Group(pts[i], pts[j], pts[k]);\n    }\n    _circum(i, j, k, tri, pts = this) {\n        let t = tri || this._triangle(i, j, k, pts);\n        return {\n            i: i,\n            j: j,\n            k: k,\n            triangle: t,\n            circle: Op_1.Triangle.circumcircle(t)\n        };\n    }\n    static _dedupe(edges) {\n        let j = edges.length;\n        while (j > 1) {\n            let b = edges[--j];\n            let a = edges[--j];\n            let i = j;\n            while (i > 1) {\n                let n = edges[--i];\n                let m = edges[--i];\n                if ((a == m && b == n) || (a == n && b == m)) {\n                    edges.splice(j, 2);\n                    edges.splice(i, 2);\n                    break;\n                }\n            }\n        }\n        return edges;\n    }\n}\nexports.Delaunay = Delaunay;\n\n\n/***/ }),\n\n/***/ \"./src/Dom.ts\":\n/*!********************!*\\\n  !*** ./src/Dom.ts ***!\n  \\********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Space_1 = __webpack_require__(/*! ./Space */ \"./src/Space.ts\");\nconst Form_1 = __webpack_require__(/*! ./Form */ \"./src/Form.ts\");\nconst Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nclass DOMSpace extends Space_1.MultiTouchSpace {\n    constructor(elem, callback) {\n        super();\n        this.id = \"domspace\";\n        this._autoResize = true;\n        this._bgcolor = \"#e1e9f0\";\n        this._css = {};\n        var _selector = null;\n        var _existed = false;\n        this.id = \"pts\";\n        if (elem instanceof Element) {\n            _selector = elem;\n            this.id = \"pts_existing_space\";\n        }\n        else {\n            _selector = document.querySelector(elem);\n            _existed = true;\n            this.id = elem.substr(1);\n        }\n        if (!_selector) {\n            this._container = DOMSpace.createElement(\"div\", \"pts_container\");\n            this._canvas = DOMSpace.createElement(\"div\", \"pts_element\");\n            this._container.appendChild(this._canvas);\n            document.body.appendChild(this._container);\n            _existed = false;\n        }\n        else {\n            this._canvas = _selector;\n            this._container = _selector.parentElement;\n        }\n        setTimeout(this._ready.bind(this, callback), 50);\n    }\n    static createElement(elem = \"div\", id, appendTo) {\n        let d = document.createElement(elem);\n        if (id)\n            d.setAttribute(\"id\", id);\n        if (appendTo && appendTo.appendChild)\n            appendTo.appendChild(d);\n        return d;\n    }\n    _ready(callback) {\n        if (!this._container)\n            throw new Error(`Cannot initiate #${this.id} element`);\n        this._isReady = true;\n        this._resizeHandler(null);\n        this.clear(this._bgcolor);\n        this._canvas.dispatchEvent(new Event(\"ready\"));\n        for (let k in this.players) {\n            if (this.players.hasOwnProperty(k)) {\n                if (this.players[k].start)\n                    this.players[k].start(this.bound.clone(), this);\n            }\n        }\n        this._pointer = this.center;\n        this.refresh(false);\n        if (callback)\n            callback(this.bound, this._canvas);\n    }\n    setup(opt) {\n        if (opt.bgcolor) {\n            this._bgcolor = opt.bgcolor;\n        }\n        this.autoResize = (opt.resize != undefined) ? opt.resize : false;\n        return this;\n    }\n    getForm() {\n        return null;\n    }\n    set autoResize(auto) {\n        this._autoResize = auto;\n        if (auto) {\n            window.addEventListener('resize', this._resizeHandler.bind(this));\n        }\n        else {\n            delete this._css['width'];\n            delete this._css['height'];\n            window.removeEventListener('resize', this._resizeHandler.bind(this));\n        }\n    }\n    get autoResize() { return this._autoResize; }\n    resize(b, evt) {\n        this.bound = b;\n        this.styles({ width: `${b.width}px`, height: `${b.height}px` }, true);\n        for (let k in this.players) {\n            if (this.players.hasOwnProperty(k)) {\n                let p = this.players[k];\n                if (p.resize)\n                    p.resize(this.bound, evt);\n            }\n        }\n        return this;\n    }\n    _resizeHandler(evt) {\n        let b = Pt_1.Bound.fromBoundingRect(this._container.getBoundingClientRect());\n        if (this._autoResize) {\n            this.styles({ width: \"100%\", height: \"100%\" }, true);\n        }\n        else {\n            this.styles({ width: `${b.width}px`, height: `${b.height}px` }, true);\n        }\n        this.resize(b, evt);\n    }\n    get element() {\n        return this._canvas;\n    }\n    get parent() {\n        return this._container;\n    }\n    get ready() { return this._isReady; }\n    clear(bg) {\n        if (bg)\n            this.background = bg;\n        this._canvas.innerHTML = \"\";\n        return this;\n    }\n    set background(bg) {\n        this._bgcolor = bg;\n        this._container.style.backgroundColor = this._bgcolor;\n    }\n    get background() { return this._bgcolor; }\n    style(key, val, update = false) {\n        this._css[key] = val;\n        if (update)\n            this._canvas.style[key] = val;\n        return this;\n    }\n    styles(styles, update = false) {\n        for (let k in styles) {\n            if (styles.hasOwnProperty(k))\n                this.style(k, styles[k], update);\n        }\n        return this;\n    }\n    static setAttr(elem, data) {\n        for (let k in data) {\n            if (data.hasOwnProperty(k)) {\n                elem.setAttribute(k, data[k]);\n            }\n        }\n        return elem;\n    }\n    static getInlineStyles(data) {\n        let str = \"\";\n        for (let k in data) {\n            if (data.hasOwnProperty(k)) {\n                if (data[k])\n                    str += `${k}: ${data[k]}; `;\n            }\n        }\n        return str;\n    }\n}\nexports.DOMSpace = DOMSpace;\nclass HTMLSpace extends DOMSpace {\n    getForm() {\n        return new HTMLForm(this);\n    }\n    static htmlElement(parent, name, id, autoClass = true) {\n        if (!parent || !parent.appendChild)\n            throw new Error(\"parent is not a valid DOM element\");\n        let elem = document.querySelector(`#${id}`);\n        if (!elem) {\n            elem = document.createElement(name);\n            elem.setAttribute(\"id\", id);\n            if (autoClass)\n                elem.setAttribute(\"class\", id.substring(0, id.indexOf(\"-\")));\n            parent.appendChild(elem);\n        }\n        return elem;\n    }\n    remove(player) {\n        let temp = this._container.querySelectorAll(\".\" + HTMLForm.scopeID(player));\n        temp.forEach((el) => {\n            el.parentNode.removeChild(el);\n        });\n        return super.remove(player);\n    }\n    removeAll() {\n        this._container.innerHTML = \"\";\n        return super.removeAll();\n    }\n}\nexports.HTMLSpace = HTMLSpace;\nclass HTMLForm extends Form_1.VisualForm {\n    constructor(space) {\n        super();\n        this._style = {\n            \"filled\": true,\n            \"stroked\": true,\n            \"background\": \"#f03\",\n            \"border-color\": \"#fff\",\n            \"color\": \"#000\",\n            \"border-width\": \"1px\",\n            \"border-radius\": \"0\",\n            \"border-style\": \"solid\",\n            \"opacity\": 1,\n            \"position\": \"absolute\",\n            \"top\": 0,\n            \"left\": 0,\n            \"width\": 0,\n            \"height\": 0\n        };\n        this._ctx = {\n            group: null,\n            groupID: \"pts\",\n            groupCount: 0,\n            currentID: \"pts0\",\n            currentClass: \"\",\n            style: {},\n        };\n        this._ready = false;\n        this._space = space;\n        this._space.add({ start: () => {\n                this._ctx.group = this._space.element;\n                this._ctx.groupID = \"pts_dom_\" + (HTMLForm.groupID++);\n                this._ctx.style = Object.assign({}, this._style);\n                this._ready = true;\n            } });\n    }\n    get space() { return this._space; }\n    styleTo(k, v, unit = '') {\n        if (this._ctx.style[k] === undefined)\n            throw new Error(`${k} style property doesn't exist`);\n        this._ctx.style[k] = `${v}${unit}`;\n    }\n    alpha(a) {\n        this.styleTo(\"opacity\", a);\n        return this;\n    }\n    fill(c) {\n        if (typeof c == \"boolean\") {\n            this.styleTo(\"filled\", c);\n            if (!c)\n                this.styleTo(\"background\", \"transparent\");\n        }\n        else {\n            this.styleTo(\"filled\", true);\n            this.styleTo(\"background\", c);\n        }\n        return this;\n    }\n    stroke(c, width, linejoin, linecap) {\n        if (typeof c == \"boolean\") {\n            this.styleTo(\"stroked\", c);\n            if (!c)\n                this.styleTo(\"border-width\", 0);\n        }\n        else {\n            this.styleTo(\"stroked\", true);\n            this.styleTo(\"border-color\", c);\n            this.styleTo(\"border-width\", (width || 1) + \"px\");\n        }\n        return this;\n    }\n    fillText(c) {\n        this.styleTo(\"color\", c);\n        return this;\n    }\n    cls(c) {\n        if (typeof c == \"boolean\") {\n            this._ctx.currentClass = \"\";\n        }\n        else {\n            this._ctx.currentClass = c;\n        }\n        return this;\n    }\n    font(sizeOrFont, weight, style, lineHeight, family) {\n        if (typeof sizeOrFont == \"number\") {\n            this._font.size = sizeOrFont;\n            if (family)\n                this._font.face = family;\n            if (weight)\n                this._font.weight = weight;\n            if (style)\n                this._font.style = style;\n            if (lineHeight)\n                this._font.lineHeight = lineHeight;\n        }\n        else {\n            this._font = sizeOrFont;\n        }\n        this._ctx.style['font'] = this._font.value;\n        return this;\n    }\n    reset() {\n        this._ctx.style = Object.assign({}, this._style);\n        this._font = new Form_1.Font(10, \"sans-serif\");\n        this._ctx.style['font'] = this._font.value;\n        return this;\n    }\n    updateScope(group_id, group) {\n        this._ctx.group = group;\n        this._ctx.groupID = group_id;\n        this._ctx.groupCount = 0;\n        this.nextID();\n        return this._ctx;\n    }\n    scope(item) {\n        if (!item || item.animateID == null)\n            throw new Error(\"item not defined or not yet added to Space\");\n        return this.updateScope(HTMLForm.scopeID(item), this.space.element);\n    }\n    nextID() {\n        this._ctx.groupCount++;\n        this._ctx.currentID = `${this._ctx.groupID}-${this._ctx.groupCount}`;\n        return this._ctx.currentID;\n    }\n    static getID(ctx) {\n        return ctx.currentID || `p-${HTMLForm.domID++}`;\n    }\n    static scopeID(item) {\n        return `item-${item.animateID}`;\n    }\n    static style(elem, styles) {\n        let st = [];\n        if (!styles[\"filled\"])\n            st.push(\"background: none\");\n        if (!styles[\"stroked\"])\n            st.push(\"border: none\");\n        for (let k in styles) {\n            if (styles.hasOwnProperty(k) && k != \"filled\" && k != \"stroked\") {\n                let v = styles[k];\n                if (v) {\n                    if (!styles[\"filled\"] && k.indexOf('background') === 0) {\n                        continue;\n                    }\n                    else if (!styles[\"stroked\"] && k.indexOf('border-width') === 0) {\n                        continue;\n                    }\n                    else {\n                        st.push(`${k}: ${v}`);\n                    }\n                }\n            }\n        }\n        return HTMLSpace.setAttr(elem, { style: st.join(\";\") });\n    }\n    static rectStyle(ctx, pt, size) {\n        ctx.style[\"left\"] = pt[0] + \"px\";\n        ctx.style[\"top\"] = pt[1] + \"px\";\n        ctx.style[\"width\"] = size[0] + \"px\";\n        ctx.style[\"height\"] = size[1] + \"px\";\n        return ctx;\n    }\n    static textStyle(ctx, pt) {\n        ctx.style[\"left\"] = pt[0] + \"px\";\n        ctx.style[\"top\"] = pt[1] + \"px\";\n        return ctx;\n    }\n    static point(ctx, pt, radius = 5, shape = \"square\") {\n        if (shape === \"circle\") {\n            return HTMLForm.circle(ctx, pt, radius);\n        }\n        else {\n            return HTMLForm.square(ctx, pt, radius);\n        }\n    }\n    point(pt, radius = 5, shape = \"square\") {\n        this.nextID();\n        if (shape == \"circle\")\n            this.styleTo(\"border-radius\", \"100%\");\n        HTMLForm.point(this._ctx, pt, radius, shape);\n        return this;\n    }\n    static circle(ctx, pt, radius = 10) {\n        let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n        HTMLSpace.setAttr(elem, { class: `pts-form pts-circle ${ctx.currentClass}` });\n        HTMLForm.rectStyle(ctx, new Pt_1.Pt(pt).$subtract(radius), new Pt_1.Pt(radius * 2, radius * 2));\n        HTMLForm.style(elem, ctx.style);\n        return elem;\n    }\n    circle(pts) {\n        this.nextID();\n        this.styleTo(\"border-radius\", \"100%\");\n        HTMLForm.circle(this._ctx, pts[0], pts[1][0]);\n        return this;\n    }\n    static square(ctx, pt, halfsize) {\n        let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n        HTMLSpace.setAttr(elem, { class: `pts-form pts-square ${ctx.currentClass}` });\n        HTMLForm.rectStyle(ctx, new Pt_1.Pt(pt).$subtract(halfsize), new Pt_1.Pt(halfsize * 2, halfsize * 2));\n        HTMLForm.style(elem, ctx.style);\n        return elem;\n    }\n    square(pt, halfsize) {\n        this.nextID();\n        HTMLForm.square(this._ctx, pt, halfsize);\n        return this;\n    }\n    static rect(ctx, pts) {\n        if (!this._checkSize(pts))\n            return;\n        let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n        HTMLSpace.setAttr(elem, { class: `pts-form pts-rect ${ctx.currentClass}` });\n        HTMLForm.rectStyle(ctx, pts[0], pts[1]);\n        HTMLForm.style(elem, ctx.style);\n        return elem;\n    }\n    rect(pts) {\n        this.nextID();\n        this.styleTo(\"border-radius\", \"0\");\n        HTMLForm.rect(this._ctx, pts);\n        return this;\n    }\n    static text(ctx, pt, txt) {\n        let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n        HTMLSpace.setAttr(elem, { class: `pts-form pts-text ${ctx.currentClass}` });\n        elem.textContent = txt;\n        HTMLForm.textStyle(ctx, pt);\n        HTMLForm.style(elem, ctx.style);\n        return elem;\n    }\n    text(pt, txt) {\n        this.nextID();\n        HTMLForm.text(this._ctx, pt, txt);\n        return this;\n    }\n    log(txt) {\n        this.fill(\"#000\").stroke(\"#fff\", 0.5).text([10, 14], txt);\n        return this;\n    }\n    arc(pt, radius, startAngle, endAngle, cc) {\n        Util_1.Util.warn(\"arc is not implemented in HTMLForm\");\n        return this;\n    }\n    line(pts) {\n        Util_1.Util.warn(\"line is not implemented in HTMLForm\");\n        return this;\n    }\n    polygon(pts) {\n        Util_1.Util.warn(\"polygon is not implemented in HTMLForm\");\n        return this;\n    }\n}\nHTMLForm.groupID = 0;\nHTMLForm.domID = 0;\nexports.HTMLForm = HTMLForm;\n\n\n/***/ }),\n\n/***/ \"./src/Form.ts\":\n/*!*********************!*\\\n  !*** ./src/Form.ts ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nclass Form {\n    constructor() {\n        this._ready = false;\n    }\n    get ready() { return this._ready; }\n    static _checkSize(pts, required = 2) {\n        if (pts.length < required) {\n            Util_1.Util.warn(\"Requires 2 or more Pts in this Group.\");\n            return false;\n        }\n        return true;\n    }\n}\nexports.Form = Form;\nclass VisualForm extends Form {\n    constructor() {\n        super(...arguments);\n        this._filled = true;\n        this._stroked = true;\n        this._font = new Font(14, \"sans-serif\");\n    }\n    get filled() { return this._filled; }\n    set filled(b) { this._filled = b; }\n    get stroked() { return this._stroked; }\n    set stroked(b) { this._stroked = b; }\n    get currentFont() { return this._font; }\n    _multiple(groups, shape, ...rest) {\n        if (!groups)\n            return this;\n        for (let i = 0, len = groups.length; i < len; i++) {\n            this[shape](groups[i], ...rest);\n        }\n        return this;\n    }\n    alpha(a) {\n        return this;\n    }\n    fill(c) {\n        return this;\n    }\n    fillOnly(c) {\n        this.stroke(false);\n        return this.fill(c);\n    }\n    stroke(c, width, linejoin, linecap) {\n        return this;\n    }\n    strokeOnly(c, width, linejoin, linecap) {\n        this.fill(false);\n        return this.stroke(c, width, linejoin, linecap);\n    }\n    points(pts, radius, shape) {\n        if (!pts)\n            return;\n        for (let i = 0, len = pts.length; i < len; i++) {\n            this.point(pts[i], radius, shape);\n        }\n        return this;\n    }\n    circles(groups) {\n        return this._multiple(groups, \"circle\");\n    }\n    squares(groups) {\n        return this._multiple(groups, \"square\");\n    }\n    lines(groups) {\n        return this._multiple(groups, \"line\");\n    }\n    polygons(groups) {\n        return this._multiple(groups, \"polygon\");\n    }\n    rects(groups) {\n        return this._multiple(groups, \"rect\");\n    }\n}\nexports.VisualForm = VisualForm;\nclass Font {\n    constructor(size = 12, face = \"sans-serif\", weight = \"\", style = \"\", lineHeight = 1.5) {\n        this.size = size;\n        this.face = face;\n        this.style = style;\n        this.weight = weight;\n        this.lineHeight = lineHeight;\n    }\n    get value() { return `${this.style} ${this.weight} ${this.size}px/${this.lineHeight} ${this.face}`; }\n    toString() { return this.value; }\n}\nexports.Font = Font;\n\n\n/***/ }),\n\n/***/ \"./src/LinearAlgebra.ts\":\n/*!******************************!*\\\n  !*** ./src/LinearAlgebra.ts ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst Op_1 = __webpack_require__(/*! ./Op */ \"./src/Op.ts\");\nclass Vec {\n    static add(a, b) {\n        if (typeof b == \"number\") {\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] += b;\n        }\n        else {\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] += b[i] || 0;\n        }\n        return a;\n    }\n    static subtract(a, b) {\n        if (typeof b == \"number\") {\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] -= b;\n        }\n        else {\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] -= b[i] || 0;\n        }\n        return a;\n    }\n    static multiply(a, b) {\n        if (typeof b == \"number\") {\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] *= b;\n        }\n        else {\n            if (a.length != b.length) {\n                throw new Error(`Cannot do element-wise multiply since the array lengths don't match: ${a.toString()} multiply-with ${b.toString()}`);\n            }\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] *= b[i];\n        }\n        return a;\n    }\n    static divide(a, b) {\n        if (typeof b == \"number\") {\n            if (b === 0)\n                throw new Error(\"Cannot divide by zero\");\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] /= b;\n        }\n        else {\n            if (a.length != b.length) {\n                throw new Error(`Cannot do element-wise divide since the array lengths don't match. ${a.toString()} divide-by ${b.toString()}`);\n            }\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] /= b[i];\n        }\n        return a;\n    }\n    static dot(a, b) {\n        if (a.length != b.length)\n            throw new Error(\"Array lengths don't match\");\n        let d = 0;\n        for (let i = 0, len = a.length; i < len; i++) {\n            d += a[i] * b[i];\n        }\n        return d;\n    }\n    static cross2D(a, b) {\n        return a[0] * b[1] - a[1] * b[0];\n    }\n    static cross(a, b) {\n        return new Pt_1.Pt((a[1] * b[2] - a[2] * b[1]), (a[2] * b[0] - a[0] * b[2]), (a[0] * b[1] - a[1] * b[0]));\n    }\n    static magnitude(a) {\n        return Math.sqrt(Vec.dot(a, a));\n    }\n    static unit(a, magnitude = undefined) {\n        let m = (magnitude === undefined) ? Vec.magnitude(a) : magnitude;\n        if (m === 0)\n            return Pt_1.Pt.make(a.length);\n        return Vec.divide(a, m);\n    }\n    static abs(a) {\n        return Vec.map(a, Math.abs);\n    }\n    static floor(a) {\n        return Vec.map(a, Math.floor);\n    }\n    static ceil(a) {\n        return Vec.map(a, Math.ceil);\n    }\n    static round(a) {\n        return Vec.map(a, Math.round);\n    }\n    static max(a) {\n        let m = Number.MIN_VALUE;\n        let index = 0;\n        for (let i = 0, len = a.length; i < len; i++) {\n            m = Math.max(m, a[i]);\n            if (m === a[i])\n                index = i;\n        }\n        return { value: m, index: index };\n    }\n    static min(a) {\n        let m = Number.MAX_VALUE;\n        let index = 0;\n        for (let i = 0, len = a.length; i < len; i++) {\n            m = Math.min(m, a[i]);\n            if (m === a[i])\n                index = i;\n        }\n        return { value: m, index: index };\n    }\n    static sum(a) {\n        let s = 0;\n        for (let i = 0, len = a.length; i < len; i++)\n            s += a[i];\n        return s;\n    }\n    static map(a, fn) {\n        for (let i = 0, len = a.length; i < len; i++) {\n            a[i] = fn(a[i], i, a);\n        }\n        return a;\n    }\n}\nexports.Vec = Vec;\nclass Mat {\n    static add(a, b) {\n        if (typeof b != \"number\") {\n            if (a[0].length != b[0].length)\n                throw new Error(\"Cannot add matrix if rows' and columns' size don't match.\");\n            if (a.length != b.length)\n                throw new Error(\"Cannot add matrix if rows' and columns' size don't match.\");\n        }\n        let g = new Pt_1.Group();\n        let isNum = typeof b == \"number\";\n        for (let i = 0, len = a.length; i < len; i++) {\n            g.push(a[i].$add((isNum) ? b : b[i]));\n        }\n        return g;\n    }\n    static multiply(a, b, transposed = false, elementwise = false) {\n        let g = new Pt_1.Group();\n        if (typeof b != \"number\") {\n            if (elementwise) {\n                if (a.length != b.length)\n                    throw new Error(\"Cannot multiply matrix element-wise because the matrices' sizes don't match.\");\n                for (let ai = 0, alen = a.length; ai < alen; ai++) {\n                    g.push(a[ai].$multiply(b[ai]));\n                }\n            }\n            else {\n                if (!transposed && a[0].length != b.length)\n                    throw new Error(\"Cannot multiply matrix if rows in matrix-a don't match columns in matrix-b.\");\n                if (transposed && a[0].length != b[0].length)\n                    throw new Error(\"Cannot multiply matrix if transposed and the columns in both matrices don't match.\");\n                if (!transposed)\n                    b = Mat.transpose(b);\n                for (let ai = 0, alen = a.length; ai < alen; ai++) {\n                    let p = Pt_1.Pt.make(b.length, 0);\n                    for (let bi = 0, blen = b.length; bi < blen; bi++) {\n                        p[bi] = Vec.dot(a[ai], b[bi]);\n                    }\n                    g.push(p);\n                }\n            }\n        }\n        else {\n            for (let ai = 0, alen = a.length; ai < alen; ai++) {\n                g.push(a[ai].$multiply(b));\n            }\n        }\n        return g;\n    }\n    static zipSlice(g, index, defaultValue = false) {\n        let z = [];\n        for (let i = 0, len = g.length; i < len; i++) {\n            if (g[i].length - 1 < index && defaultValue === false)\n                throw `Index ${index} is out of bounds`;\n            z.push(g[i][index] || defaultValue);\n        }\n        return new Pt_1.Pt(z);\n    }\n    static zip(g, defaultValue = false, useLongest = false) {\n        let ps = new Pt_1.Group();\n        let len = (useLongest) ? g.reduce((a, b) => Math.max(a, b.length), 0) : g[0].length;\n        for (let i = 0; i < len; i++) {\n            ps.push(Mat.zipSlice(g, i, defaultValue));\n        }\n        return ps;\n    }\n    static transpose(g, defaultValue = false, useLongest = false) {\n        return Mat.zip(g, defaultValue, useLongest);\n    }\n    static transform2D(pt, m) {\n        let x = pt[0] * m[0][0] + pt[1] * m[1][0] + m[2][0];\n        let y = pt[0] * m[0][1] + pt[1] * m[1][1] + m[2][1];\n        return new Pt_1.Pt(x, y);\n    }\n    static scale2DMatrix(x, y) {\n        return new Pt_1.Group(new Pt_1.Pt(x, 0, 0), new Pt_1.Pt(0, y, 0), new Pt_1.Pt(0, 0, 1));\n    }\n    static rotate2DMatrix(cosA, sinA) {\n        return new Pt_1.Group(new Pt_1.Pt(cosA, sinA, 0), new Pt_1.Pt(-sinA, cosA, 0), new Pt_1.Pt(0, 0, 1));\n    }\n    static shear2DMatrix(tanX, tanY) {\n        return new Pt_1.Group(new Pt_1.Pt(1, tanX, 0), new Pt_1.Pt(tanY, 1, 0), new Pt_1.Pt(0, 0, 1));\n    }\n    static translate2DMatrix(x, y) {\n        return new Pt_1.Group(new Pt_1.Pt(1, 0, 0), new Pt_1.Pt(0, 1, 0), new Pt_1.Pt(x, y, 1));\n    }\n    static scaleAt2DMatrix(sx, sy, at) {\n        let m = Mat.scale2DMatrix(sx, sy);\n        m[2][0] = -at[0] * sx + at[0];\n        m[2][1] = -at[1] * sy + at[1];\n        return m;\n    }\n    static rotateAt2DMatrix(cosA, sinA, at) {\n        let m = Mat.rotate2DMatrix(cosA, sinA);\n        m[2][0] = at[0] * (1 - cosA) + at[1] * sinA;\n        m[2][1] = at[1] * (1 - cosA) - at[0] * sinA;\n        return m;\n    }\n    static shearAt2DMatrix(tanX, tanY, at) {\n        let m = Mat.shear2DMatrix(tanX, tanY);\n        m[2][0] = -at[1] * tanY;\n        m[2][1] = -at[0] * tanX;\n        return m;\n    }\n    static reflectAt2DMatrix(p1, p2) {\n        let intercept = Op_1.Line.intercept(p1, p2);\n        if (intercept == undefined) {\n            return [\n                new Pt_1.Pt([-1, 0, 0]),\n                new Pt_1.Pt([0, 1, 0]),\n                new Pt_1.Pt([p1[0] + p2[0], 0, 1])\n            ];\n        }\n        else {\n            let yi = intercept.yi;\n            let ang2 = Math.atan(intercept.slope) * 2;\n            let cosA = Math.cos(ang2);\n            let sinA = Math.sin(ang2);\n            return [\n                new Pt_1.Pt([cosA, sinA, 0]),\n                new Pt_1.Pt([sinA, -cosA, 0]),\n                new Pt_1.Pt([-yi * sinA, yi + yi * cosA, 1])\n            ];\n        }\n    }\n}\nexports.Mat = Mat;\n\n\n/***/ }),\n\n/***/ \"./src/Num.ts\":\n/*!********************!*\\\n  !*** ./src/Num.ts ***!\n  \\********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nconst Op_1 = __webpack_require__(/*! ./Op */ \"./src/Op.ts\");\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst LinearAlgebra_1 = __webpack_require__(/*! ./LinearAlgebra */ \"./src/LinearAlgebra.ts\");\nclass Num {\n    static equals(a, b, threshold = 0.00001) {\n        return Math.abs(a - b) < threshold;\n    }\n    static lerp(a, b, t) {\n        return (1 - t) * a + t * b;\n    }\n    static clamp(val, min, max) {\n        return Math.max(min, Math.min(max, val));\n    }\n    static boundValue(val, min, max) {\n        let len = Math.abs(max - min);\n        let a = val % len;\n        if (a > max)\n            a -= len;\n        else if (a < min)\n            a += len;\n        return a;\n    }\n    static within(p, a, b) {\n        return p >= Math.min(a, b) && p <= Math.max(a, b);\n    }\n    static randomRange(a, b = 0) {\n        let r = (a > b) ? (a - b) : (b - a);\n        return a + Math.random() * r;\n    }\n    static normalizeValue(n, a, b) {\n        let min = Math.min(a, b);\n        let max = Math.max(a, b);\n        return (n - min) / (max - min);\n    }\n    static sum(pts) {\n        let c = new Pt_1.Pt(pts[0]);\n        for (let i = 1, len = pts.length; i < len; i++) {\n            LinearAlgebra_1.Vec.add(c, pts[i]);\n        }\n        return c;\n    }\n    static average(pts) {\n        return Num.sum(pts).divide(pts.length);\n    }\n    static cycle(t, method = Shaping.sineInOut) {\n        return method(t > 0.5 ? 2 - t * 2 : t * 2);\n    }\n    static mapToRange(n, currA, currB, targetA, targetB) {\n        if (currA == currB)\n            throw new Error(\"[currMin, currMax] must define a range that is not zero\");\n        let min = Math.min(targetA, targetB);\n        let max = Math.max(targetA, targetB);\n        return Num.normalizeValue(n, currA, currB) * (max - min) + min;\n    }\n}\nexports.Num = Num;\nclass Geom {\n    static boundAngle(angle) {\n        return Num.boundValue(angle, 0, 360);\n    }\n    static boundRadian(radian) {\n        return Num.boundValue(radian, 0, Util_1.Const.two_pi);\n    }\n    static toRadian(angle) {\n        return angle * Util_1.Const.deg_to_rad;\n    }\n    static toDegree(radian) {\n        return radian * Util_1.Const.rad_to_deg;\n    }\n    static boundingBox(pts) {\n        let minPt = pts.reduce((a, p) => a.$min(p));\n        let maxPt = pts.reduce((a, p) => a.$max(p));\n        return new Pt_1.Group(minPt, maxPt);\n    }\n    static centroid(pts) {\n        return Num.average(pts);\n    }\n    static anchor(pts, ptOrIndex = 0, direction = \"to\") {\n        let method = (direction == \"to\") ? \"subtract\" : \"add\";\n        for (let i = 0, len = pts.length; i < len; i++) {\n            if (typeof ptOrIndex == \"number\") {\n                if (ptOrIndex !== i)\n                    pts[i][method](pts[ptOrIndex]);\n            }\n            else {\n                pts[i][method](ptOrIndex);\n            }\n        }\n    }\n    static interpolate(a, b, t = 0.5) {\n        let len = Math.min(a.length, b.length);\n        let d = Pt_1.Pt.make(len);\n        for (let i = 0; i < len; i++) {\n            d[i] = a[i] * (1 - t) + b[i] * t;\n        }\n        return d;\n    }\n    static perpendicular(pt, axis = Util_1.Const.xy) {\n        let y = axis[1];\n        let x = axis[0];\n        let p = new Pt_1.Pt(pt);\n        let pa = new Pt_1.Pt(p);\n        pa[x] = -p[y];\n        pa[y] = p[x];\n        let pb = new Pt_1.Pt(p);\n        pb[x] = p[y];\n        pb[y] = -p[x];\n        return new Pt_1.Group(pa, pb);\n    }\n    static isPerpendicular(p1, p2) {\n        return new Pt_1.Pt(p1).dot(p2) === 0;\n    }\n    static withinBound(pt, boundPt1, boundPt2) {\n        for (let i = 0, len = Math.min(pt.length, boundPt1.length, boundPt2.length); i < len; i++) {\n            if (!Num.within(pt[i], boundPt1[i], boundPt2[i]))\n                return false;\n        }\n        return true;\n    }\n    static sortEdges(pts) {\n        let bounds = Geom.boundingBox(pts);\n        let center = bounds[1].add(bounds[0]).divide(2);\n        let fn = (a, b) => {\n            if (a.length < 2 || b.length < 2)\n                throw new Error(\"Pt dimension cannot be less than 2\");\n            let da = a.$subtract(center);\n            let db = b.$subtract(center);\n            if (da[0] >= 0 && db[0] < 0)\n                return 1;\n            if (da[0] < 0 && db[0] >= 0)\n                return -1;\n            if (da[0] == 0 && db[0] == 0) {\n                if (da[1] >= 0 || db[1] >= 0)\n                    return (da[1] > db[1]) ? 1 : -1;\n                return (db[1] > da[1]) ? 1 : -1;\n            }\n            let det = da.$cross2D(db);\n            if (det < 0)\n                return 1;\n            if (det > 0)\n                return -1;\n            return (da[0] * da[0] + da[1] * da[1] > db[0] * db[0] + db[1] * db[1]) ? 1 : -1;\n        };\n        return pts.sort(fn);\n    }\n    static scale(ps, scale, anchor) {\n        let pts = (!Array.isArray(ps)) ? [ps] : ps;\n        let scs = (typeof scale == \"number\") ? Pt_1.Pt.make(pts[0].length, scale) : scale;\n        if (!anchor)\n            anchor = Pt_1.Pt.make(pts[0].length, 0);\n        for (let i = 0, len = pts.length; i < len; i++) {\n            let p = pts[i];\n            for (let k = 0, lenP = p.length; k < lenP; k++) {\n                p[k] = (anchor && anchor[k]) ? anchor[k] + (p[k] - anchor[k]) * scs[k] : p[k] * scs[k];\n            }\n        }\n        return Geom;\n    }\n    static rotate2D(ps, angle, anchor, axis) {\n        let pts = (!Array.isArray(ps)) ? [ps] : ps;\n        let fn = (anchor) ? LinearAlgebra_1.Mat.rotateAt2DMatrix : LinearAlgebra_1.Mat.rotate2DMatrix;\n        if (!anchor)\n            anchor = Pt_1.Pt.make(pts[0].length, 0);\n        let cos = Math.cos(angle);\n        let sin = Math.sin(angle);\n        for (let i = 0, len = pts.length; i < len; i++) {\n            let p = (axis) ? pts[i].$take(axis) : pts[i];\n            p.to(LinearAlgebra_1.Mat.transform2D(p, fn(cos, sin, anchor)));\n            if (axis) {\n                for (let k = 0; k < axis.length; k++) {\n                    pts[i][k] = p[k];\n                }\n            }\n        }\n        return Geom;\n    }\n    static shear2D(ps, scale, anchor, axis) {\n        let pts = (!Array.isArray(ps)) ? [ps] : ps;\n        let s = (typeof scale == \"number\") ? [scale, scale] : scale;\n        if (!anchor)\n            anchor = Pt_1.Pt.make(pts[0].length, 0);\n        let fn = (anchor) ? LinearAlgebra_1.Mat.shearAt2DMatrix : LinearAlgebra_1.Mat.shear2DMatrix;\n        let tanx = Math.tan(s[0]);\n        let tany = Math.tan(s[1]);\n        for (let i = 0, len = pts.length; i < len; i++) {\n            let p = (axis) ? pts[i].$take(axis) : pts[i];\n            p.to(LinearAlgebra_1.Mat.transform2D(p, fn(tanx, tany, anchor)));\n            if (axis) {\n                for (let k = 0; k < axis.length; k++) {\n                    pts[i][k] = p[k];\n                }\n            }\n        }\n        return Geom;\n    }\n    static reflect2D(ps, line, axis) {\n        let pts = (!Array.isArray(ps)) ? [ps] : ps;\n        let mat = LinearAlgebra_1.Mat.reflectAt2DMatrix(line[0], line[1]);\n        for (let i = 0, len = pts.length; i < len; i++) {\n            let p = (axis) ? pts[i].$take(axis) : pts[i];\n            p.to(LinearAlgebra_1.Mat.transform2D(p, mat));\n            if (axis) {\n                for (let k = 0; k < axis.length; k++) {\n                    pts[i][k] = p[k];\n                }\n            }\n        }\n        return Geom;\n    }\n    static cosTable() {\n        let cos = new Float64Array(360);\n        for (let i = 0; i < 360; i++)\n            cos[i] = Math.cos(i * Math.PI / 180);\n        let find = (rad) => cos[Math.floor(Geom.boundAngle(Geom.toDegree(rad)))];\n        return { table: cos, cos: find };\n    }\n    static sinTable() {\n        let sin = new Float64Array(360);\n        for (let i = 0; i < 360; i++)\n            sin[i] = Math.sin(i * Math.PI / 180);\n        let find = (rad) => sin[Math.floor(Geom.boundAngle(Geom.toDegree(rad)))];\n        return { table: sin, sin: find };\n    }\n}\nexports.Geom = Geom;\nclass Shaping {\n    static linear(t, c = 1) {\n        return c * t;\n    }\n    static quadraticIn(t, c = 1) {\n        return c * t * t;\n    }\n    static quadraticOut(t, c = 1) {\n        return -c * t * (t - 2);\n    }\n    static quadraticInOut(t, c = 1) {\n        let dt = t * 2;\n        return (t < 0.5) ? c / 2 * t * t * 4 : -c / 2 * ((dt - 1) * (dt - 3) - 1);\n    }\n    static cubicIn(t, c = 1) {\n        return c * t * t * t;\n    }\n    static cubicOut(t, c = 1) {\n        let dt = t - 1;\n        return c * (dt * dt * dt + 1);\n    }\n    static cubicInOut(t, c = 1) {\n        let dt = t * 2;\n        return (t < 0.5) ? c / 2 * dt * dt * dt : c / 2 * ((dt - 2) * (dt - 2) * (dt - 2) + 2);\n    }\n    static exponentialIn(t, c = 1, p = 0.25) {\n        return c * Math.pow(t, 1 / p);\n    }\n    static exponentialOut(t, c = 1, p = 0.25) {\n        return c * Math.pow(t, p);\n    }\n    static sineIn(t, c = 1) {\n        return -c * Math.cos(t * Util_1.Const.half_pi) + c;\n    }\n    static sineOut(t, c = 1) {\n        return c * Math.sin(t * Util_1.Const.half_pi);\n    }\n    static sineInOut(t, c = 1) {\n        return -c / 2 * (Math.cos(Math.PI * t) - 1);\n    }\n    static cosineApprox(t, c = 1) {\n        let t2 = t * t;\n        let t4 = t2 * t2;\n        let t6 = t4 * t2;\n        return c * (4 * t6 / 9 - 17 * t4 / 9 + 22 * t2 / 9);\n    }\n    static circularIn(t, c = 1) {\n        return -c * (Math.sqrt(1 - t * t) - 1);\n    }\n    static circularOut(t, c = 1) {\n        let dt = t - 1;\n        return c * Math.sqrt(1 - dt * dt);\n    }\n    static circularInOut(t, c = 1) {\n        let dt = t * 2;\n        return (t < 0.5) ? -c / 2 * (Math.sqrt(1 - dt * dt) - 1) : c / 2 * (Math.sqrt(1 - (dt - 2) * (dt - 2)) + 1);\n    }\n    static elasticIn(t, c = 1, p = 0.7) {\n        let dt = t - 1;\n        let s = (p / Util_1.Const.two_pi) * 1.5707963267948966;\n        return c * (-Math.pow(2, 10 * dt) * Math.sin((dt - s) * Util_1.Const.two_pi / p));\n    }\n    static elasticOut(t, c = 1, p = 0.7) {\n        let s = (p / Util_1.Const.two_pi) * 1.5707963267948966;\n        return c * (Math.pow(2, -10 * t) * Math.sin((t - s) * Util_1.Const.two_pi / p)) + c;\n    }\n    static elasticInOut(t, c = 1, p = 0.6) {\n        let dt = t * 2;\n        let s = (p / Util_1.Const.two_pi) * 1.5707963267948966;\n        if (t < 0.5) {\n            dt -= 1;\n            return c * (-0.5 * (Math.pow(2, 10 * dt) * Math.sin((dt - s) * Util_1.Const.two_pi / p)));\n        }\n        else {\n            dt -= 1;\n            return c * (0.5 * (Math.pow(2, -10 * dt) * Math.sin((dt - s) * Util_1.Const.two_pi / p))) + c;\n        }\n    }\n    static bounceIn(t, c = 1) {\n        return c - Shaping.bounceOut((1 - t), c);\n    }\n    static bounceOut(t, c = 1) {\n        if (t < (1 / 2.75)) {\n            return c * (7.5625 * t * t);\n        }\n        else if (t < (2 / 2.75)) {\n            t -= 1.5 / 2.75;\n            return c * (7.5625 * t * t + 0.75);\n        }\n        else if (t < (2.5 / 2.75)) {\n            t -= 2.25 / 2.75;\n            return c * (7.5625 * t * t + 0.9375);\n        }\n        else {\n            t -= 2.625 / 2.75;\n            return c * (7.5625 * t * t + 0.984375);\n        }\n    }\n    static bounceInOut(t, c = 1) {\n        return (t < 0.5) ? Shaping.bounceIn(t * 2, c) / 2 : Shaping.bounceOut(t * 2 - 1, c) / 2 + c / 2;\n    }\n    static sigmoid(t, c = 1, p = 10) {\n        let d = p * (t - 0.5);\n        return c / (1 + Math.exp(-d));\n    }\n    static logSigmoid(t, c = 1, p = 0.7) {\n        p = Math.max(Util_1.Const.epsilon, Math.min(1 - Util_1.Const.epsilon, p));\n        p = 1 / (1 - p);\n        let A = 1 / (1 + Math.exp(((t - 0.5) * p * -2)));\n        let B = 1 / (1 + Math.exp(p));\n        let C = 1 / (1 + Math.exp(-p));\n        return c * (A - B) / (C - B);\n    }\n    static seat(t, c = 1, p = 0.5) {\n        if ((t < 0.5)) {\n            return c * (Math.pow(2 * t, 1 - p)) / 2;\n        }\n        else {\n            return c * (1 - (Math.pow(2 * (1 - t), 1 - p)) / 2);\n        }\n    }\n    static quadraticBezier(t, c = 1, p = [0.05, 0.95]) {\n        let a = (typeof p != \"number\") ? p[0] : p;\n        let b = (typeof p != \"number\") ? p[1] : 0.5;\n        let om2a = 1 - 2 * a;\n        if (om2a === 0) {\n            om2a = Util_1.Const.epsilon;\n        }\n        let d = (Math.sqrt(a * a + om2a * t) - a) / om2a;\n        return c * ((1 - 2 * b) * (d * d) + (2 * b) * d);\n    }\n    static cubicBezier(t, c = 1, p1 = [0.1, 0.7], p2 = [0.9, 0.2]) {\n        let curve = new Pt_1.Group(new Pt_1.Pt(0, 0), new Pt_1.Pt(p1), new Pt_1.Pt(p2), new Pt_1.Pt(1, 1));\n        return c * Op_1.Curve.bezierStep(new Pt_1.Pt(t * t * t, t * t, t, 1), Op_1.Curve.controlPoints(curve)).y;\n    }\n    static quadraticTarget(t, c = 1, p1 = [0.2, 0.35]) {\n        let a = Math.min(1 - Util_1.Const.epsilon, Math.max(Util_1.Const.epsilon, p1[0]));\n        let b = Math.min(1, Math.max(0, p1[1]));\n        let A = (1 - b) / (1 - a) - (b / a);\n        let B = (A * (a * a) - b) / a;\n        let y = A * (t * t) - B * t;\n        return c * Math.min(1, Math.max(0, y));\n    }\n    static cliff(t, c = 1, p = 0.5) {\n        return (t > p) ? c : 0;\n    }\n    static step(fn, steps, t, c, ...args) {\n        let s = 1 / steps;\n        let tt = Math.floor(t / s) * s;\n        return fn(tt, c, ...args);\n    }\n}\nexports.Shaping = Shaping;\nclass Range {\n    constructor(g) {\n        this._dims = 0;\n        this._source = Pt_1.Group.fromPtArray(g);\n        this.calc();\n    }\n    get max() { return this._max.clone(); }\n    get min() { return this._min.clone(); }\n    get magnitude() { return this._mag.clone(); }\n    calc() {\n        if (!this._source)\n            return;\n        let dims = this._source[0].length;\n        this._dims = dims;\n        let max = new Pt_1.Pt(dims);\n        let min = new Pt_1.Pt(dims);\n        let mag = new Pt_1.Pt(dims);\n        for (let i = 0; i < dims; i++) {\n            max[i] = Util_1.Const.min;\n            min[i] = Util_1.Const.max;\n            mag[i] = 0;\n            let s = this._source.zipSlice(i);\n            for (let k = 0, len = s.length; k < len; k++) {\n                max[i] = Math.max(max[i], s[k]);\n                min[i] = Math.min(min[i], s[k]);\n                mag[i] = max[i] - min[i];\n            }\n        }\n        this._max = max;\n        this._min = min;\n        this._mag = mag;\n        return this;\n    }\n    mapTo(min, max, exclude) {\n        let target = new Pt_1.Group();\n        for (let i = 0, len = this._source.length; i < len; i++) {\n            let g = this._source[i];\n            let n = new Pt_1.Pt(this._dims);\n            for (let k = 0; k < this._dims; k++) {\n                n[k] = (exclude && exclude[k]) ? g[k] : Num.mapToRange(g[k], this._min[k], this._max[k], min, max);\n            }\n            target.push(n);\n        }\n        return target;\n    }\n    append(g, update = true) {\n        if (g[0].length !== this._dims)\n            throw new Error(`Dimensions don't match. ${this._dims} dimensions in Range and ${g[0].length} provided in parameter. `);\n        this._source = this._source.concat(g);\n        if (update)\n            this.calc();\n        return this;\n    }\n    ticks(count) {\n        let g = new Pt_1.Group();\n        for (let i = 0; i <= count; i++) {\n            let p = new Pt_1.Pt(this._dims);\n            for (let k = 0, len = this._max.length; k < len; k++) {\n                p[k] = Num.lerp(this._min[k], this._max[k], i / count);\n            }\n            g.push(p);\n        }\n        return g;\n    }\n}\nexports.Range = Range;\n\n\n/***/ }),\n\n/***/ \"./src/Op.ts\":\n/*!*******************!*\\\n  !*** ./src/Op.ts ***!\n  \\*******************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nconst Num_1 = __webpack_require__(/*! ./Num */ \"./src/Num.ts\");\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst LinearAlgebra_1 = __webpack_require__(/*! ./LinearAlgebra */ \"./src/LinearAlgebra.ts\");\nlet _errorLength = (obj, param = \"expected\") => Util_1.Util.warn(\"Group's length is less than \" + param, obj);\nlet _errorOutofBound = (obj, param = \"\") => Util_1.Util.warn(`Index ${param} is out of bound in Group`, obj);\nclass Line {\n    static fromAngle(anchor, angle, magnitude) {\n        let g = new Pt_1.Group(new Pt_1.Pt(anchor), new Pt_1.Pt(anchor));\n        g[1].toAngle(angle, magnitude, true);\n        return g;\n    }\n    static slope(p1, p2) {\n        return (p2[0] - p1[0] === 0) ? undefined : (p2[1] - p1[1]) / (p2[0] - p1[0]);\n    }\n    static intercept(p1, p2) {\n        if (p2[0] - p1[0] === 0) {\n            return undefined;\n        }\n        else {\n            let m = (p2[1] - p1[1]) / (p2[0] - p1[0]);\n            let c = p1[1] - m * p1[0];\n            return { slope: m, yi: c, xi: (m === 0) ? undefined : -c / m };\n        }\n    }\n    static sideOfPt2D(line, pt) {\n        return (line[1][0] - line[0][0]) * (pt[1] - line[0][1]) - (pt[0] - line[0][0]) * (line[1][1] - line[0][1]);\n    }\n    static collinear(p1, p2, p3, threshold = 0.01) {\n        let a = new Pt_1.Pt(0, 0, 0).to(p1).$subtract(p2);\n        let b = new Pt_1.Pt(0, 0, 0).to(p1).$subtract(p3);\n        return a.$cross(b).divide(1000).equals(new Pt_1.Pt(0, 0, 0), threshold);\n    }\n    static magnitude(line) {\n        return (line.length >= 2) ? line[1].$subtract(line[0]).magnitude() : 0;\n    }\n    static magnitudeSq(line) {\n        return (line.length >= 2) ? line[1].$subtract(line[0]).magnitudeSq() : 0;\n    }\n    static perpendicularFromPt(line, pt, asProjection = false) {\n        if (line[0].equals(line[1]))\n            return undefined;\n        let a = line[0].$subtract(line[1]);\n        let b = line[1].$subtract(pt);\n        let proj = b.$subtract(a.$project(b));\n        return (asProjection) ? proj : proj.$add(pt);\n    }\n    static distanceFromPt(line, pt) {\n        return Line.perpendicularFromPt(line, pt, true).magnitude();\n    }\n    static intersectRay2D(la, lb) {\n        let a = Line.intercept(la[0], la[1]);\n        let b = Line.intercept(lb[0], lb[1]);\n        let pa = la[0];\n        let pb = lb[0];\n        if (a == undefined) {\n            if (b == undefined)\n                return undefined;\n            let y1 = -b.slope * (pb[0] - pa[0]) + pb[1];\n            return new Pt_1.Pt(pa[0], y1);\n        }\n        else {\n            if (b == undefined) {\n                let y1 = -a.slope * (pa[0] - pb[0]) + pa[1];\n                return new Pt_1.Pt(pb[0], y1);\n            }\n            else if (b.slope != a.slope) {\n                let px = (a.slope * pa[0] - b.slope * pb[0] + pb[1] - pa[1]) / (a.slope - b.slope);\n                let py = a.slope * (px - pa[0]) + pa[1];\n                return new Pt_1.Pt(px, py);\n            }\n            else {\n                if (a.yi == b.yi) {\n                    return new Pt_1.Pt(pa[0], pa[1]);\n                }\n                else {\n                    return undefined;\n                }\n            }\n        }\n    }\n    static intersectLine2D(la, lb) {\n        let pt = Line.intersectRay2D(la, lb);\n        return (pt && Num_1.Geom.withinBound(pt, la[0], la[1]) && Num_1.Geom.withinBound(pt, lb[0], lb[1])) ? pt : undefined;\n    }\n    static intersectLineWithRay2D(line, ray) {\n        let pt = Line.intersectRay2D(line, ray);\n        return (pt && Num_1.Geom.withinBound(pt, line[0], line[1])) ? pt : undefined;\n    }\n    static intersectPolygon2D(lineOrRay, poly, sourceIsRay = false) {\n        let fn = sourceIsRay ? Line.intersectLineWithRay2D : Line.intersectLine2D;\n        let pts = new Pt_1.Group();\n        for (let i = 0, len = poly.length; i < len; i++) {\n            let next = (i === len - 1) ? 0 : i + 1;\n            let d = fn([poly[i], poly[next]], lineOrRay);\n            if (d)\n                pts.push(d);\n        }\n        return (pts.length > 0) ? pts : undefined;\n    }\n    static intersectLines2D(lines1, lines2, isRay = false) {\n        let group = new Pt_1.Group();\n        let fn = isRay ? Line.intersectLineWithRay2D : Line.intersectLine2D;\n        for (let i = 0, len = lines1.length; i < len; i++) {\n            for (let k = 0, lenk = lines2.length; k < lenk; k++) {\n                let _ip = fn(lines1[i], lines2[k]);\n                if (_ip)\n                    group.push(_ip);\n            }\n        }\n        return group;\n    }\n    static intersectGridWithRay2D(ray, gridPt) {\n        let t = Line.intercept(new Pt_1.Pt(ray[0]).subtract(gridPt), new Pt_1.Pt(ray[1]).subtract(gridPt));\n        let g = new Pt_1.Group();\n        if (t && t.xi)\n            g.push(new Pt_1.Pt(gridPt[0] + t.xi, gridPt[1]));\n        if (t && t.yi)\n            g.push(new Pt_1.Pt(gridPt[0], gridPt[1] + t.yi));\n        return g;\n    }\n    static intersectGridWithLine2D(line, gridPt) {\n        let g = Line.intersectGridWithRay2D(line, gridPt);\n        let gg = new Pt_1.Group();\n        for (let i = 0, len = g.length; i < len; i++) {\n            if (Num_1.Geom.withinBound(g[i], line[0], line[1]))\n                gg.push(g[i]);\n        }\n        return gg;\n    }\n    static intersectRect2D(line, rect) {\n        let box = Num_1.Geom.boundingBox(Pt_1.Group.fromPtArray(line));\n        if (!Rectangle.hasIntersectRect2D(box, rect))\n            return new Pt_1.Group();\n        return Line.intersectLines2D([line], Rectangle.sides(rect));\n    }\n    static subpoints(line, num) {\n        let pts = new Pt_1.Group();\n        for (let i = 1; i <= num; i++) {\n            pts.push(Num_1.Geom.interpolate(line[0], line[1], i / (num + 1)));\n        }\n        return pts;\n    }\n    static crop(line, size, index = 0, cropAsCircle = true) {\n        let tdx = (index === 0) ? 1 : 0;\n        let ls = line[tdx].$subtract(line[index]);\n        if (ls[0] === 0 || size[0] === 0)\n            return line[index];\n        if (cropAsCircle) {\n            let d = ls.unit().multiply(size[1]);\n            return line[index].$add(d);\n        }\n        else {\n            let rect = Rectangle.fromCenter(line[index], size);\n            let sides = Rectangle.sides(rect);\n            let sideIdx = 0;\n            if (Math.abs(ls[1] / ls[0]) > Math.abs(size[1] / size[0])) {\n                sideIdx = (ls[1] < 0) ? 0 : 2;\n            }\n            else {\n                sideIdx = (ls[0] < 0) ? 3 : 1;\n            }\n            return Line.intersectRay2D(sides[sideIdx], line);\n        }\n    }\n    static marker(line, size, graphic = (\"arrow\" || \"line\"), atTail = true) {\n        let h = atTail ? 0 : 1;\n        let t = atTail ? 1 : 0;\n        let unit = line[h].$subtract(line[t]);\n        if (unit.magnitudeSq() === 0)\n            return new Pt_1.Group();\n        unit.unit();\n        let ps = Num_1.Geom.perpendicular(unit).multiply(size[0]).add(line[t]);\n        if (graphic == \"arrow\") {\n            ps.add(unit.$multiply(size[1]));\n            return new Pt_1.Group(line[t], ps[0], ps[1]);\n        }\n        else {\n            return new Pt_1.Group(ps[0], ps[1]);\n        }\n    }\n    static toRect(line) {\n        return new Pt_1.Group(line[0].$min(line[1]), line[0].$max(line[1]));\n    }\n}\nexports.Line = Line;\nclass Rectangle {\n    static from(topLeft, widthOrSize, height) {\n        return Rectangle.fromTopLeft(topLeft, widthOrSize, height);\n    }\n    static fromTopLeft(topLeft, widthOrSize, height) {\n        let size = (typeof widthOrSize == \"number\") ? [widthOrSize, (height || widthOrSize)] : widthOrSize;\n        return new Pt_1.Group(new Pt_1.Pt(topLeft), new Pt_1.Pt(topLeft).add(size));\n    }\n    static fromCenter(center, widthOrSize, height) {\n        let half = (typeof widthOrSize == \"number\") ? [widthOrSize / 2, (height || widthOrSize) / 2] : new Pt_1.Pt(widthOrSize).divide(2);\n        return new Pt_1.Group(new Pt_1.Pt(center).subtract(half), new Pt_1.Pt(center).add(half));\n    }\n    static toCircle(pts, within = true) {\n        return Circle.fromRect(pts, within);\n    }\n    static toSquare(pts, enclose = false) {\n        let s = Rectangle.size(pts);\n        let m = (enclose) ? s.maxValue().value : s.minValue().value;\n        return Rectangle.fromCenter(Rectangle.center(pts), m, m);\n    }\n    static size(pts) {\n        return pts[0].$max(pts[1]).subtract(pts[0].$min(pts[1]));\n    }\n    static center(pts) {\n        let min = pts[0].$min(pts[1]);\n        let max = pts[0].$max(pts[1]);\n        return min.add(max.$subtract(min).divide(2));\n    }\n    static corners(rect) {\n        let p0 = rect[0].$min(rect[1]);\n        let p2 = rect[0].$max(rect[1]);\n        return new Pt_1.Group(p0, new Pt_1.Pt(p2.x, p0.y), p2, new Pt_1.Pt(p0.x, p2.y));\n    }\n    static sides(rect) {\n        let [p0, p1, p2, p3] = Rectangle.corners(rect);\n        return [\n            new Pt_1.Group(p0, p1), new Pt_1.Group(p1, p2),\n            new Pt_1.Group(p2, p3), new Pt_1.Group(p3, p0)\n        ];\n    }\n    static boundingBox(rects) {\n        let merged = Util_1.Util.flatten(rects, false);\n        let min = Pt_1.Pt.make(2, Number.MAX_VALUE);\n        let max = Pt_1.Pt.make(2, Number.MIN_VALUE);\n        for (let i = 0, len = merged.length; i < len; i++) {\n            for (let k = 0; k < 2; k++) {\n                min[k] = Math.min(min[k], merged[i][k]);\n                max[k] = Math.max(max[k], merged[i][k]);\n            }\n        }\n        return new Pt_1.Group(min, max);\n    }\n    static polygon(rect) {\n        return Rectangle.corners(rect);\n    }\n    static quadrants(rect, center) {\n        let corners = Rectangle.corners(rect);\n        let _center = (center != undefined) ? new Pt_1.Pt(center) : Rectangle.center(rect);\n        return corners.map((c) => new Pt_1.Group(c, _center).boundingBox());\n    }\n    static halves(rect, ratio = 0.5, asRows = false) {\n        let min = rect[0].$min(rect[1]);\n        let max = rect[0].$max(rect[1]);\n        let mid = (asRows) ? Num_1.Num.lerp(min[1], max[1], ratio) : Num_1.Num.lerp(min[0], max[0], ratio);\n        return (asRows)\n            ? [new Pt_1.Group(min, new Pt_1.Pt(max[0], mid)), new Pt_1.Group(new Pt_1.Pt(min[0], mid), max)]\n            : [new Pt_1.Group(min, new Pt_1.Pt(mid, max[1])), new Pt_1.Group(new Pt_1.Pt(mid, min[1]), max)];\n    }\n    static withinBound(rect, pt) {\n        return Num_1.Geom.withinBound(pt, rect[0], rect[1]);\n    }\n    static hasIntersectRect2D(rect1, rect2, resetBoundingBox = false) {\n        if (resetBoundingBox) {\n            rect1 = Num_1.Geom.boundingBox(rect1);\n            rect2 = Num_1.Geom.boundingBox(rect2);\n        }\n        if (rect1[0][0] > rect2[1][0] || rect2[0][0] > rect1[1][0])\n            return false;\n        if (rect1[0][1] > rect2[1][1] || rect2[0][1] > rect1[1][1])\n            return false;\n        return true;\n    }\n    static intersectRect2D(rect1, rect2) {\n        if (!Rectangle.hasIntersectRect2D(rect1, rect2))\n            return new Pt_1.Group();\n        return Line.intersectLines2D(Rectangle.sides(rect1), Rectangle.sides(rect2));\n    }\n}\nexports.Rectangle = Rectangle;\nclass Circle {\n    static fromRect(pts, enclose = false) {\n        let r = 0;\n        let min = r = Rectangle.size(pts).minValue().value / 2;\n        if (enclose) {\n            let max = Rectangle.size(pts).maxValue().value / 2;\n            r = Math.sqrt(min * min + max * max);\n        }\n        else {\n            r = min;\n        }\n        return new Pt_1.Group(Rectangle.center(pts), new Pt_1.Pt(r, r));\n    }\n    static fromTriangle(pts, enclose = false) {\n        if (enclose) {\n            return Triangle.circumcircle(pts);\n        }\n        else {\n            return Triangle.incircle(pts);\n        }\n    }\n    static fromCenter(pt, radius) {\n        return new Pt_1.Group(new Pt_1.Pt(pt), new Pt_1.Pt(radius, radius));\n    }\n    static withinBound(pts, pt, threshold = 0) {\n        let d = pts[0].$subtract(pt);\n        return d.dot(d) + threshold < pts[1].x * pts[1].x;\n    }\n    static intersectRay2D(pts, ray) {\n        let d = ray[0].$subtract(ray[1]);\n        let f = pts[0].$subtract(ray[0]);\n        let a = d.dot(d);\n        let b = f.dot(d);\n        let c = f.dot(f) - pts[1].x * pts[1].x;\n        let p = b / a;\n        let q = c / a;\n        let disc = p * p - q;\n        if (disc < 0) {\n            return new Pt_1.Group();\n        }\n        else {\n            let discSqrt = Math.sqrt(disc);\n            let t1 = -p + discSqrt;\n            let p1 = ray[0].$subtract(d.$multiply(t1));\n            if (disc === 0)\n                return new Pt_1.Group(p1);\n            let t2 = -p - discSqrt;\n            let p2 = ray[0].$subtract(d.$multiply(t2));\n            return new Pt_1.Group(p1, p2);\n        }\n    }\n    static intersectLine2D(pts, line) {\n        let ps = Circle.intersectRay2D(pts, line);\n        let g = new Pt_1.Group();\n        if (ps.length > 0) {\n            for (let i = 0, len = ps.length; i < len; i++) {\n                if (Rectangle.withinBound(line, ps[i]))\n                    g.push(ps[i]);\n            }\n        }\n        return g;\n    }\n    static intersectCircle2D(pts, circle) {\n        let dv = circle[0].$subtract(pts[0]);\n        let dr2 = dv.magnitudeSq();\n        let dr = Math.sqrt(dr2);\n        let ar = pts[1].x;\n        let br = circle[1].x;\n        let ar2 = ar * ar;\n        let br2 = br * br;\n        if (dr > ar + br) {\n            return new Pt_1.Group();\n        }\n        else if (dr < Math.abs(ar - br)) {\n            return new Pt_1.Group(pts[0].clone());\n        }\n        else {\n            let a = (ar2 - br2 + dr2) / (2 * dr);\n            let h = Math.sqrt(ar2 - a * a);\n            let p = dv.$multiply(a / dr).add(pts[0]);\n            return new Pt_1.Group(new Pt_1.Pt(p.x + h * dv.y / dr, p.y - h * dv.x / dr), new Pt_1.Pt(p.x - h * dv.y / dr, p.y + h * dv.x / dr));\n        }\n    }\n    static intersectRect2D(pts, rect) {\n        let sides = Rectangle.sides(rect);\n        let g = [];\n        for (let i = 0, len = sides.length; i < len; i++) {\n            let ps = Circle.intersectLine2D(pts, sides[i]);\n            if (ps.length > 0)\n                g.push(ps);\n        }\n        return Util_1.Util.flatten(g);\n    }\n    static toRect(pts, within = false) {\n        let r = pts[1][0];\n        if (within) {\n            let half = Math.sqrt(r * r) / 2;\n            return new Pt_1.Group(pts[0].$subtract(half), pts[0].$add(half));\n        }\n        else {\n            return new Pt_1.Group(pts[0].$subtract(r), pts[0].$add(r));\n        }\n    }\n    static toTriangle(pts, within = true) {\n        if (within) {\n            let ang = -Math.PI / 2;\n            let inc = Math.PI * 2 / 3;\n            let g = new Pt_1.Group();\n            for (let i = 0; i < 3; i++) {\n                g.push(pts[0].clone().toAngle(ang, pts[1][0], true));\n                ang += inc;\n            }\n            return g;\n        }\n        else {\n            return Triangle.fromCenter(pts[0], pts[1][0]);\n        }\n    }\n}\nexports.Circle = Circle;\nclass Triangle {\n    static fromRect(rect) {\n        let top = rect[0].$add(rect[1]).divide(2);\n        top.y = rect[0][1];\n        let left = rect[1].clone();\n        left.x = rect[0][0];\n        return new Pt_1.Group(top, rect[1].clone(), left);\n    }\n    static fromCircle(circle) {\n        return Circle.toTriangle(circle, true);\n    }\n    static fromCenter(pt, size) {\n        return Triangle.fromCircle(Circle.fromCenter(pt, size));\n    }\n    static medial(pts) {\n        if (pts.length < 3)\n            return _errorLength(new Pt_1.Group(), 3);\n        return Polygon.midpoints(pts, true);\n    }\n    static oppositeSide(pts, index) {\n        if (pts.length < 3)\n            return _errorLength(new Pt_1.Group(), 3);\n        if (index === 0) {\n            return Pt_1.Group.fromPtArray([pts[1], pts[2]]);\n        }\n        else if (index === 1) {\n            return Pt_1.Group.fromPtArray([pts[0], pts[2]]);\n        }\n        else {\n            return Pt_1.Group.fromPtArray([pts[0], pts[1]]);\n        }\n    }\n    static altitude(pts, index) {\n        let opp = Triangle.oppositeSide(pts, index);\n        if (opp.length > 1) {\n            return new Pt_1.Group(pts[index], Line.perpendicularFromPt(opp, pts[index]));\n        }\n        else {\n            return new Pt_1.Group();\n        }\n    }\n    static orthocenter(pts) {\n        if (pts.length < 3)\n            return _errorLength(undefined, 3);\n        let a = Triangle.altitude(pts, 0);\n        let b = Triangle.altitude(pts, 1);\n        return Line.intersectRay2D(a, b);\n    }\n    static incenter(pts) {\n        if (pts.length < 3)\n            return _errorLength(undefined, 3);\n        let a = Polygon.bisector(pts, 0).add(pts[0]);\n        let b = Polygon.bisector(pts, 1).add(pts[1]);\n        return Line.intersectRay2D(new Pt_1.Group(pts[0], a), new Pt_1.Group(pts[1], b));\n    }\n    static incircle(pts, center) {\n        let c = (center) ? center : Triangle.incenter(pts);\n        let area = Polygon.area(pts);\n        let perim = Polygon.perimeter(pts, true);\n        let r = 2 * area / perim.total;\n        return Circle.fromCenter(c, r);\n    }\n    static circumcenter(pts) {\n        let md = Triangle.medial(pts);\n        let a = [md[0], Num_1.Geom.perpendicular(pts[0].$subtract(md[0])).p1.$add(md[0])];\n        let b = [md[1], Num_1.Geom.perpendicular(pts[1].$subtract(md[1])).p1.$add(md[1])];\n        return Line.intersectRay2D(a, b);\n    }\n    static circumcircle(pts, center) {\n        let c = (center) ? center : Triangle.circumcenter(pts);\n        let r = pts[0].$subtract(c).magnitude();\n        return Circle.fromCenter(c, r);\n    }\n}\nexports.Triangle = Triangle;\nclass Polygon {\n    static centroid(pts) {\n        return Num_1.Geom.centroid(pts);\n    }\n    static rectangle(center, widthOrSize, height) {\n        return Rectangle.corners(Rectangle.fromCenter(center, widthOrSize, height));\n    }\n    static fromCenter(center, radius, sides) {\n        let g = new Pt_1.Group();\n        for (let i = 0; i < sides; i++) {\n            let ang = Math.PI * 2 * i / sides;\n            g.push(new Pt_1.Pt(Math.cos(ang) * radius, Math.sin(ang) * radius).add(center));\n        }\n        return g;\n    }\n    static lineAt(pts, idx) {\n        if (idx < 0 || idx >= pts.length)\n            throw new Error(\"index out of the Polygon's range\");\n        return new Pt_1.Group(pts[idx], (idx === pts.length - 1) ? pts[0] : pts[idx + 1]);\n    }\n    static lines(pts, closePath = true) {\n        if (pts.length < 2)\n            return _errorLength(new Pt_1.Group(), 2);\n        let sp = Util_1.Util.split(pts, 2, 1);\n        if (closePath)\n            sp.push(new Pt_1.Group(pts[pts.length - 1], pts[0]));\n        return sp.map((g) => g);\n    }\n    static midpoints(pts, closePath = false, t = 0.5) {\n        if (pts.length < 2)\n            return _errorLength(new Pt_1.Group(), 2);\n        let sides = Polygon.lines(pts, closePath);\n        let mids = sides.map((s) => Num_1.Geom.interpolate(s[0], s[1], t));\n        return mids;\n    }\n    static adjacentSides(pts, index, closePath = false) {\n        if (pts.length < 2)\n            return _errorLength(new Pt_1.Group(), 2);\n        if (index < 0 || index >= pts.length)\n            return _errorOutofBound(new Pt_1.Group(), index);\n        let gs = [];\n        let left = index - 1;\n        if (closePath && left < 0)\n            left = pts.length - 1;\n        if (left >= 0)\n            gs.push(new Pt_1.Group(pts[index], pts[left]));\n        let right = index + 1;\n        if (closePath && right > pts.length - 1)\n            right = 0;\n        if (right <= pts.length - 1)\n            gs.push(new Pt_1.Group(pts[index], pts[right]));\n        return gs;\n    }\n    static bisector(pts, index) {\n        let sides = Polygon.adjacentSides(pts, index, true);\n        if (sides.length >= 2) {\n            let a = sides[0][1].$subtract(sides[0][0]).unit();\n            let b = sides[1][1].$subtract(sides[1][0]).unit();\n            return a.add(b).divide(2);\n        }\n        else {\n            return undefined;\n        }\n    }\n    static perimeter(pts, closePath = false) {\n        if (pts.length < 2)\n            return _errorLength(new Pt_1.Group(), 2);\n        let lines = Polygon.lines(pts, closePath);\n        let mag = 0;\n        let p = Pt_1.Pt.make(lines.length, 0);\n        for (let i = 0, len = lines.length; i < len; i++) {\n            let m = Line.magnitude(lines[i]);\n            mag += m;\n            p[i] = m;\n        }\n        return {\n            total: mag,\n            segments: p\n        };\n    }\n    static area(pts) {\n        if (pts.length < 3)\n            return _errorLength(new Pt_1.Group(), 3);\n        let det = (a, b) => a[0] * b[1] - a[1] * b[0];\n        let area = 0;\n        for (let i = 0, len = pts.length; i < len; i++) {\n            if (i < pts.length - 1) {\n                area += det(pts[i], pts[i + 1]);\n            }\n            else {\n                area += det(pts[i], pts[0]);\n            }\n        }\n        return Math.abs(area / 2);\n    }\n    static convexHull(pts, sorted = false) {\n        if (pts.length < 3)\n            return _errorLength(new Pt_1.Group(), 3);\n        if (!sorted) {\n            pts = pts.slice();\n            pts.sort((a, b) => a[0] - b[0]);\n        }\n        let left = (a, b, c) => {\n            return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1]) > 0;\n        };\n        let dq = [];\n        let bot = pts.length - 2;\n        let top = bot + 3;\n        dq[bot] = pts[2];\n        dq[top] = pts[2];\n        if (left(pts[0], pts[1], pts[2])) {\n            dq[bot + 1] = pts[0];\n            dq[bot + 2] = pts[1];\n        }\n        else {\n            dq[bot + 1] = pts[1];\n            dq[bot + 2] = pts[0];\n        }\n        for (let i = 3, len = pts.length; i < len; i++) {\n            let pt = pts[i];\n            if (left(dq[bot], dq[bot + 1], pt) && left(dq[top - 1], dq[top], pt)) {\n                continue;\n            }\n            while (!left(dq[bot], dq[bot + 1], pt)) {\n                bot += 1;\n            }\n            bot -= 1;\n            dq[bot] = pt;\n            while (!left(dq[top - 1], dq[top], pt)) {\n                top -= 1;\n            }\n            top += 1;\n            dq[top] = pt;\n        }\n        let hull = new Pt_1.Group();\n        for (let h = 0; h < (top - bot); h++) {\n            hull.push(dq[bot + h]);\n        }\n        return hull;\n    }\n    static network(pts, originIndex = 0) {\n        let g = [];\n        for (let i = 0, len = pts.length; i < len; i++) {\n            if (i != originIndex)\n                g.push(new Pt_1.Group(pts[originIndex], pts[i]));\n        }\n        return g;\n    }\n    static nearestPt(pts, pt) {\n        let _near = Number.MAX_VALUE;\n        let _item = -1;\n        for (let i = 0, len = pts.length; i < len; i++) {\n            let d = pts[i].$subtract(pt).magnitudeSq();\n            if (d < _near) {\n                _near = d;\n                _item = i;\n            }\n        }\n        return _item;\n    }\n    static projectAxis(poly, unitAxis) {\n        let dot = unitAxis.dot(poly[0]);\n        let d = new Pt_1.Pt(dot, dot);\n        for (let n = 1, len = poly.length; n < len; n++) {\n            dot = unitAxis.dot(poly[n]);\n            d = new Pt_1.Pt(Math.min(dot, d[0]), Math.max(dot, d[1]));\n        }\n        return d;\n    }\n    static _axisOverlap(poly1, poly2, unitAxis) {\n        let pa = Polygon.projectAxis(poly1, unitAxis);\n        let pb = Polygon.projectAxis(poly2, unitAxis);\n        return (pa[0] < pb[0]) ? pb[0] - pa[1] : pa[0] - pb[1];\n    }\n    static hasIntersectPoint(poly, pt) {\n        let c = false;\n        for (let i = 0, len = poly.length; i < len; i++) {\n            let ln = Polygon.lineAt(poly, i);\n            if (((ln[0][1] > pt[1]) != (ln[1][1] > pt[1])) &&\n                (pt[0] < (ln[1][0] - ln[0][0]) * (pt[1] - ln[0][1]) / (ln[1][1] - ln[0][1]) + ln[0][0])) {\n                c = !c;\n            }\n        }\n        return c;\n    }\n    static hasIntersectCircle(poly, circle) {\n        let info = {\n            which: -1,\n            dist: 0,\n            normal: null,\n            edge: null,\n            vertex: null,\n        };\n        let c = circle[0];\n        let r = circle[1][0];\n        let minDist = Number.MAX_SAFE_INTEGER;\n        for (let i = 0, len = poly.length; i < len; i++) {\n            let edge = Polygon.lineAt(poly, i);\n            let axis = new Pt_1.Pt(edge[0].y - edge[1].y, edge[1].x - edge[0].x).unit();\n            let poly2 = new Pt_1.Group(c.$add(axis.$multiply(r)), c.$subtract(axis.$multiply(r)));\n            let dist = Polygon._axisOverlap(poly, poly2, axis);\n            if (dist > 0) {\n                return null;\n            }\n            else if (Math.abs(dist) < minDist) {\n                let check = Rectangle.withinBound(edge, Line.perpendicularFromPt(edge, c)) || Circle.intersectLine2D(circle, edge).length > 0;\n                if (check) {\n                    info.edge = edge;\n                    info.normal = axis;\n                    minDist = Math.abs(dist);\n                    info.which = i;\n                }\n            }\n        }\n        if (!info.edge)\n            return null;\n        let dir = c.$subtract(Polygon.centroid(poly)).dot(info.normal);\n        if (dir < 0)\n            info.normal.multiply(-1);\n        info.dist = minDist;\n        info.vertex = c;\n        return info;\n    }\n    static hasIntersectPolygon(poly1, poly2) {\n        let info = {\n            which: -1,\n            dist: 0,\n            normal: new Pt_1.Pt(),\n            edge: new Pt_1.Group(),\n            vertex: new Pt_1.Pt()\n        };\n        let minDist = Number.MAX_SAFE_INTEGER;\n        for (let i = 0, plen = (poly1.length + poly2.length); i < plen; i++) {\n            let edge = (i < poly1.length) ? Polygon.lineAt(poly1, i) : Polygon.lineAt(poly2, i - poly1.length);\n            let axis = new Pt_1.Pt(edge[0].y - edge[1].y, edge[1].x - edge[0].x).unit();\n            let dist = Polygon._axisOverlap(poly1, poly2, axis);\n            if (dist > 0) {\n                return null;\n            }\n            else if (Math.abs(dist) < minDist) {\n                info.edge = edge;\n                info.normal = axis;\n                minDist = Math.abs(dist);\n                info.which = (i < poly1.length) ? 0 : 1;\n            }\n        }\n        info.dist = minDist;\n        let b1 = (info.which === 0) ? poly2 : poly1;\n        let b2 = (info.which === 0) ? poly1 : poly2;\n        let c1 = Polygon.centroid(b1);\n        let c2 = Polygon.centroid(b2);\n        let dir = c1.$subtract(c2).dot(info.normal);\n        if (dir < 0)\n            info.normal.multiply(-1);\n        let smallest = Number.MAX_SAFE_INTEGER;\n        for (let i = 0, len = b1.length; i < len; i++) {\n            let d = info.normal.dot(b1[i].$subtract(c2));\n            if (d < smallest) {\n                smallest = d;\n                info.vertex = b1[i];\n            }\n        }\n        return info;\n    }\n    static intersectPolygon2D(poly1, poly2) {\n        let lp = Polygon.lines(poly1);\n        let g = [];\n        for (let i = 0, len = lp.length; i < len; i++) {\n            let ins = Line.intersectPolygon2D(lp[i], poly2, false);\n            if (ins)\n                g.push(ins);\n        }\n        return Util_1.Util.flatten(g, true);\n    }\n    static toRects(polys) {\n        let boxes = polys.map((g) => Num_1.Geom.boundingBox(g));\n        let merged = Util_1.Util.flatten(boxes, false);\n        boxes.unshift(Num_1.Geom.boundingBox(merged));\n        return boxes;\n    }\n}\nexports.Polygon = Polygon;\nclass Curve {\n    static getSteps(steps) {\n        let ts = new Pt_1.Group();\n        for (let i = 0; i <= steps; i++) {\n            let t = i / steps;\n            ts.push(new Pt_1.Pt(t * t * t, t * t, t, 1));\n        }\n        return ts;\n    }\n    static controlPoints(pts, index = 0, copyStart = false) {\n        if (index > pts.length - 1)\n            return new Pt_1.Group();\n        let _index = (i) => (i < pts.length - 1) ? i : pts.length - 1;\n        let p0 = pts[index];\n        index = (copyStart) ? index : index + 1;\n        return new Pt_1.Group(p0, pts[_index(index++)], pts[_index(index++)], pts[_index(index++)]);\n    }\n    static _calcPt(ctrls, params) {\n        let x = ctrls.reduce((a, c, i) => a + c.x * params[i], 0);\n        let y = ctrls.reduce((a, c, i) => a + c.y * params[i], 0);\n        if (ctrls[0].length > 2) {\n            let z = ctrls.reduce((a, c, i) => a + c.z * params[i], 0);\n            return new Pt_1.Pt(x, y, z);\n        }\n        return new Pt_1.Pt(x, y);\n    }\n    static catmullRom(pts, steps = 10) {\n        if (pts.length < 2)\n            return new Pt_1.Group();\n        let ps = new Pt_1.Group();\n        let ts = Curve.getSteps(steps);\n        let c = Curve.controlPoints(pts, 0, true);\n        for (let i = 0; i <= steps; i++) {\n            ps.push(Curve.catmullRomStep(ts[i], c));\n        }\n        let k = 0;\n        while (k < pts.length - 2) {\n            let cp = Curve.controlPoints(pts, k);\n            if (cp.length > 0) {\n                for (let i = 0; i <= steps; i++) {\n                    ps.push(Curve.catmullRomStep(ts[i], cp));\n                }\n                k++;\n            }\n        }\n        return ps;\n    }\n    static catmullRomStep(step, ctrls) {\n        let m = new Pt_1.Group(new Pt_1.Pt(-0.5, 1, -0.5, 0), new Pt_1.Pt(1.5, -2.5, 0, 1), new Pt_1.Pt(-1.5, 2, 0.5, 0), new Pt_1.Pt(0.5, -0.5, 0, 0));\n        return Curve._calcPt(ctrls, LinearAlgebra_1.Mat.multiply([step], m, true)[0]);\n    }\n    static cardinal(pts, steps = 10, tension = 0.5) {\n        if (pts.length < 2)\n            return new Pt_1.Group();\n        let ps = new Pt_1.Group();\n        let ts = Curve.getSteps(steps);\n        let c = Curve.controlPoints(pts, 0, true);\n        for (let i = 0; i <= steps; i++) {\n            ps.push(Curve.cardinalStep(ts[i], c, tension));\n        }\n        let k = 0;\n        while (k < pts.length - 2) {\n            let cp = Curve.controlPoints(pts, k);\n            if (cp.length > 0) {\n                for (let i = 0; i <= steps; i++) {\n                    ps.push(Curve.cardinalStep(ts[i], cp, tension));\n                }\n                k++;\n            }\n        }\n        return ps;\n    }\n    static cardinalStep(step, ctrls, tension = 0.5) {\n        let m = new Pt_1.Group(new Pt_1.Pt(-1, 2, -1, 0), new Pt_1.Pt(-1, 1, 0, 0), new Pt_1.Pt(1, -2, 1, 0), new Pt_1.Pt(1, -1, 0, 0));\n        let h = LinearAlgebra_1.Mat.multiply([step], m, true)[0].multiply(tension);\n        let h2 = (2 * step[0] - 3 * step[1] + 1);\n        let h3 = -2 * step[0] + 3 * step[1];\n        let pt = Curve._calcPt(ctrls, h);\n        pt.x += h2 * ctrls[1].x + h3 * ctrls[2].x;\n        pt.y += h2 * ctrls[1].y + h3 * ctrls[2].y;\n        if (pt.length > 2)\n            pt.z += h2 * ctrls[1].z + h3 * ctrls[2].z;\n        return pt;\n    }\n    static bezier(pts, steps = 10) {\n        if (pts.length < 4)\n            return new Pt_1.Group();\n        let ps = new Pt_1.Group();\n        let ts = Curve.getSteps(steps);\n        let k = 0;\n        while (k < pts.length - 3) {\n            let c = Curve.controlPoints(pts, k);\n            if (c.length > 0) {\n                for (let i = 0; i <= steps; i++) {\n                    ps.push(Curve.bezierStep(ts[i], c));\n                }\n                k += 3;\n            }\n        }\n        return ps;\n    }\n    static bezierStep(step, ctrls) {\n        let m = new Pt_1.Group(new Pt_1.Pt(-1, 3, -3, 1), new Pt_1.Pt(3, -6, 3, 0), new Pt_1.Pt(-3, 3, 0, 0), new Pt_1.Pt(1, 0, 0, 0));\n        return Curve._calcPt(ctrls, LinearAlgebra_1.Mat.multiply([step], m, true)[0]);\n    }\n    static bspline(pts, steps = 10, tension = 1) {\n        if (pts.length < 2)\n            return new Pt_1.Group();\n        let ps = new Pt_1.Group();\n        let ts = Curve.getSteps(steps);\n        let k = 0;\n        while (k < pts.length - 3) {\n            let c = Curve.controlPoints(pts, k);\n            if (c.length > 0) {\n                if (tension !== 1) {\n                    for (let i = 0; i <= steps; i++) {\n                        ps.push(Curve.bsplineTensionStep(ts[i], c, tension));\n                    }\n                }\n                else {\n                    for (let i = 0; i <= steps; i++) {\n                        ps.push(Curve.bsplineStep(ts[i], c));\n                    }\n                }\n                k++;\n            }\n        }\n        return ps;\n    }\n    static bsplineStep(step, ctrls) {\n        let m = new Pt_1.Group(new Pt_1.Pt(-0.16666666666666666, 0.5, -0.5, 0.16666666666666666), new Pt_1.Pt(0.5, -1, 0, 0.6666666666666666), new Pt_1.Pt(-0.5, 0.5, 0.5, 0.16666666666666666), new Pt_1.Pt(0.16666666666666666, 0, 0, 0));\n        return Curve._calcPt(ctrls, LinearAlgebra_1.Mat.multiply([step], m, true)[0]);\n    }\n    static bsplineTensionStep(step, ctrls, tension = 1) {\n        let m = new Pt_1.Group(new Pt_1.Pt(-0.16666666666666666, 0.5, -0.5, 0.16666666666666666), new Pt_1.Pt(-1.5, 2, 0, -0.3333333333333333), new Pt_1.Pt(1.5, -2.5, 0.5, 0.16666666666666666), new Pt_1.Pt(0.16666666666666666, 0, 0, 0));\n        let h = LinearAlgebra_1.Mat.multiply([step], m, true)[0].multiply(tension);\n        let h2 = (2 * step[0] - 3 * step[1] + 1);\n        let h3 = -2 * step[0] + 3 * step[1];\n        let pt = Curve._calcPt(ctrls, h);\n        pt.x += h2 * ctrls[1].x + h3 * ctrls[2].x;\n        pt.y += h2 * ctrls[1].y + h3 * ctrls[2].y;\n        if (pt.length > 2)\n            pt.z += h2 * ctrls[1].z + h3 * ctrls[2].z;\n        return pt;\n    }\n}\nexports.Curve = Curve;\n\n\n/***/ }),\n\n/***/ \"./src/Physics.ts\":\n/*!************************!*\\\n  !*** ./src/Physics.ts ***!\n  \\************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst Op_1 = __webpack_require__(/*! ./Op */ \"./src/Op.ts\");\nclass World {\n    constructor(bound, friction = 1, gravity = 0) {\n        this._lastTime = null;\n        this._gravity = new Pt_1.Pt();\n        this._friction = 1;\n        this._damping = 0.75;\n        this._particles = [];\n        this._bodies = [];\n        this._pnames = [];\n        this._bnames = [];\n        this._bound = Pt_1.Bound.fromGroup(bound);\n        this._friction = friction;\n        this._gravity = (typeof gravity === \"number\") ? new Pt_1.Pt(0, gravity) : new Pt_1.Pt(gravity);\n        return this;\n    }\n    get bound() { return this._bound; }\n    set bound(bound) { this._bound = bound; }\n    get gravity() { return this._gravity; }\n    set gravity(g) { this._gravity = g; }\n    get friction() { return this._friction; }\n    set friction(f) { this._friction = f; }\n    get damping() { return this._damping; }\n    set damping(f) { this._damping = f; }\n    get bodyCount() { return this._bodies.length; }\n    get particleCount() { return this._particles.length; }\n    body(id) {\n        let idx = id;\n        if (typeof id === \"string\" && id.length > 0) {\n            idx = this._bnames.indexOf(id);\n        }\n        if (!(idx >= 0))\n            return undefined;\n        return this._bodies[idx];\n    }\n    particle(id) {\n        let idx = id;\n        if (typeof id === \"string\" && id.length > 0) {\n            idx = this._pnames.indexOf(id);\n        }\n        if (!(idx >= 0))\n            return undefined;\n        return this._particles[idx];\n    }\n    bodyIndex(name) {\n        return this._bnames.indexOf(name);\n    }\n    particleIndex(name) {\n        return this._pnames.indexOf(name);\n    }\n    update(ms) {\n        let dt = ms / 1000;\n        this._updateParticles(dt);\n        this._updateBodies(dt);\n    }\n    drawParticles(fn) {\n        this._drawParticles = fn;\n    }\n    drawBodies(fn) {\n        this._drawBodies = fn;\n    }\n    add(p, name = '') {\n        if (p instanceof Body) {\n            this._bodies.push(p);\n            this._bnames.push(name);\n        }\n        else {\n            this._particles.push(p);\n            this._pnames.push(name);\n        }\n        return this;\n    }\n    _index(fn, id) {\n        let index = 0;\n        if (typeof id === \"string\") {\n            index = fn(id);\n            if (index < 0)\n                throw new Error(`Cannot find index of ${id}. You can use particleIndex() or bodyIndex() function to check existence by name.`);\n        }\n        else {\n            index = id;\n        }\n        return index;\n    }\n    removeBody(from, count = 1) {\n        const index = this._index(this.bodyIndex.bind(this), from);\n        const param = (index < 0) ? [index * -1 - 1, count] : [index, count];\n        this._bodies.splice(param[0], param[1]);\n        this._bnames.splice(param[0], param[1]);\n        return this;\n    }\n    removeParticle(from, count = 1) {\n        const index = this._index(this.particleIndex.bind(this), from);\n        const param = (index < 0) ? [index * -1 - 1, count] : [index, count];\n        this._particles.splice(param[0], param[1]);\n        this._pnames.splice(param[0], param[1]);\n        return this;\n    }\n    static edgeConstraint(p1, p2, dist, stiff = 1, precise = false) {\n        const m1 = 1 / (p1.mass || 1);\n        const m2 = 1 / (p2.mass || 1);\n        const mm = m1 + m2;\n        let delta = p2.$subtract(p1);\n        let distSq = dist * dist;\n        let d = (precise) ? (dist / delta.magnitude() - 1) : (distSq / (delta.dot(delta) + distSq) - 0.5);\n        let f = delta.$multiply(d * stiff);\n        p1.subtract(f.$multiply(m1 / mm));\n        p2.add(f.$multiply(m2 / mm));\n        return p1;\n    }\n    static boundConstraint(p, rect, damping = 0.75) {\n        let bound = rect.boundingBox();\n        let np = p.$min(bound[1].subtract(p.radius)).$max(bound[0].add(p.radius));\n        if (np[0] === bound[0][0] || np[0] === bound[1][0]) {\n            let c = p.changed.$multiply(damping);\n            p.previous = np.$subtract(new Pt_1.Pt(-c[0], c[1]));\n        }\n        else if (np[1] === bound[0][1] || np[1] === bound[1][1]) {\n            let c = p.changed.$multiply(damping);\n            p.previous = np.$subtract(new Pt_1.Pt(c[0], -c[1]));\n        }\n        p.to(np);\n    }\n    integrate(p, dt, prevDt) {\n        p.addForce(this._gravity);\n        p.verlet(dt, this._friction, prevDt);\n        return p;\n    }\n    _updateParticles(dt) {\n        for (let i = 0, len = this._particles.length; i < len; i++) {\n            let p = this._particles[i];\n            this.integrate(p, dt, this._lastTime);\n            World.boundConstraint(p, this._bound, this._damping);\n            for (let k = i + 1; k < len; k++) {\n                if (i !== k) {\n                    let p2 = this._particles[k];\n                    p.collide(p2, this._damping);\n                }\n            }\n            if (this._drawParticles)\n                this._drawParticles(p, i);\n        }\n        this._lastTime = dt;\n    }\n    _updateBodies(dt) {\n        for (let i = 0, len = this._bodies.length; i < len; i++) {\n            let bds = this._bodies[i];\n            if (bds) {\n                for (let k = 0, klen = bds.length; k < klen; k++) {\n                    let bk = bds[k];\n                    World.boundConstraint(bk, this._bound, this._damping);\n                    this.integrate(bk, dt, this._lastTime);\n                }\n                for (let k = i + 1; k < len; k++) {\n                    bds.processBody(this._bodies[k]);\n                }\n                for (let m = 0, mlen = this._particles.length; m < mlen; m++) {\n                    bds.processParticle(this._particles[m]);\n                }\n                bds.processEdges();\n                if (this._drawBodies)\n                    this._drawBodies(bds, i);\n            }\n        }\n    }\n}\nexports.World = World;\nclass Particle extends Pt_1.Pt {\n    constructor(...args) {\n        super(...args);\n        this._mass = 1;\n        this._radius = 0;\n        this._force = new Pt_1.Pt();\n        this._prev = new Pt_1.Pt();\n        this._lock = false;\n        this._prev = this.clone();\n    }\n    get mass() { return this._mass; }\n    set mass(m) { this._mass = m; }\n    get radius() { return this._radius; }\n    set radius(f) { this._radius = f; }\n    get previous() { return this._prev; }\n    set previous(p) { this._prev = p; }\n    get force() { return this._force; }\n    set force(g) { this._force = g; }\n    get body() { return this._body; }\n    set body(b) { this._body = b; }\n    get lock() { return this._lock; }\n    set lock(b) {\n        this._lock = b;\n        this._lockPt = new Pt_1.Pt(this);\n    }\n    get changed() { return this.$subtract(this._prev); }\n    set position(p) {\n        this.previous.to(this);\n        if (this._lock)\n            this._lockPt = p;\n        this.to(p);\n    }\n    size(r) {\n        this._mass = r;\n        this._radius = r;\n        return this;\n    }\n    addForce(...args) {\n        this._force.add(...args);\n        return this._force;\n    }\n    verlet(dt, friction, lastDt) {\n        if (this._lock) {\n            this.to(this._lockPt);\n        }\n        else {\n            let lt = (lastDt) ? lastDt : dt;\n            let a = this._force.multiply(dt * (dt + lt) / 2);\n            let v = this.changed.multiply(friction * dt / lt).add(a);\n            this._prev = this.clone();\n            this.add(v);\n            this._force = new Pt_1.Pt();\n        }\n        return this;\n    }\n    hit(...args) {\n        this._prev.subtract(new Pt_1.Pt(...args).$divide(Math.sqrt(this._mass)));\n        return this;\n    }\n    collide(p2, damp = 1) {\n        let p1 = this;\n        let dp = p1.$subtract(p2);\n        let distSq = dp.magnitudeSq();\n        let dr = p1.radius + p2.radius;\n        if (distSq < dr * dr) {\n            let c1 = p1.changed;\n            let c2 = p2.changed;\n            let dist = Math.sqrt(distSq);\n            let d = dp.$multiply(((dist - dr) / dist) / 2);\n            let np1 = p1.$subtract(d);\n            let np2 = p2.$add(d);\n            p1.to(np1);\n            p2.to(np2);\n            let f1 = damp * dp.dot(c1) / distSq;\n            let f2 = damp * dp.dot(c2) / distSq;\n            let dm1 = p1.mass / (p1.mass + p2.mass);\n            let dm2 = p2.mass / (p1.mass + p2.mass);\n            c1.add(new Pt_1.Pt(f2 * dp[0] - f1 * dp[0], f2 * dp[1] - f1 * dp[1]).$multiply(dm2));\n            c2.add(new Pt_1.Pt(f1 * dp[0] - f2 * dp[0], f1 * dp[1] - f2 * dp[1]).$multiply(dm1));\n            p1.previous = p1.$subtract(c1);\n            p2.previous = p2.$subtract(c2);\n        }\n    }\n    toString() {\n        return `Particle: ${this[0]} ${this[1]} | previous ${this._prev[0]} ${this._prev[1]} | mass ${this._mass}`;\n    }\n}\nexports.Particle = Particle;\nclass Body extends Pt_1.Group {\n    constructor() {\n        super();\n        this._cs = [];\n        this._stiff = 1;\n        this._locks = {};\n        this._mass = 1;\n    }\n    static fromGroup(list, stiff = 1, autoLink = true, autoMass = true) {\n        let b = new Body().init(list);\n        if (autoLink)\n            b.linkAll(stiff);\n        if (autoMass)\n            b.autoMass();\n        return b;\n    }\n    init(list, stiff = 1) {\n        let c = new Pt_1.Pt();\n        for (let i = 0, len = list.length; i < len; i++) {\n            let p = new Particle(list[i]);\n            p.body = this;\n            c.add(list[i]);\n            this.push(p);\n        }\n        this._stiff = stiff;\n        return this;\n    }\n    get mass() { return this._mass; }\n    set mass(m) {\n        this._mass = m;\n        for (let i = 0, len = this.length; i < len; i++) {\n            this[i].mass = this._mass;\n        }\n    }\n    autoMass() {\n        this.mass = Math.sqrt(Op_1.Polygon.area(this)) / 10;\n        return this;\n    }\n    link(index1, index2, stiff) {\n        if (index1 < 0 || index1 >= this.length)\n            throw new Error(\"index1 is not in the Group's indices\");\n        if (index2 < 0 || index2 >= this.length)\n            throw new Error(\"index1 is not in the Group's indices\");\n        let d = this[index1].$subtract(this[index2]).magnitude();\n        this._cs.push([index1, index2, d, stiff || this._stiff]);\n        return this;\n    }\n    linkAll(stiff) {\n        let half = this.length / 2;\n        for (let i = 0, len = this.length; i < len; i++) {\n            let n = (i >= len - 1) ? 0 : i + 1;\n            this.link(i, n, stiff);\n            if (len > 4) {\n                let nd = (Math.floor(half / 2)) + 1;\n                let n2 = (i >= len - nd) ? i % len : i + nd;\n                this.link(i, n2, stiff);\n            }\n            if (i <= half - 1) {\n                this.link(i, Math.min(this.length - 1, i + Math.floor(half)));\n            }\n        }\n    }\n    linksToLines() {\n        let gs = [];\n        for (let i = 0, len = this._cs.length; i < len; i++) {\n            let ln = this._cs[i];\n            gs.push(new Pt_1.Group(this[ln[0]], this[ln[1]]));\n        }\n        return gs;\n    }\n    processEdges() {\n        for (let i = 0, len = this._cs.length; i < len; i++) {\n            let [m, n, d, s] = this._cs[i];\n            World.edgeConstraint(this[m], this[n], d, s);\n        }\n    }\n    processBody(b) {\n        let b1 = this;\n        let b2 = b;\n        let hit = Op_1.Polygon.hasIntersectPolygon(b1, b2);\n        if (hit) {\n            let cv = hit.normal.$multiply(hit.dist);\n            let t;\n            let eg = hit.edge;\n            if (Math.abs(eg[0][0] - eg[1][0]) > Math.abs(eg[0][1] - eg[1][1])) {\n                t = (hit.vertex[0] - cv[0] - eg[0][0]) / (eg[1][0] - eg[0][0]);\n            }\n            else {\n                t = (hit.vertex[1] - cv[1] - eg[0][1]) / (eg[1][1] - eg[0][1]);\n            }\n            let lambda = 1 / (t * t + (1 - t) * (1 - t));\n            let m0 = hit.vertex.body.mass || 1;\n            let m1 = hit.edge[0].body.mass || 1;\n            let mr0 = m0 / (m0 + m1);\n            let mr1 = m1 / (m0 + m1);\n            eg[0].subtract(cv.$multiply(mr0 * (1 - t) * lambda / 2));\n            eg[1].subtract(cv.$multiply(mr0 * t * lambda / 2));\n            hit.vertex.add(cv.$multiply(mr1));\n        }\n    }\n    processParticle(b) {\n        let b1 = this;\n        let b2 = b;\n        let hit = Op_1.Polygon.hasIntersectCircle(b1, Op_1.Circle.fromCenter(b, b.radius));\n        if (hit) {\n            let cv = hit.normal.$multiply(hit.dist);\n            let t;\n            let eg = hit.edge;\n            if (Math.abs(eg[0][0] - eg[1][0]) > Math.abs(eg[0][1] - eg[1][1])) {\n                t = (hit.vertex[0] - cv[0] - eg[0][0]) / (eg[1][0] - eg[0][0]);\n            }\n            else {\n                t = (hit.vertex[1] - cv[1] - eg[0][1]) / (eg[1][1] - eg[0][1]);\n            }\n            let lambda = 1 / (t * t + (1 - t) * (1 - t));\n            let m0 = hit.vertex.mass || b2.mass || 1;\n            let m1 = hit.edge[0].body.mass || 1;\n            let mr0 = m0 / (m0 + m1);\n            let mr1 = m1 / (m0 + m1);\n            eg[0].subtract(cv.$multiply(mr0 * (1 - t) * lambda / 2));\n            eg[1].subtract(cv.$multiply(mr0 * t * lambda / 2));\n            let c1 = b.changed.add(cv.$multiply(mr1));\n            b.previous = b.$subtract(c1);\n        }\n    }\n}\nexports.Body = Body;\n\n\n/***/ }),\n\n/***/ \"./src/Play.ts\":\n/*!*********************!*\\\n  !*** ./src/Play.ts ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst Num_1 = __webpack_require__(/*! ./Num */ \"./src/Num.ts\");\nclass Tempo {\n    constructor(bpm) {\n        this._listeners = {};\n        this._listenerInc = 0;\n        this.bpm = bpm;\n    }\n    static fromBeat(ms) {\n        return new Tempo(60000 / ms);\n    }\n    get bpm() { return this._bpm; }\n    set bpm(n) {\n        this._bpm = n;\n        this._ms = 60000 / this._bpm;\n    }\n    get ms() { return this._ms; }\n    set ms(n) {\n        this._bpm = Math.floor(60000 / n);\n        this._ms = 60000 / this._bpm;\n    }\n    _createID(listener) {\n        let id = '';\n        if (typeof listener === 'function') {\n            id = '_b' + (this._listenerInc++);\n        }\n        else {\n            id = listener.name || '_b' + (this._listenerInc++);\n        }\n        return id;\n    }\n    every(beats) {\n        let self = this;\n        let p = Array.isArray(beats) ? beats[0] : beats;\n        return {\n            start: function (fn, offset = 0, name) {\n                let id = name || self._createID(fn);\n                self._listeners[id] = { name: id, beats: beats, period: p, index: 0, offset: offset, duration: -1, continuous: false, fn: fn };\n                return this;\n            },\n            progress: function (fn, offset = 0, name) {\n                let id = name || self._createID(fn);\n                self._listeners[id] = { name: id, beats: beats, period: p, index: 0, offset: offset, duration: -1, continuous: true, fn: fn };\n                return this;\n            }\n        };\n    }\n    track(time) {\n        for (let k in this._listeners) {\n            if (this._listeners.hasOwnProperty(k)) {\n                let li = this._listeners[k];\n                let _t = (li.offset) ? time + li.offset : time;\n                let ms = li.period * this._ms;\n                let isStart = false;\n                if (_t > li.duration + ms) {\n                    li.duration = _t - (_t % this._ms);\n                    if (Array.isArray(li.beats)) {\n                        li.index = (li.index + 1) % li.beats.length;\n                        li.period = li.beats[li.index];\n                    }\n                    isStart = true;\n                }\n                let count = Math.max(0, Math.ceil(Math.floor(li.duration / this._ms) / li.period));\n                let params = (li.continuous) ? [count, Num_1.Num.clamp((_t - li.duration) / ms, 0, 1), _t, isStart] : [count];\n                if (li.continuous || isStart) {\n                    let done = li.fn.apply(li, params);\n                    if (done)\n                        delete this._listeners[li.name];\n                }\n            }\n        }\n    }\n    stop(name) {\n        if (this._listeners[name])\n            delete this._listeners[name];\n    }\n    animate(time, ftime) {\n        this.track(time);\n    }\n    resize(bound, evt) {\n        return;\n    }\n    action(type, px, py, evt) {\n        return;\n    }\n}\nexports.Tempo = Tempo;\nclass Sound {\n    constructor(type) {\n        this._playing = false;\n        this._type = type;\n        let _ctx = window.AudioContext || window.webkitAudioContext || false;\n        if (!_ctx)\n            throw (new Error(\"Your browser doesn't support Web Audio. (No AudioContext)\"));\n        this._ctx = (_ctx) ? new _ctx() : undefined;\n    }\n    static from(node, ctx, type = \"gen\", stream) {\n        let s = new Sound(type);\n        s._node = node;\n        s._ctx = ctx;\n        if (stream)\n            s._stream = stream;\n        return s;\n    }\n    static load(source, crossOrigin = \"anonymous\") {\n        return new Promise((resolve, reject) => {\n            let s = new Sound(\"file\");\n            s._source = (typeof source === 'string') ? new Audio(source) : source;\n            s._source.autoplay = false;\n            s._source.crossOrigin = crossOrigin;\n            s._source.addEventListener(\"ended\", function () { s._playing = false; });\n            s._source.addEventListener('error', function () { reject(\"Error loading sound\"); });\n            s._source.addEventListener('canplaythrough', function () {\n                s._node = s._ctx.createMediaElementSource(s._source);\n                resolve(s);\n            });\n        });\n    }\n    static loadAsBuffer(url) {\n        return new Promise((resolve, reject) => {\n            let request = new XMLHttpRequest();\n            request.open('GET', url, true);\n            request.responseType = 'arraybuffer';\n            let s = new Sound(\"file\");\n            request.onload = function () {\n                s._ctx.decodeAudioData(request.response, function (buffer) {\n                    s.createBuffer(buffer);\n                    resolve(s);\n                }, (err) => reject(\"Error decoding audio\"));\n            };\n            request.send();\n        });\n    }\n    createBuffer(buf) {\n        this._node = this._ctx.createBufferSource();\n        if (buf !== undefined)\n            this._buffer = buf;\n        this._node.buffer = this._buffer;\n        this._node.onended = () => { this._playing = false; };\n        return this;\n    }\n    static generate(type, val) {\n        let s = new Sound(\"gen\");\n        return s._gen(type, val);\n    }\n    _gen(type, val) {\n        this._node = this._ctx.createOscillator();\n        let osc = this._node;\n        osc.type = type;\n        if (type === 'custom') {\n            osc.setPeriodicWave(val);\n        }\n        else {\n            osc.frequency.value = val;\n        }\n        return this;\n    }\n    static input(constraint) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let s = new Sound(\"input\");\n                if (!s)\n                    return undefined;\n                const c = constraint ? constraint : { audio: true, video: false };\n                s._stream = yield navigator.mediaDevices.getUserMedia(c);\n                s._node = s._ctx.createMediaStreamSource(s._stream);\n                return s;\n            }\n            catch (e) {\n                console.error(\"Cannot get audio from input device.\");\n                return Promise.resolve(null);\n            }\n        });\n    }\n    get ctx() { return this._ctx; }\n    get node() { return this._node; }\n    get stream() { return this._stream; }\n    get source() { return this._source; }\n    get buffer() { return this._buffer; }\n    set buffer(b) { this._buffer = b; }\n    get type() { return this._type; }\n    get playing() { return this._playing; }\n    get progress() {\n        let dur = 0;\n        let curr = 0;\n        if (!!this._buffer) {\n            dur = this._buffer.duration;\n            curr = (this._timestamp) ? this._ctx.currentTime - this._timestamp : 0;\n        }\n        else {\n            dur = this._source.duration;\n            curr = this._source.currentTime;\n        }\n        return curr / dur;\n    }\n    get playable() {\n        return (this._type === \"input\") ? this._node !== undefined : (!!this._buffer || this._source.readyState === 4);\n    }\n    get binSize() {\n        return this.analyzer.size;\n    }\n    get sampleRate() {\n        return this._ctx.sampleRate;\n    }\n    get frequency() {\n        return (this._type === \"gen\") ? this._node.frequency.value : 0;\n    }\n    set frequency(f) {\n        if (this._type === \"gen\")\n            this._node.frequency.value = f;\n    }\n    connect(node) {\n        this._node.connect(node);\n        return this;\n    }\n    analyze(size = 256, minDb = -100, maxDb = -30, smooth = 0.8) {\n        let a = this._ctx.createAnalyser();\n        a.fftSize = size * 2;\n        a.minDecibels = minDb;\n        a.maxDecibels = maxDb;\n        a.smoothingTimeConstant = smooth;\n        this.analyzer = {\n            node: a,\n            size: a.frequencyBinCount,\n            data: new Uint8Array(a.frequencyBinCount)\n        };\n        this._node.connect(this.analyzer.node);\n        return this;\n    }\n    _domain(time) {\n        if (this.analyzer) {\n            if (time) {\n                this.analyzer.node.getByteTimeDomainData(this.analyzer.data);\n            }\n            else {\n                this.analyzer.node.getByteFrequencyData(this.analyzer.data);\n            }\n            return this.analyzer.data;\n        }\n        return new Uint8Array(0);\n    }\n    _domainTo(time, size, position = [0, 0], trim = [0, 0]) {\n        let data = (time) ? this.timeDomain() : this.freqDomain();\n        let g = new Pt_1.Group();\n        for (let i = trim[0], len = data.length - trim[1]; i < len; i++) {\n            g.push(new Pt_1.Pt(position[0] + size[0] * i / len, position[1] + size[1] * data[i] / 255));\n        }\n        return g;\n    }\n    timeDomain() {\n        return this._domain(true);\n    }\n    timeDomainTo(size, position = [0, 0], trim = [0, 0]) {\n        return this._domainTo(true, size, position, trim);\n    }\n    freqDomain() {\n        return this._domain(false);\n    }\n    freqDomainTo(size, position = [0, 0], trim = [0, 0]) {\n        return this._domainTo(false, size, position, trim);\n    }\n    reset() {\n        this.stop();\n        this._node.disconnect();\n        return this;\n    }\n    start(timeAt = 0) {\n        if (this._ctx.state === 'suspended')\n            this._ctx.resume();\n        if (this._type === \"file\") {\n            if (!!this._buffer) {\n                this._node.start(timeAt);\n                this._timestamp = this._ctx.currentTime + timeAt;\n            }\n            else {\n                this._source.play();\n                if (timeAt > 0)\n                    this._source.currentTime = timeAt;\n            }\n        }\n        else if (this._type === \"gen\") {\n            this._gen(this._node.type, this._node.frequency.value);\n            this._node.start();\n            if (this.analyzer)\n                this._node.connect(this.analyzer.node);\n        }\n        this._node.connect(this._ctx.destination);\n        this._playing = true;\n        return this;\n    }\n    stop() {\n        if (this._playing)\n            this._node.disconnect(this._ctx.destination);\n        if (this._type === \"file\") {\n            if (!!this._buffer) {\n                if (this.progress < 1)\n                    this._node.stop();\n            }\n            else {\n                this._source.pause();\n            }\n        }\n        else if (this._type === \"gen\") {\n            this._node.stop();\n        }\n        else if (this._type === \"input\") {\n            this._stream.getAudioTracks().forEach(track => track.stop());\n        }\n        this._playing = false;\n        return this;\n    }\n    toggle() {\n        if (this._playing) {\n            this.stop();\n        }\n        else {\n            this.start();\n        }\n        return this;\n    }\n}\nexports.Sound = Sound;\n\n\n/***/ }),\n\n/***/ \"./src/Pt.ts\":\n/*!*******************!*\\\n  !*** ./src/Pt.ts ***!\n  \\*******************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nconst Num_1 = __webpack_require__(/*! ./Num */ \"./src/Num.ts\");\nconst LinearAlgebra_1 = __webpack_require__(/*! ./LinearAlgebra */ \"./src/LinearAlgebra.ts\");\nclass Pt extends Float32Array {\n    constructor(...args) {\n        if (args.length === 1 && typeof args[0] == \"number\") {\n            super(args[0]);\n        }\n        else {\n            super((args.length > 0) ? Util_1.Util.getArgs(args) : [0, 0]);\n        }\n    }\n    static make(dimensions, defaultValue = 0, randomize = false) {\n        let p = new Float32Array(dimensions);\n        if (defaultValue)\n            p.fill(defaultValue);\n        if (randomize) {\n            for (let i = 0, len = p.length; i < len; i++) {\n                p[i] = p[i] * Math.random();\n            }\n        }\n        return new Pt(p);\n    }\n    get id() { return this._id; }\n    set id(s) { this._id = s; }\n    get x() { return this[0]; }\n    set x(n) { this[0] = n; }\n    get y() { return this[1]; }\n    set y(n) { this[1] = n; }\n    get z() { return this[2]; }\n    set z(n) { this[2] = n; }\n    get w() { return this[3]; }\n    set w(n) { this[3] = n; }\n    clone() {\n        return new Pt(this);\n    }\n    equals(p, threshold = 0.000001) {\n        for (let i = 0, len = this.length; i < len; i++) {\n            if (Math.abs(this[i] - p[i]) > threshold)\n                return false;\n        }\n        return true;\n    }\n    to(...args) {\n        let p = Util_1.Util.getArgs(args);\n        for (let i = 0, len = Math.min(this.length, p.length); i < len; i++) {\n            this[i] = p[i];\n        }\n        return this;\n    }\n    $to(...args) {\n        return this.clone().to(...args);\n    }\n    toAngle(radian, magnitude, anchorFromPt = false) {\n        let m = (magnitude != undefined) ? magnitude : this.magnitude();\n        let change = [Math.cos(radian) * m, Math.sin(radian) * m];\n        return (anchorFromPt) ? this.add(change) : this.to(change);\n    }\n    op(fn) {\n        let self = this;\n        return (...params) => {\n            return fn(self, ...params);\n        };\n    }\n    ops(fns) {\n        let _ops = [];\n        for (let i = 0, len = fns.length; i < len; i++) {\n            _ops.push(this.op(fns[i]));\n        }\n        return _ops;\n    }\n    $take(axis) {\n        let p = [];\n        for (let i = 0, len = axis.length; i < len; i++) {\n            p.push(this[axis[i]] || 0);\n        }\n        return new Pt(p);\n    }\n    $concat(...args) {\n        return new Pt(this.toArray().concat(Util_1.Util.getArgs(args)));\n    }\n    add(...args) {\n        (args.length === 1 && typeof args[0] == \"number\") ? LinearAlgebra_1.Vec.add(this, args[0]) : LinearAlgebra_1.Vec.add(this, Util_1.Util.getArgs(args));\n        return this;\n    }\n    $add(...args) { return this.clone().add(...args); }\n    subtract(...args) {\n        (args.length === 1 && typeof args[0] == \"number\") ? LinearAlgebra_1.Vec.subtract(this, args[0]) : LinearAlgebra_1.Vec.subtract(this, Util_1.Util.getArgs(args));\n        return this;\n    }\n    $subtract(...args) { return this.clone().subtract(...args); }\n    multiply(...args) {\n        (args.length === 1 && typeof args[0] == \"number\") ? LinearAlgebra_1.Vec.multiply(this, args[0]) : LinearAlgebra_1.Vec.multiply(this, Util_1.Util.getArgs(args));\n        return this;\n    }\n    $multiply(...args) { return this.clone().multiply(...args); }\n    divide(...args) {\n        (args.length === 1 && typeof args[0] == \"number\") ? LinearAlgebra_1.Vec.divide(this, args[0]) : LinearAlgebra_1.Vec.divide(this, Util_1.Util.getArgs(args));\n        return this;\n    }\n    $divide(...args) { return this.clone().divide(...args); }\n    magnitudeSq() { return LinearAlgebra_1.Vec.dot(this, this); }\n    magnitude() { return LinearAlgebra_1.Vec.magnitude(this); }\n    unit(magnitude = undefined) {\n        LinearAlgebra_1.Vec.unit(this, magnitude);\n        return this;\n    }\n    $unit(magnitude = undefined) { return this.clone().unit(magnitude); }\n    dot(...args) { return LinearAlgebra_1.Vec.dot(this, Util_1.Util.getArgs(args)); }\n    $cross2D(...args) { return LinearAlgebra_1.Vec.cross2D(this, Util_1.Util.getArgs(args)); }\n    $cross(...args) { return LinearAlgebra_1.Vec.cross(this, Util_1.Util.getArgs(args)); }\n    $project(...args) {\n        return this.$multiply(this.dot(...args) / this.magnitudeSq());\n    }\n    projectScalar(...args) {\n        return this.dot(...args) / this.magnitude();\n    }\n    abs() {\n        LinearAlgebra_1.Vec.abs(this);\n        return this;\n    }\n    $abs() {\n        return this.clone().abs();\n    }\n    floor() {\n        LinearAlgebra_1.Vec.floor(this);\n        return this;\n    }\n    $floor() {\n        return this.clone().floor();\n    }\n    ceil() {\n        LinearAlgebra_1.Vec.ceil(this);\n        return this;\n    }\n    $ceil() {\n        return this.clone().ceil();\n    }\n    round() {\n        LinearAlgebra_1.Vec.round(this);\n        return this;\n    }\n    $round() {\n        return this.clone().round();\n    }\n    minValue() {\n        return LinearAlgebra_1.Vec.min(this);\n    }\n    maxValue() {\n        return LinearAlgebra_1.Vec.max(this);\n    }\n    $min(...args) {\n        let p = Util_1.Util.getArgs(args);\n        let m = this.clone();\n        for (let i = 0, len = Math.min(this.length, p.length); i < len; i++) {\n            m[i] = Math.min(this[i], p[i]);\n        }\n        return m;\n    }\n    $max(...args) {\n        let p = Util_1.Util.getArgs(args);\n        let m = this.clone();\n        for (let i = 0, len = Math.min(this.length, p.length); i < len; i++) {\n            m[i] = Math.max(this[i], p[i]);\n        }\n        return m;\n    }\n    angle(axis = Util_1.Const.xy) {\n        return Math.atan2(this[axis[1]], this[axis[0]]);\n    }\n    angleBetween(p, axis = Util_1.Const.xy) {\n        return Num_1.Geom.boundRadian(this.angle(axis)) - Num_1.Geom.boundRadian(p.angle(axis));\n    }\n    scale(scale, anchor) {\n        Num_1.Geom.scale(this, scale, anchor || Pt.make(this.length, 0));\n        return this;\n    }\n    rotate2D(angle, anchor, axis) {\n        Num_1.Geom.rotate2D(this, angle, anchor || Pt.make(this.length, 0), axis);\n        return this;\n    }\n    shear2D(scale, anchor, axis) {\n        Num_1.Geom.shear2D(this, scale, anchor || Pt.make(this.length, 0), axis);\n        return this;\n    }\n    reflect2D(line, axis) {\n        Num_1.Geom.reflect2D(this, line, axis);\n        return this;\n    }\n    toString() {\n        return `Pt(${this.join(\", \")})`;\n    }\n    toArray() {\n        return [].slice.call(this);\n    }\n    toGroup() {\n        return new Group(Pt.make(this.length), this.clone());\n    }\n    toBound() {\n        return new Bound(Pt.make(this.length), this.clone());\n    }\n}\nexports.Pt = Pt;\nclass Group extends Array {\n    constructor(...args) {\n        super(...args);\n    }\n    get id() { return this._id; }\n    set id(s) { this._id = s; }\n    get p1() { return this[0]; }\n    get p2() { return this[1]; }\n    get p3() { return this[2]; }\n    get p4() { return this[3]; }\n    get q1() { return this[this.length - 1]; }\n    get q2() { return this[this.length - 2]; }\n    get q3() { return this[this.length - 3]; }\n    get q4() { return this[this.length - 4]; }\n    clone() {\n        let group = new Group();\n        for (let i = 0, len = this.length; i < len; i++) {\n            group.push(this[i].clone());\n        }\n        return group;\n    }\n    static fromArray(list) {\n        let g = new Group();\n        for (let i = 0, len = list.length; i < len; i++) {\n            let p = (list[i] instanceof Pt) ? list[i] : new Pt(list[i]);\n            g.push(p);\n        }\n        return g;\n    }\n    static fromPtArray(list) {\n        return Group.from(list);\n    }\n    split(chunkSize, stride, loopBack = false) {\n        let sp = Util_1.Util.split(this, chunkSize, stride, loopBack);\n        return sp;\n    }\n    insert(pts, index = 0) {\n        Group.prototype.splice.apply(this, [index, 0, ...pts]);\n        return this;\n    }\n    remove(index = 0, count = 1) {\n        let param = (index < 0) ? [index * -1 - 1, count] : [index, count];\n        return Group.prototype.splice.apply(this, param);\n    }\n    segments(pts_per_segment = 2, stride = 1, loopBack = false) {\n        return this.split(pts_per_segment, stride, loopBack);\n    }\n    lines() { return this.segments(2, 1); }\n    centroid() {\n        return Num_1.Geom.centroid(this);\n    }\n    boundingBox() {\n        return Num_1.Geom.boundingBox(this);\n    }\n    anchorTo(ptOrIndex = 0) { Num_1.Geom.anchor(this, ptOrIndex, \"to\"); }\n    anchorFrom(ptOrIndex = 0) { Num_1.Geom.anchor(this, ptOrIndex, \"from\"); }\n    op(fn) {\n        let self = this;\n        return (...params) => {\n            return fn(self, ...params);\n        };\n    }\n    ops(fns) {\n        let _ops = [];\n        for (let i = 0, len = fns.length; i < len; i++) {\n            _ops.push(this.op(fns[i]));\n        }\n        return _ops;\n    }\n    interpolate(t) {\n        t = Num_1.Num.clamp(t, 0, 1);\n        let chunk = this.length - 1;\n        let tc = 1 / (this.length - 1);\n        let idx = Math.floor(t / tc);\n        return Num_1.Geom.interpolate(this[idx], this[Math.min(this.length - 1, idx + 1)], (t - idx * tc) * chunk);\n    }\n    moveBy(...args) {\n        return this.add(...args);\n    }\n    moveTo(...args) {\n        let d = new Pt(Util_1.Util.getArgs(args)).subtract(this[0]);\n        this.moveBy(d);\n        return this;\n    }\n    scale(scale, anchor) {\n        for (let i = 0, len = this.length; i < len; i++) {\n            Num_1.Geom.scale(this[i], scale, anchor || this[0]);\n        }\n        return this;\n    }\n    rotate2D(angle, anchor, axis) {\n        for (let i = 0, len = this.length; i < len; i++) {\n            Num_1.Geom.rotate2D(this[i], angle, anchor || this[0], axis);\n        }\n        return this;\n    }\n    shear2D(scale, anchor, axis) {\n        for (let i = 0, len = this.length; i < len; i++) {\n            Num_1.Geom.shear2D(this[i], scale, anchor || this[0], axis);\n        }\n        return this;\n    }\n    reflect2D(line, axis) {\n        for (let i = 0, len = this.length; i < len; i++) {\n            Num_1.Geom.reflect2D(this[i], line, axis);\n        }\n        return this;\n    }\n    sortByDimension(dim, desc = false) {\n        return this.sort((a, b) => (desc) ? b[dim] - a[dim] : a[dim] - b[dim]);\n    }\n    forEachPt(ptFn, ...args) {\n        if (!this[0][ptFn]) {\n            Util_1.Util.warn(`${ptFn} is not a function of Pt`);\n            return this;\n        }\n        for (let i = 0, len = this.length; i < len; i++) {\n            this[i] = this[i][ptFn](...args);\n        }\n        return this;\n    }\n    add(...args) {\n        return this.forEachPt(\"add\", ...args);\n    }\n    subtract(...args) {\n        return this.forEachPt(\"subtract\", ...args);\n    }\n    multiply(...args) {\n        return this.forEachPt(\"multiply\", ...args);\n    }\n    divide(...args) {\n        return this.forEachPt(\"divide\", ...args);\n    }\n    $matrixAdd(g) {\n        return LinearAlgebra_1.Mat.add(this, g);\n    }\n    $matrixMultiply(g, transposed = false, elementwise = false) {\n        return LinearAlgebra_1.Mat.multiply(this, g, transposed, elementwise);\n    }\n    zipSlice(index, defaultValue = false) {\n        return LinearAlgebra_1.Mat.zipSlice(this, index, defaultValue);\n    }\n    $zip(defaultValue = undefined, useLongest = false) {\n        return LinearAlgebra_1.Mat.zip(this, defaultValue, useLongest);\n    }\n    toString() {\n        return \"Group[ \" + this.reduce((p, c) => p + c.toString() + \" \", \"\") + \" ]\";\n    }\n}\nexports.Group = Group;\nclass Bound extends Group {\n    constructor(...args) {\n        super(...args);\n        this._center = new Pt();\n        this._size = new Pt();\n        this._topLeft = new Pt();\n        this._bottomRight = new Pt();\n        this._inited = false;\n        this.init();\n    }\n    static fromBoundingRect(rect) {\n        let b = new Bound(new Pt(rect.left || 0, rect.top || 0), new Pt(rect.right || 0, rect.bottom || 0));\n        if (rect.width && rect.height)\n            b.size = new Pt(rect.width, rect.height);\n        return b;\n    }\n    static fromGroup(g) {\n        if (g.length < 2)\n            throw new Error(\"Cannot create a Bound from a group that has less than 2 Pt\");\n        return new Bound(g[0], g[g.length - 1]);\n    }\n    init() {\n        if (this.p1) {\n            this._size = this.p1.clone();\n            this._inited = true;\n        }\n        if (this.p1 && this.p2) {\n            let a = this.p1;\n            let b = this.p2;\n            this.topLeft = a.$min(b);\n            this._bottomRight = a.$max(b);\n            this._updateSize();\n            this._inited = true;\n        }\n    }\n    clone() {\n        return new Bound(this._topLeft.clone(), this._bottomRight.clone());\n    }\n    _updateSize() {\n        this._size = this._bottomRight.$subtract(this._topLeft).abs();\n        this._updateCenter();\n    }\n    _updateCenter() {\n        this._center = this._size.$multiply(0.5).add(this._topLeft);\n    }\n    _updatePosFromTop() {\n        this._bottomRight = this._topLeft.$add(this._size);\n        this._updateCenter();\n    }\n    _updatePosFromBottom() {\n        this._topLeft = this._bottomRight.$subtract(this._size);\n        this._updateCenter();\n    }\n    _updatePosFromCenter() {\n        let half = this._size.$multiply(0.5);\n        this._topLeft = this._center.$subtract(half);\n        this._bottomRight = this._center.$add(half);\n    }\n    get size() { return new Pt(this._size); }\n    set size(p) {\n        this._size = new Pt(p);\n        this._updatePosFromTop();\n    }\n    get center() { return new Pt(this._center); }\n    set center(p) {\n        this._center = new Pt(p);\n        this._updatePosFromCenter();\n    }\n    get topLeft() { return new Pt(this._topLeft); }\n    set topLeft(p) {\n        this._topLeft = new Pt(p);\n        this[0] = this._topLeft;\n        this._updateSize();\n    }\n    get bottomRight() { return new Pt(this._bottomRight); }\n    set bottomRight(p) {\n        this._bottomRight = new Pt(p);\n        this[1] = this._bottomRight;\n        this._updateSize();\n    }\n    get width() { return (this._size.length > 0) ? this._size.x : 0; }\n    set width(w) {\n        this._size.x = w;\n        this._updatePosFromTop();\n    }\n    get height() { return (this._size.length > 1) ? this._size.y : 0; }\n    set height(h) {\n        this._size.y = h;\n        this._updatePosFromTop();\n    }\n    get depth() { return (this._size.length > 2) ? this._size.z : 0; }\n    set depth(d) {\n        this._size.z = d;\n        this._updatePosFromTop();\n    }\n    get x() { return this.topLeft.x; }\n    get y() { return this.topLeft.y; }\n    get z() { return this.topLeft.z; }\n    get inited() { return this._inited; }\n    update() {\n        this._topLeft = this[0];\n        this._bottomRight = this[1];\n        this._updateSize();\n        return this;\n    }\n}\nexports.Bound = Bound;\n\n\n/***/ }),\n\n/***/ \"./src/Space.ts\":\n/*!**********************!*\\\n  !*** ./src/Space.ts ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst UI_1 = __webpack_require__(/*! ./UI */ \"./src/UI.ts\");\nclass Space {\n    constructor() {\n        this.id = \"space\";\n        this.bound = new Pt_1.Bound();\n        this._time = { prev: 0, diff: 0, end: -1 };\n        this.players = {};\n        this.playerCount = 0;\n        this._animID = -1;\n        this._pause = false;\n        this._refresh = undefined;\n        this._pointer = new Pt_1.Pt();\n        this._isReady = false;\n        this._playing = false;\n    }\n    refresh(b) {\n        this._refresh = b;\n        return this;\n    }\n    add(p) {\n        let player = (typeof p == \"function\") ? { animate: p } : p;\n        let k = this.playerCount++;\n        let pid = this.id + k;\n        this.players[pid] = player;\n        player.animateID = pid;\n        if (player.resize && this.bound.inited)\n            player.resize(this.bound);\n        if (this._refresh === undefined)\n            this._refresh = true;\n        return this;\n    }\n    remove(player) {\n        delete this.players[player.animateID];\n        return this;\n    }\n    removeAll() {\n        this.players = {};\n        return this;\n    }\n    play(time = 0) {\n        if (time === 0 && this._animID !== -1) {\n            return;\n        }\n        this._animID = requestAnimationFrame(this.play.bind(this));\n        if (this._pause)\n            return this;\n        this._time.diff = time - this._time.prev;\n        this._time.prev = time;\n        try {\n            this.playItems(time);\n        }\n        catch (err) {\n            cancelAnimationFrame(this._animID);\n            this._animID = -1;\n            this._playing = false;\n            throw err;\n        }\n        return this;\n    }\n    replay() {\n        this._time.end = -1;\n        this.play();\n    }\n    playItems(time) {\n        this._playing = true;\n        if (this._refresh)\n            this.clear();\n        if (this._isReady) {\n            for (let k in this.players) {\n                if (this.players[k].animate)\n                    this.players[k].animate(time, this._time.diff, this);\n            }\n        }\n        if (this._time.end >= 0 && time > this._time.end) {\n            cancelAnimationFrame(this._animID);\n            this._animID = -1;\n            this._playing = false;\n        }\n    }\n    pause(toggle = false) {\n        this._pause = (toggle) ? !this._pause : true;\n        return this;\n    }\n    resume() {\n        this._pause = false;\n        return this;\n    }\n    stop(t = 0) {\n        this._time.end = t;\n        return this;\n    }\n    playOnce(duration = 5000) {\n        this.play();\n        this.stop(duration);\n        return this;\n    }\n    render(context) {\n        if (this._renderFunc)\n            this._renderFunc(context, this);\n        return this;\n    }\n    set customRendering(f) { this._renderFunc = f; }\n    get customRendering() { return this._renderFunc; }\n    get isPlaying() { return this._playing; }\n    get outerBound() { return this.bound.clone(); }\n    get innerBound() { return new Pt_1.Bound(Pt_1.Pt.make(this.size.length, 0), this.size.clone()); }\n    get size() { return this.bound.size.clone(); }\n    get center() { return this.size.divide(2); }\n    get width() { return this.bound.width; }\n    get height() { return this.bound.height; }\n}\nexports.Space = Space;\nclass MultiTouchSpace extends Space {\n    constructor() {\n        super(...arguments);\n        this._pressed = false;\n        this._dragged = false;\n        this._hasMouse = false;\n        this._hasTouch = false;\n    }\n    get pointer() {\n        let p = this._pointer.clone();\n        p.id = this._pointer.id;\n        return p;\n    }\n    bindCanvas(evt, callback) {\n        this._canvas.addEventListener(evt, callback);\n    }\n    unbindCanvas(evt, callback) {\n        this._canvas.removeEventListener(evt, callback);\n    }\n    bindMouse(_bind = true) {\n        if (_bind) {\n            this.bindCanvas(\"mousedown\", this._mouseDown.bind(this));\n            this.bindCanvas(\"mouseup\", this._mouseUp.bind(this));\n            this.bindCanvas(\"mouseover\", this._mouseOver.bind(this));\n            this.bindCanvas(\"mouseout\", this._mouseOut.bind(this));\n            this.bindCanvas(\"mousemove\", this._mouseMove.bind(this));\n            this.bindCanvas(\"contextmenu\", this._contextMenu.bind(this));\n            this._hasMouse = true;\n        }\n        else {\n            this.unbindCanvas(\"mousedown\", this._mouseDown.bind(this));\n            this.unbindCanvas(\"mouseup\", this._mouseUp.bind(this));\n            this.unbindCanvas(\"mouseover\", this._mouseOver.bind(this));\n            this.unbindCanvas(\"mouseout\", this._mouseOut.bind(this));\n            this.unbindCanvas(\"mousemove\", this._mouseMove.bind(this));\n            this.unbindCanvas(\"contextmenu\", this._contextMenu.bind(this));\n            this._hasMouse = false;\n        }\n        return this;\n    }\n    bindTouch(_bind = true) {\n        if (_bind) {\n            this.bindCanvas(\"touchstart\", this._touchStart.bind(this));\n            this.bindCanvas(\"touchend\", this._mouseUp.bind(this));\n            this.bindCanvas(\"touchmove\", this._touchMove.bind(this));\n            this.bindCanvas(\"touchcancel\", this._mouseOut.bind(this));\n            this._hasTouch = true;\n        }\n        else {\n            this.unbindCanvas(\"touchstart\", this._touchStart.bind(this));\n            this.unbindCanvas(\"touchend\", this._mouseUp.bind(this));\n            this.unbindCanvas(\"touchmove\", this._touchMove.bind(this));\n            this.unbindCanvas(\"touchcancel\", this._mouseOut.bind(this));\n            this._hasTouch = false;\n        }\n        return this;\n    }\n    touchesToPoints(evt, which = \"touches\") {\n        if (!evt || !evt[which])\n            return [];\n        let ts = [];\n        for (var i = 0; i < evt[which].length; i++) {\n            let t = evt[which].item(i);\n            ts.push(new Pt_1.Pt(t.pageX - this.bound.topLeft.x, t.pageY - this.bound.topLeft.y));\n        }\n        return ts;\n    }\n    _mouseAction(type, evt) {\n        let px = 0, py = 0;\n        if (evt instanceof MouseEvent) {\n            for (let k in this.players) {\n                if (this.players.hasOwnProperty(k)) {\n                    let v = this.players[k];\n                    px = evt.pageX - this.outerBound.x;\n                    py = evt.pageY - this.outerBound.y;\n                    if (v.action)\n                        v.action(type, px, py, evt);\n                }\n            }\n        }\n        else {\n            for (let k in this.players) {\n                if (this.players.hasOwnProperty(k)) {\n                    let v = this.players[k];\n                    let c = evt.changedTouches && evt.changedTouches.length > 0;\n                    let touch = evt.changedTouches.item(0);\n                    px = (c) ? touch.pageX - this.outerBound.x : 0;\n                    py = (c) ? touch.pageY - this.outerBound.y : 0;\n                    if (v.action)\n                        v.action(type, px, py, evt);\n                }\n            }\n        }\n        if (type) {\n            this._pointer.to(px, py);\n            this._pointer.id = type;\n        }\n    }\n    _mouseDown(evt) {\n        this._mouseAction(UI_1.UIPointerActions.down, evt);\n        this._pressed = true;\n        return false;\n    }\n    _mouseUp(evt) {\n        if (this._dragged) {\n            this._mouseAction(UI_1.UIPointerActions.drop, evt);\n        }\n        else {\n            this._mouseAction(UI_1.UIPointerActions.up, evt);\n        }\n        this._pressed = false;\n        this._dragged = false;\n        return false;\n    }\n    _mouseMove(evt) {\n        this._mouseAction(UI_1.UIPointerActions.move, evt);\n        if (this._pressed) {\n            this._dragged = true;\n            this._mouseAction(UI_1.UIPointerActions.drag, evt);\n        }\n        return false;\n    }\n    _mouseOver(evt) {\n        this._mouseAction(UI_1.UIPointerActions.over, evt);\n        return false;\n    }\n    _mouseOut(evt) {\n        this._mouseAction(UI_1.UIPointerActions.out, evt);\n        if (this._dragged)\n            this._mouseAction(UI_1.UIPointerActions.drop, evt);\n        this._dragged = false;\n        return false;\n    }\n    _contextMenu(evt) {\n        this._mouseAction(UI_1.UIPointerActions.contextmenu, evt);\n        return false;\n    }\n    _touchMove(evt) {\n        this._mouseMove(evt);\n        evt.preventDefault();\n        return false;\n    }\n    _touchStart(evt) {\n        this._mouseDown(evt);\n        evt.preventDefault();\n        return false;\n    }\n}\nexports.MultiTouchSpace = MultiTouchSpace;\n\n\n/***/ }),\n\n/***/ \"./src/Svg.ts\":\n/*!********************!*\\\n  !*** ./src/Svg.ts ***!\n  \\********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Form_1 = __webpack_require__(/*! ./Form */ \"./src/Form.ts\");\nconst Num_1 = __webpack_require__(/*! ./Num */ \"./src/Num.ts\");\nconst Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst Op_1 = __webpack_require__(/*! ./Op */ \"./src/Op.ts\");\nconst Dom_1 = __webpack_require__(/*! ./Dom */ \"./src/Dom.ts\");\nclass SVGSpace extends Dom_1.DOMSpace {\n    constructor(elem, callback) {\n        super(elem, callback);\n        this.id = \"svgspace\";\n        this._bgcolor = \"#999\";\n        if (this._canvas.nodeName.toLowerCase() != \"svg\") {\n            let s = SVGSpace.svgElement(this._canvas, \"svg\", `${this.id}_svg`);\n            this._container = this._canvas;\n            this._canvas = s;\n        }\n    }\n    getForm() { return new SVGForm(this); }\n    get element() {\n        return this._canvas;\n    }\n    resize(b, evt) {\n        super.resize(b, evt);\n        SVGSpace.setAttr(this.element, {\n            \"viewBox\": `0 0 ${this.bound.width} ${this.bound.height}`,\n            \"width\": `${this.bound.width}`,\n            \"height\": `${this.bound.height}`,\n            \"xmlns\": \"http://www.w3.org/2000/svg\",\n            \"version\": \"1.1\"\n        });\n        return this;\n    }\n    static svgElement(parent, name, id) {\n        if (!parent || !parent.appendChild)\n            throw new Error(\"parent is not a valid DOM element\");\n        let elem = document.querySelector(`#${id}`);\n        if (!elem) {\n            elem = document.createElementNS(\"http://www.w3.org/2000/svg\", name);\n            elem.setAttribute(\"id\", id);\n            parent.appendChild(elem);\n        }\n        return elem;\n    }\n    remove(player) {\n        let temp = this._container.querySelectorAll(\".\" + SVGForm.scopeID(player));\n        temp.forEach((el) => {\n            el.parentNode.removeChild(el);\n        });\n        return super.remove(player);\n    }\n    removeAll() {\n        this._container.innerHTML = \"\";\n        return super.removeAll();\n    }\n}\nexports.SVGSpace = SVGSpace;\nclass SVGForm extends Form_1.VisualForm {\n    constructor(space) {\n        super();\n        this._style = {\n            \"filled\": true,\n            \"stroked\": true,\n            \"fill\": \"#f03\",\n            \"stroke\": \"#fff\",\n            \"stroke-width\": 1,\n            \"stroke-linejoin\": \"bevel\",\n            \"stroke-linecap\": \"sqaure\",\n            \"opacity\": 1\n        };\n        this._ctx = {\n            group: null,\n            groupID: \"pts\",\n            groupCount: 0,\n            currentID: \"pts0\",\n            currentClass: \"\",\n            style: {},\n        };\n        this._ready = false;\n        this._space = space;\n        this._space.add({ start: () => {\n                this._ctx.group = this._space.element;\n                this._ctx.groupID = \"pts_svg_\" + (SVGForm.groupID++);\n                this._ctx.style = Object.assign({}, this._style);\n                this._ready = true;\n            } });\n    }\n    get space() { return this._space; }\n    styleTo(k, v) {\n        if (this._ctx.style[k] === undefined)\n            throw new Error(`${k} style property doesn't exist`);\n        this._ctx.style[k] = v;\n    }\n    alpha(a) {\n        this.styleTo(\"opacity\", a);\n        return this;\n    }\n    fill(c) {\n        if (typeof c == \"boolean\") {\n            this.styleTo(\"filled\", c);\n        }\n        else {\n            this.styleTo(\"filled\", true);\n            this.styleTo(\"fill\", c);\n        }\n        return this;\n    }\n    stroke(c, width, linejoin, linecap) {\n        if (typeof c == \"boolean\") {\n            this.styleTo(\"stroked\", c);\n        }\n        else {\n            this.styleTo(\"stroked\", true);\n            this.styleTo(\"stroke\", c);\n            if (width)\n                this.styleTo(\"stroke-width\", width);\n            if (linejoin)\n                this.styleTo(\"stroke-linejoin\", linejoin);\n            if (linecap)\n                this.styleTo(\"stroke-linecap\", linecap);\n        }\n        return this;\n    }\n    cls(c) {\n        if (typeof c == \"boolean\") {\n            this._ctx.currentClass = \"\";\n        }\n        else {\n            this._ctx.currentClass = c;\n        }\n        return this;\n    }\n    font(sizeOrFont, weight, style, lineHeight, family) {\n        if (typeof sizeOrFont == \"number\") {\n            this._font.size = sizeOrFont;\n            if (family)\n                this._font.face = family;\n            if (weight)\n                this._font.weight = weight;\n            if (style)\n                this._font.style = style;\n            if (lineHeight)\n                this._font.lineHeight = lineHeight;\n        }\n        else {\n            this._font = sizeOrFont;\n        }\n        this._ctx.style['font'] = this._font.value;\n        return this;\n    }\n    reset() {\n        this._ctx.style = Object.assign({}, this._style);\n        this._font = new Form_1.Font(10, \"sans-serif\");\n        this._ctx.style['font'] = this._font.value;\n        return this;\n    }\n    updateScope(group_id, group) {\n        this._ctx.group = group;\n        this._ctx.groupID = group_id;\n        this._ctx.groupCount = 0;\n        this.nextID();\n        return this._ctx;\n    }\n    scope(item) {\n        if (!item || item.animateID == null)\n            throw new Error(\"item not defined or not yet added to Space\");\n        return this.updateScope(SVGForm.scopeID(item), this.space.element);\n    }\n    nextID() {\n        this._ctx.groupCount++;\n        this._ctx.currentID = `${this._ctx.groupID}-${this._ctx.groupCount}`;\n        return this._ctx.currentID;\n    }\n    static getID(ctx) {\n        return ctx.currentID || `p-${SVGForm.domID++}`;\n    }\n    static scopeID(item) {\n        return `item-${item.animateID}`;\n    }\n    static style(elem, styles) {\n        let st = [];\n        if (!styles[\"filled\"])\n            st.push(\"fill: none\");\n        if (!styles[\"stroked\"])\n            st.push(\"stroke: none\");\n        for (let k in styles) {\n            if (styles.hasOwnProperty(k) && k != \"filled\" && k != \"stroked\") {\n                let v = styles[k];\n                if (v) {\n                    if (!styles[\"filled\"] && k.indexOf('fill') === 0) {\n                        continue;\n                    }\n                    else if (!styles[\"stroked\"] && k.indexOf('stroke') === 0) {\n                        continue;\n                    }\n                    else {\n                        st.push(`${k}: ${v}`);\n                    }\n                }\n            }\n        }\n        return Dom_1.DOMSpace.setAttr(elem, { style: st.join(\";\") });\n    }\n    static point(ctx, pt, radius = 5, shape = \"square\") {\n        if (shape === \"circle\") {\n            return SVGForm.circle(ctx, pt, radius);\n        }\n        else {\n            return SVGForm.square(ctx, pt, radius);\n        }\n    }\n    point(pt, radius = 5, shape = \"square\") {\n        this.nextID();\n        SVGForm.point(this._ctx, pt, radius, shape);\n        return this;\n    }\n    static circle(ctx, pt, radius = 10) {\n        let elem = SVGSpace.svgElement(ctx.group, \"circle\", SVGForm.getID(ctx));\n        Dom_1.DOMSpace.setAttr(elem, {\n            cx: pt[0],\n            cy: pt[1],\n            r: radius,\n            'class': `pts-svgform pts-circle ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    circle(pts) {\n        this.nextID();\n        SVGForm.circle(this._ctx, pts[0], pts[1][0]);\n        return this;\n    }\n    static arc(ctx, pt, radius, startAngle, endAngle, cc) {\n        let elem = SVGSpace.svgElement(ctx.group, \"path\", SVGForm.getID(ctx));\n        const start = new Pt_1.Pt(pt).toAngle(startAngle, radius, true);\n        const end = new Pt_1.Pt(pt).toAngle(endAngle, radius, true);\n        const diff = Num_1.Geom.boundAngle(endAngle) - Num_1.Geom.boundAngle(startAngle);\n        let largeArc = (diff > Util_1.Const.pi) ? true : false;\n        if (cc)\n            largeArc = !largeArc;\n        const sweep = (cc) ? \"0\" : \"1\";\n        const d = `M ${start[0]} ${start[1]} A ${radius} ${radius} 0 ${largeArc ? \"1\" : \"0\"} ${sweep} ${end[0]} ${end[1]}`;\n        Dom_1.DOMSpace.setAttr(elem, {\n            d: d,\n            'class': `pts-svgform pts-arc ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    arc(pt, radius, startAngle, endAngle, cc) {\n        this.nextID();\n        SVGForm.arc(this._ctx, pt, radius, startAngle, endAngle, cc);\n        return this;\n    }\n    static square(ctx, pt, halfsize) {\n        let elem = SVGSpace.svgElement(ctx.group, \"rect\", SVGForm.getID(ctx));\n        Dom_1.DOMSpace.setAttr(elem, {\n            x: pt[0] - halfsize,\n            y: pt[1] - halfsize,\n            width: halfsize * 2,\n            height: halfsize * 2,\n            'class': `pts-svgform pts-square ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    square(pt, halfsize) {\n        this.nextID();\n        SVGForm.square(this._ctx, pt, halfsize);\n        return this;\n    }\n    static line(ctx, pts) {\n        if (!this._checkSize(pts))\n            return;\n        if (pts.length > 2)\n            return SVGForm._poly(ctx, pts, false);\n        let elem = SVGSpace.svgElement(ctx.group, \"line\", SVGForm.getID(ctx));\n        Dom_1.DOMSpace.setAttr(elem, {\n            x1: pts[0][0],\n            y1: pts[0][1],\n            x2: pts[1][0],\n            y2: pts[1][1],\n            'class': `pts-svgform pts-line ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    line(pts) {\n        this.nextID();\n        SVGForm.line(this._ctx, pts);\n        return this;\n    }\n    static _poly(ctx, pts, closePath = true) {\n        if (!this._checkSize(pts))\n            return;\n        let elem = SVGSpace.svgElement(ctx.group, ((closePath) ? \"polygon\" : \"polyline\"), SVGForm.getID(ctx));\n        let points = pts.reduce((a, p) => a + `${p[0]},${p[1]} `, \"\");\n        Dom_1.DOMSpace.setAttr(elem, {\n            points: points,\n            'class': `pts-svgform pts-polygon ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    static polygon(ctx, pts) {\n        return SVGForm._poly(ctx, pts, true);\n    }\n    polygon(pts) {\n        this.nextID();\n        SVGForm.polygon(this._ctx, pts);\n        return this;\n    }\n    static rect(ctx, pts) {\n        if (!this._checkSize(pts))\n            return;\n        let elem = SVGSpace.svgElement(ctx.group, \"rect\", SVGForm.getID(ctx));\n        let bound = Pt_1.Group.fromArray(pts).boundingBox();\n        let size = Op_1.Rectangle.size(bound);\n        Dom_1.DOMSpace.setAttr(elem, {\n            x: bound[0][0],\n            y: bound[0][1],\n            width: size[0],\n            height: size[1],\n            'class': `pts-svgform pts-rect ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    rect(pts) {\n        this.nextID();\n        SVGForm.rect(this._ctx, pts);\n        return this;\n    }\n    static text(ctx, pt, txt) {\n        let elem = SVGSpace.svgElement(ctx.group, \"text\", SVGForm.getID(ctx));\n        Dom_1.DOMSpace.setAttr(elem, {\n            \"pointer-events\": \"none\",\n            x: pt[0],\n            y: pt[1],\n            dx: 0, dy: 0,\n            'class': `pts-svgform pts-text ${ctx.currentClass}`,\n        });\n        elem.textContent = txt;\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    text(pt, txt) {\n        this.nextID();\n        SVGForm.text(this._ctx, pt, txt);\n        return this;\n    }\n    log(txt) {\n        this.fill(\"#000\").stroke(\"#fff\", 0.5).text([10, 14], txt);\n        return this;\n    }\n}\nSVGForm.groupID = 0;\nSVGForm.domID = 0;\nexports.SVGForm = SVGForm;\n\n\n/***/ }),\n\n/***/ \"./src/Typography.ts\":\n/*!***************************!*\\\n  !*** ./src/Typography.ts ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nclass Typography {\n    static textWidthEstimator(fn, samples = [\"M\", \"n\", \".\"], distribution = [0.06, 0.8, 0.14]) {\n        let m = samples.map(fn);\n        let avg = new Pt_1.Pt(distribution).dot(m);\n        return (str) => str.length * avg;\n    }\n    static truncate(fn, str, width, tail = \"\") {\n        let trim = Math.floor(str.length * Math.min(1, width / fn(str)));\n        if (trim < str.length) {\n            trim = Math.max(0, trim - tail.length);\n            return [str.substr(0, trim) + tail, trim];\n        }\n        else {\n            return [str, str.length];\n        }\n    }\n    static fontSizeToBox(box, ratio = 1, byHeight = true) {\n        let i = byHeight ? 1 : 0;\n        let h = (box[1][i] - box[0][i]);\n        let f = ratio * h;\n        return function (b) {\n            let nh = (b[1][i] - b[0][i]) / h;\n            return f * nh;\n        };\n    }\n    static fontSizeToThreshold(threshold, direction = 0) {\n        return function (defaultSize, val) {\n            let d = defaultSize * val / threshold;\n            if (direction < 0)\n                return Math.min(d, defaultSize);\n            if (direction > 0)\n                return Math.max(d, defaultSize);\n            return d;\n        };\n    }\n}\nexports.Typography = Typography;\n\n\n/***/ }),\n\n/***/ \"./src/UI.ts\":\n/*!*******************!*\\\n  !*** ./src/UI.ts ***!\n  \\*******************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst Op_1 = __webpack_require__(/*! ./Op */ \"./src/Op.ts\");\nexports.UIShape = {\n    rectangle: \"rectangle\", circle: \"circle\", polygon: \"polygon\", polyline: \"polyline\", line: \"line\"\n};\nexports.UIPointerActions = {\n    up: \"up\", down: \"down\", move: \"move\", drag: \"drag\", uidrag: \"uidrag\", drop: \"drop\", uidrop: \"uidrop\", over: \"over\", out: \"out\", enter: \"enter\", leave: \"leave\", contextmenu: \"contextmenu\", all: \"all\"\n};\nclass UI {\n    constructor(group, shape, states = {}, id) {\n        this._holds = new Map();\n        this._group = Pt_1.Group.fromArray(group);\n        this._shape = shape;\n        this._id = id === undefined ? `ui_${(UI._counter++)}` : id;\n        this._states = states;\n        this._actions = {};\n    }\n    static fromRectangle(group, states, id) {\n        return new this(group, exports.UIShape.rectangle, states, id);\n    }\n    static fromCircle(group, states, id) {\n        return new this(group, exports.UIShape.circle, states, id);\n    }\n    static fromPolygon(group, states, id) {\n        return new this(group, exports.UIShape.polygon, states, id);\n    }\n    static fromUI(ui, states, id) {\n        return new this(ui.group, ui.shape, states || ui._states, id);\n    }\n    get id() { return this._id; }\n    set id(d) { this._id = d; }\n    get group() { return this._group; }\n    set group(d) { this._group = d; }\n    get shape() { return this._shape; }\n    set shape(d) { this._shape = d; }\n    state(key, value) {\n        if (!key)\n            return null;\n        if (value !== undefined) {\n            this._states[key] = value;\n            return this;\n        }\n        return this._states[key];\n    }\n    on(type, fn) {\n        if (!this._actions[type])\n            this._actions[type] = [];\n        return UI._addHandler(this._actions[type], fn);\n    }\n    off(type, which) {\n        if (!this._actions[type])\n            return false;\n        if (which === undefined) {\n            delete this._actions[type];\n            return true;\n        }\n        else {\n            return UI._removeHandler(this._actions[type], which);\n        }\n    }\n    listen(type, p, evt) {\n        if (this._actions[type] !== undefined) {\n            if (this._within(p) || Array.from(this._holds.values()).indexOf(type) >= 0) {\n                UI._trigger(this._actions[type], this, p, type, evt);\n                return true;\n            }\n            else if (this._actions['all']) {\n                UI._trigger(this._actions['all'], this, p, type, evt);\n                return true;\n            }\n        }\n        return false;\n    }\n    hold(type) {\n        let newKey = Math.max(0, ...Array.from(this._holds.keys())) + 1;\n        this._holds.set(newKey, type);\n        return newKey;\n    }\n    unhold(key) {\n        if (key !== undefined) {\n            this._holds.delete(key);\n        }\n        else {\n            this._holds.clear();\n        }\n    }\n    static track(uis, type, p, evt) {\n        for (let i = 0, len = uis.length; i < len; i++) {\n            uis[i].listen(type, p, evt);\n        }\n    }\n    render(fn) {\n        fn(this._group, this._states);\n    }\n    toString() {\n        return `UI ${this.group.toString}`;\n    }\n    _within(p) {\n        let fn = null;\n        if (this._shape === exports.UIShape.rectangle) {\n            fn = Op_1.Rectangle.withinBound;\n        }\n        else if (this._shape === exports.UIShape.circle) {\n            fn = Op_1.Circle.withinBound;\n        }\n        else if (this._shape === exports.UIShape.polygon) {\n            fn = Op_1.Polygon.hasIntersectPoint;\n        }\n        else {\n            return false;\n        }\n        return fn(this._group, p);\n    }\n    static _trigger(fns, target, pt, type, evt) {\n        if (fns) {\n            for (let i = 0, len = fns.length; i < len; i++) {\n                if (fns[i])\n                    fns[i](target, pt, type, evt);\n            }\n        }\n    }\n    static _addHandler(fns, fn) {\n        if (fn) {\n            fns.push(fn);\n            return fns.length - 1;\n        }\n        else {\n            return -1;\n        }\n    }\n    static _removeHandler(fns, index) {\n        if (index >= 0 && index < fns.length) {\n            let temp = fns.length;\n            fns.splice(index, 1);\n            return (temp > fns.length);\n        }\n        else {\n            return false;\n        }\n    }\n}\nUI._counter = 0;\nexports.UI = UI;\nclass UIButton extends UI {\n    constructor(group, shape, states = {}, id) {\n        super(group, shape, states, id);\n        this._hoverID = -1;\n        if (states.hover === undefined)\n            this._states['hover'] = false;\n        if (states.clicks === undefined)\n            this._states['clicks'] = 0;\n        const UA = exports.UIPointerActions;\n        this.on(UA.up, (target, pt, type, evt) => {\n            this.state('clicks', this._states.clicks + 1);\n        });\n        this.on(UA.move, (target, pt, type, evt) => {\n            let hover = this._within(pt);\n            if (hover && !this._states.hover) {\n                this.state('hover', true);\n                UI._trigger(this._actions[UA.enter], this, pt, UA.enter, evt);\n                var _capID = this.hold(UA.move);\n                this._hoverID = this.on(UA.move, (t, p) => {\n                    if (!this._within(p) && !this.state('dragging')) {\n                        this.state('hover', false);\n                        UI._trigger(this._actions[UA.leave], this, pt, UA.leave, evt);\n                        this.off(UA.move, this._hoverID);\n                        this.unhold(_capID);\n                    }\n                });\n            }\n        });\n    }\n    onClick(fn) {\n        return this.on(exports.UIPointerActions.up, fn);\n    }\n    offClick(id) {\n        return this.off(exports.UIPointerActions.up, id);\n    }\n    onContextMenu(fn) {\n        return this.on(exports.UIPointerActions.contextmenu, fn);\n    }\n    offContextMenu(id) {\n        return this.off(exports.UIPointerActions.contextmenu, id);\n    }\n    onHover(enter, leave) {\n        var ids = [undefined, undefined];\n        if (enter)\n            ids[0] = this.on(exports.UIPointerActions.enter, enter);\n        if (leave)\n            ids[1] = this.on(exports.UIPointerActions.leave, leave);\n        return ids;\n    }\n    offHover(enterID, leaveID) {\n        var s = [false, false];\n        if (enterID === undefined || enterID >= 0)\n            s[0] = this.off(exports.UIPointerActions.enter, enterID);\n        if (leaveID === undefined || leaveID >= 0)\n            s[1] = this.off(exports.UIPointerActions.leave, leaveID);\n        return s;\n    }\n}\nexports.UIButton = UIButton;\nclass UIDragger extends UIButton {\n    constructor(group, shape, states = {}, id) {\n        super(group, shape, states, id);\n        this._draggingID = -1;\n        this._moveHoldID = -1;\n        this._dropHoldID = -1;\n        this._upHoldID = -1;\n        if (states.dragging === undefined)\n            this._states['dragging'] = false;\n        if (states.moved === undefined)\n            this._states['moved'] = false;\n        if (states.offset === undefined)\n            this._states['offset'] = new Pt_1.Pt();\n        const UA = exports.UIPointerActions;\n        this.on(UA.down, (target, pt, type, evt) => {\n            if (this._moveHoldID === -1) {\n                this.state('dragging', true);\n                this.state('offset', new Pt_1.Pt(pt).subtract(target.group[0]));\n                this._moveHoldID = this.hold(UA.move);\n            }\n            if (this._dropHoldID === -1) {\n                this._dropHoldID = this.hold(UA.drop);\n            }\n            if (this._upHoldID === -1) {\n                this._upHoldID = this.hold(UA.up);\n            }\n            if (this._draggingID === -1) {\n                this._draggingID = this.on(UA.move, (t, p) => {\n                    if (this.state('dragging')) {\n                        UI._trigger(this._actions[UA.uidrag], t, p, UA.uidrag, evt);\n                        this.state('moved', true);\n                    }\n                });\n            }\n        });\n        const endDrag = (target, pt, type, evt) => {\n            this.state('dragging', false);\n            this.off(UA.move, this._draggingID);\n            this._draggingID = -1;\n            this.unhold(this._moveHoldID);\n            this._moveHoldID = -1;\n            this.unhold(this._dropHoldID);\n            this._dropHoldID = -1;\n            this.unhold(this._upHoldID);\n            this._upHoldID = -1;\n            if (this.state('moved')) {\n                UI._trigger(this._actions[UA.uidrop], target, pt, UA.uidrop, evt);\n                this.state('moved', false);\n            }\n        };\n        this.on(UA.drop, endDrag);\n        this.on(UA.up, endDrag);\n        this.on(UA.out, endDrag);\n    }\n    onDrag(fn) {\n        return this.on(exports.UIPointerActions.uidrag, fn);\n    }\n    offDrag(id) {\n        return this.off(exports.UIPointerActions.uidrag, id);\n    }\n    onDrop(fn) {\n        return this.on(exports.UIPointerActions.uidrop, fn);\n    }\n    offDrop(id) {\n        return this.off(exports.UIPointerActions.uidrop, id);\n    }\n}\nexports.UIDragger = UIDragger;\n\n\n/***/ }),\n\n/***/ \"./src/Util.ts\":\n/*!*********************!*\\\n  !*** ./src/Util.ts ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nexports.Const = {\n    xy: \"xy\",\n    yz: \"yz\",\n    xz: \"xz\",\n    xyz: \"xyz\",\n    horizontal: 0,\n    vertical: 1,\n    identical: 0,\n    right: 4,\n    bottom_right: 5,\n    bottom: 6,\n    bottom_left: 7,\n    left: 8,\n    top_left: 1,\n    top: 2,\n    top_right: 3,\n    epsilon: 0.0001,\n    max: Number.MAX_VALUE,\n    min: Number.MIN_VALUE,\n    pi: Math.PI,\n    two_pi: 6.283185307179586,\n    half_pi: 1.5707963267948966,\n    quarter_pi: 0.7853981633974483,\n    one_degree: 0.017453292519943295,\n    rad_to_deg: 57.29577951308232,\n    deg_to_rad: 0.017453292519943295,\n    gravity: 9.81,\n    newton: 0.10197,\n    gaussian: 0.3989422804014327\n};\nclass Util {\n    static warnLevel(lv) {\n        if (lv) {\n            Util._warnLevel = lv;\n        }\n        return Util._warnLevel;\n    }\n    static getArgs(args) {\n        if (args.length < 1)\n            return [];\n        let pos = [];\n        let isArray = Array.isArray(args[0]) || ArrayBuffer.isView(args[0]);\n        if (typeof args[0] === 'number') {\n            pos = Array.prototype.slice.call(args);\n        }\n        else if (typeof args[0] === 'object' && !isArray) {\n            let a = [\"x\", \"y\", \"z\", \"w\"];\n            let p = args[0];\n            for (let i = 0; i < a.length; i++) {\n                if ((p.length && i >= p.length) || !(a[i] in p))\n                    break;\n                pos.push(p[a[i]]);\n            }\n        }\n        else if (isArray) {\n            pos = [].slice.call(args[0]);\n        }\n        return pos;\n    }\n    static warn(message = \"error\", defaultReturn = undefined) {\n        if (Util.warnLevel() == \"error\") {\n            throw new Error(message);\n        }\n        else if (Util.warnLevel() == \"warn\") {\n            console.warn(message);\n        }\n        return defaultReturn;\n    }\n    static randomInt(range, start = 0) {\n        return Math.floor(Math.random() * range) + start;\n    }\n    static split(pts, size, stride, loopBack = false, matchSize = true) {\n        let chunks = [];\n        let part = [];\n        let st = stride || size;\n        let index = 0;\n        if (pts.length <= 0 || st <= 0)\n            return [];\n        while (index < pts.length) {\n            part = [];\n            for (let k = 0; k < size; k++) {\n                if (loopBack) {\n                    part.push(pts[(index + k) % pts.length]);\n                }\n                else {\n                    if (index + k >= pts.length)\n                        break;\n                    part.push(pts[index + k]);\n                }\n            }\n            index += st;\n            if (!matchSize || (matchSize && part.length === size))\n                chunks.push(part);\n        }\n        return chunks;\n    }\n    static flatten(pts, flattenAsGroup = true) {\n        let arr = (flattenAsGroup) ? new Pt_1.Group() : new Array();\n        return arr.concat.apply(arr, pts);\n    }\n    static combine(a, b, op) {\n        let result = [];\n        for (let i = 0, len = a.length; i < len; i++) {\n            for (let k = 0, lenB = b.length; k < lenB; k++) {\n                result.push(op(a[i], b[k]));\n            }\n        }\n        return result;\n    }\n    static zip(arrays) {\n        let z = [];\n        for (let i = 0, len = arrays[0].length; i < len; i++) {\n            let p = [];\n            for (let k = 0; k < arrays.length; k++) {\n                p.push(arrays[k][i]);\n            }\n            z.push(p);\n        }\n        return z;\n    }\n    static stepper(max, min = 0, stride = 1, callback) {\n        let c = min;\n        return function () {\n            c += stride;\n            if (c >= max) {\n                c = min + (c - max);\n            }\n            if (callback)\n                callback(c);\n            return c;\n        };\n    }\n    static forRange(fn, range, start = 0, step = 1) {\n        let temp = [];\n        for (let i = start, len = range; i < len; i += step) {\n            temp[i] = fn(i);\n        }\n        return temp;\n    }\n    static load(url, callback) {\n        var request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.onload = function () {\n            if (request.status >= 200 && request.status < 400) {\n                callback(request.responseText, true);\n            }\n            else {\n                callback(`Server error (${request.status}) when loading \"${url}\"`, false);\n            }\n        };\n        request.onerror = function () {\n            callback(`Unknown network error`, false);\n        };\n        request.send();\n    }\n}\nUtil._warnLevel = \"mute\";\nexports.Util = Util;\n\n\n/***/ }),\n\n/***/ \"./src/_lib.ts\":\n/*!*********************!*\\\n  !*** ./src/_lib.ts ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(/*! ./Canvas */ \"./src/Canvas.ts\"));\n__export(__webpack_require__(/*! ./Create */ \"./src/Create.ts\"));\n__export(__webpack_require__(/*! ./Form */ \"./src/Form.ts\"));\n__export(__webpack_require__(/*! ./LinearAlgebra */ \"./src/LinearAlgebra.ts\"));\n__export(__webpack_require__(/*! ./Num */ \"./src/Num.ts\"));\n__export(__webpack_require__(/*! ./Op */ \"./src/Op.ts\"));\n__export(__webpack_require__(/*! ./Pt */ \"./src/Pt.ts\"));\n__export(__webpack_require__(/*! ./Space */ \"./src/Space.ts\"));\n__export(__webpack_require__(/*! ./Color */ \"./src/Color.ts\"));\n__export(__webpack_require__(/*! ./Util */ \"./src/Util.ts\"));\n__export(__webpack_require__(/*! ./Dom */ \"./src/Dom.ts\"));\n__export(__webpack_require__(/*! ./Svg */ \"./src/Svg.ts\"));\n__export(__webpack_require__(/*! ./Typography */ \"./src/Typography.ts\"));\n__export(__webpack_require__(/*! ./Physics */ \"./src/Physics.ts\"));\n__export(__webpack_require__(/*! ./UI */ \"./src/UI.ts\"));\n__export(__webpack_require__(/*! ./Play */ \"./src/Play.ts\"));\nconst _Canvas = __webpack_require__(/*! ./Canvas */ \"./src/Canvas.ts\");\nexports.namespace = (scope) => {\n    let lib = module.exports;\n    for (let k in lib) {\n        if (k != \"namespace\") {\n            scope[k] = lib[k];\n        }\n    }\n};\nexports.quickStart = (id, bg = \"#9ab\") => {\n    let s = window;\n    exports.namespace(s);\n    s.space = new _Canvas.CanvasSpace(id).setup({ bgcolor: bg, resize: true, retina: true });\n    s.form = s.space.getForm();\n    return function (animate = null, start = null, action = null, resize = null) {\n        s.space.add({\n            start: start,\n            animate: animate,\n            resize: resize,\n            action: action,\n        });\n        s.space.bindMouse().bindTouch().play();\n    };\n};\n\n\n/***/ })\n\n/******/ });\n});\n","import { Rectangle, Num, Triangle } from \"../lib/pts\";\n\nconst timeFactor = 5000;\n\nexport default function basic(){\n\n    space.add({\n        animate: (time) => {\n            const rect = Rectangle.fromCenter(space.center, space.size.$divide(2));\n            const polygon = Rectangle.corners(rect);\n\n            // Num.cycle gives us cycled values -\n            // time % timeFactor / timeFactor is used to normalize the time to be between 0 and 1 (on a scale of 0 to timeFactor)\n            // -0.5 will make the value cycle between -0.5 and 0.5\n            const shearing = (Num.cycle(time % timeFactor / timeFactor) - 0.5) / 2;\n\n            // make the polygon slanted (sheared)\n            polygon.shear2D(shearing, space.center);\n\n            // get the polygon (4 points) segments (4 groups of 2 points - 4 lines)\n            // these segments will be the base of the triangles\n            const triangles = polygon.segments(2, 1, true);\n\n            // add to each triangle it's 3rd point - the cursor (space.pointer)\n            triangles.forEach(tri => {\n                tri.push(space.pointer);\n            });\n\n            // we map each triangle, and use the Triangle.incircle method, to create a circle\n            const circles = triangles.map(tri => {\n                return Triangle.incircle(tri);\n            });\n\n\n            // paint all the elements -\n            // sheared polygon\n            form.fillOnly('blue').polygon(polygon);\n            // base rectangle\n            form.strokeOnly('red', 2).rect(rect);\n            // triangles\n            form.strokeOnly('green', 2).polygons(triangles);\n            // circles\n            form.fill('deeppink').stroke('black', 1).circles(circles);\n            // pointer point\n            form.fill('red').stroke('black', 1).point(space.pointer, 10, 'circle');\n        }\n    });\n\n    space.bindMouse().bindTouch().play();\n}","import { Create, Form, Pt, Bound, Circle, Num } from \"../lib/pts\";\n\nexport default function square(){\n\n    const PTS_COUNT = 2500;\n    const CIRCLE_RADIUS = 150;\n    const colors = ['#0074D9', '#FFDC00', '#FF4136', '#01FF70'];\n\n    /**\n     * before the animation the space has wrong bound,\n     * so we're making a clone of it, and changing its topLeft.\n     * changing the space.bound itself will cause the points to be rendered wrong\n     */\n    const boundSpace = space.bound.clone();\n    boundSpace.topLeft = [0,0];\n\n    // create an array of random pts in bound\n    const points = Create.distributeRandom(boundSpace, PTS_COUNT);\n\n\n    space.clear('#123');\n    space.add(animation);\n\n    function animation(time){\n\n        // calculate absolute distance from pointer to center\n        const distanceFromCenter = Math.abs(space.pointer.x - space.center.x);\n        /**\n         * dividing the distance by the center value will give us normalized value -\n         * when pointer.x is 0 distance is the value of space.center (abs(0 - center.x)),\n         * same for when pointer.x is at max.\n         *\n         * dividing that value (equal to center.x on limits) by the same value will\n         * make the limits return a value of 1, and the center return value of 0\n         */\n        const normalizedDistance = distanceFromCenter / space.center.x;\n\n        // radius of 1 is too small, so we multiply it by 150, just do it will be visible\n        // we want to have a visible circle in the center as well, so we add 70\n        const radius = normalizedDistance * 150 + 70;\n\n        // create a circle with variable radius around the pointer\n        const rangeAroundPointer = Circle.fromCenter(space.pointer, radius);\n\n        const sortedPts = {\n            in: [],\n            out: []\n        }\n\n        points.forEach((pt, i) => {\n            // give each point a set color, and sort them to 'in range' and 'out of range'\n            // i will always be the same for each pt, so the color will be the same\n            pt.ptColor = colors[i % colors.length];\n            sortedPts[Circle.withinBound(rangeAroundPointer, pt) ? 'in' : 'out'].push(pt);\n        });\n\n        sortedPts.in.forEach((pt, i) => {\n            /**\n             * we want the points to be larger when close to the pointer,\n             * and have a fish-eye lens effect\n             */\n\n            // get distance from pt to pointer\n            const dist = pt.$subtract(space.pointer).magnitude();\n            // when pt is as far as the radius - return 0\n            // when pt is rally close to pointer - (radius - dist) / radius will return 1\n            const normalizedDist = (radius - dist) / radius;\n\n            // create a new pt, based on the original pt.\n            // add(pointer) gives the new pts an origin - the pointer\n            // (using space.center) will make the pts form around center\n            // scale gives it the distance from the origin pt (pointer)\n            // (using 1+norm, so the scale will be 1.3, 1.7 etc... (norm is 0 - 1))\n            // let p = pt.$subtract( space.pointer ).scale( 1 + normalizedDist ).add(space.pointer);\n            let p = pt.$subtract( space.pointer ).scale( 1 + normalizedDist ).add(space.pointer);\n\n            // render the pt. giving radius of (norm * 25), because norm is 0-1\n            form.fillOnly( pt.ptColor ).point( p, normalizedDist*25, \"circle\" );\n        });\n\n        // render non enlarged pts.\n        form.fillOnly('#DDD').points(sortedPts.out, 1, 'circle');\n    }\n\n    space.bindMouse().bindTouch().play();\n}\n","import basic from \"./1_basic\";\nimport square from \"./2_squeare\";\n\nconst examples = [\n    {\n        title: 'basic',\n        play: basic\n    },\n    {\n        title: 'square',\n        play: square\n    }\n];\n\nexport default examples;","import { CanvasSpace } from \"./lib/pts\";\nimport examples from \"./examples\";\n\nconst FIRST_EXAMPLE = 0;\n\nwindow.space = new CanvasSpace('#canvasContainer');\nwindow.form = space.getForm();\n\nconst nav = document.querySelector('.container nav');\n\nexamples.forEach((example, i) => {\n\n    const button = document.createElement('button');\n    button.innerText = example.title;\n    button.setAttribute('onclick',`playExample(${i})`);\n    button.classList.add('nav-button');\n\n    nav.appendChild(button);\n});\n\nwindow.playExample = function playExample(exampleIdx){\n    space.removeAll();\n    colorCorrectNavButton(exampleIdx);\n    examples[exampleIdx].play();\n}\n\nfunction colorCorrectNavButton(selected){\n    Array.from(document.querySelectorAll('.nav-button')).forEach((button, i) => {\n        button.classList.toggle('active', i === selected);\n    });\n}\n\nsetTimeout(() => {\n    playExample(FIRST_EXAMPLE);\n},100)"]}